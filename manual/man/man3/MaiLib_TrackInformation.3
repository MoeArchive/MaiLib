.TH "MaiLib.TrackInformation" 3 "Sun Feb 5 2023" "Version 1.0.4.0" "MaiLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaiLib.TrackInformation \- Use xml to store track information\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MaiLib\&.IXmlUtility\&.
.PP
Inherited by \fBMaiLib\&.XmlInformation\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTrackInformation\fP ()"
.br
.RI "Empty constructor\&. "
.ti -1c
.RI "void \fBFormatInformation\fP ()"
.br
.RI "Add in necessary nodes in information\&. "
.ti -1c
.RI "void \fBFormatDummyInformation\fP ()"
.br
.RI "Add in necessary nodes in information for dummy chart\&. "
.ti -1c
.RI "XmlNodeList \fBGetMatchNodes\fP (string name)"
.br
.RI "Return the XML node that has same name with\&. "
.ti -1c
.RI "void \fBSave\fP (string location)"
.br
.RI "Save the information to given path\&. "
.ti -1c
.RI "abstract void \fBUpdate\fP ()"
.br
.RI "Update information\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static string \fBCompensateZero\fP (string intake)"
.br
.RI "Compensate 0 for music IDs\&. "
.ti -1c
.RI "static string \fBCompensateShortZero\fP (string intake)"
.br
.RI "Compensate 0 for short music IDs\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static readonly string[] \fBlevel\fP = { '1', '2', '3', '4', '5', '6', '7', '7+', '8', '8+', '9', '9+', '10', '10+', '11', '11+', '12', '12+', '13', '13+', '14', '14+', '15', '15+' }"
.br
.RI "Stores proper difficulties\&. "
.ti -1c
.RI "static readonly string[] \fBdifficulty\fP = { 'Basic', 'Advance', 'Expert', 'Master', 'Remaster', 'Utage', 'Easy' }"
.br
.ti -1c
.RI "static readonly string[] \fBaddVersion\fP = { 'Ver1\&.00\&.00'}"
.br
.ti -1c
.RI "static readonly string[] \fBgenre\fP = { '東方Project', 'maimai' }"
.br
.RI "Stores the genre name used in information\&. "
.ti -1c
.RI "static readonly string[] \fBversion\fP = { 'maimai', 'maimai PLUS', 'maimai GreeN', 'maimai GreeN PLUS', 'maimai ORANGE', 'maimai ORANGE PLUS', 'maimai PiNK', 'maimai PiNK PLUS', 'maimai MURASAKi', 'maimai MURASAKi PLUS', 'maimai MiLK', 'maimai MiLK PLUS', 'maimai FiNALE', 'maimai DX', 'maimai DX PLUS', 'maimai DX Splash', 'maimai DX Splash PLUS', 'maimai DX UNiVERSE', 'maimai DX UNiVERSE PLUS' }"
.br
.RI "Stores prover maimai versions\&. "
.ti -1c
.RI "static readonly string[] \fBshortVersion\fP = { 'maimai', 'PLUS', 'GreeN', 'GreeN PLUS', 'ORANGE', 'ORANGE PLUS', 'PiNK', 'PiNK PLUS', 'MURASAKi', 'MURASAKi PLUS', 'MiLK', 'MiLK PLUS', 'FiNALE', 'DX', 'DX PLUS', 'DX Splash', 'DX Splash PLUS', 'DX UNiVERSE', 'DX UNiVERSE PLUS' }"
.br
.ti -1c
.RI "static string[] \fBversionArray\fP"
.br
.ti -1c
.RI "static Dictionary< string, string > \fBnetOpenNameDic\fP"
.br
.ti -1c
.RI "static Dictionary< string, string > \fBreleaseTagNameDic\fP"
.br
.ti -1c
.RI "static Dictionary< string, string > \fBrightsInfoDic\fP"
.br
.ti -1c
.RI "static Dictionary< string, string > \fBartistNameDic\fP"
.br
.ti -1c
.RI "static Dictionary< string, string > \fBaddVersionDic\fP"
.br
.ti -1c
.RI "static Dictionary< string, string > \fBeventNameDic\fP"
.br
.ti -1c
.RI "static Dictionary< string, string > \fBsubEventNameDic\fP"
.br
.ti -1c
.RI "static Dictionary< string, string > \fBnotesDesignerDic\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "string \fBTrackName\fP\fC [get, set]\fP"
.br
.RI "Return the track name\&. "
.ti -1c
.RI "string \fBTrackSortName\fP\fC [get, set]\fP"
.br
.RI "Return the sort name (basically English or Katakana) "
.ti -1c
.RI "string \fBTrackID\fP\fC [get, set]\fP"
.br
.RI "Return the track ID (4 digit, having 00 for SD 01 for DX) "
.ti -1c
.RI "string \fBTrackGenre\fP\fC [get, set]\fP"
.br
.RI "Return the track genre (By default cabinet 6 categories) "
.ti -1c
.RI "string \fBTrackBPM\fP\fC [get, set]\fP"
.br
.RI "Return the track global BPM\&. "
.ti -1c
.RI "string \fBTrackComposer\fP\fC [get, set]\fP"
.br
.RI "Return the track composer\&. "
.ti -1c
.RI "string \fBTrackSymbolicLevel\fP\fC [get, set]\fP"
.br
.RI "Return the most representative level of the track = set by default master\&. "
.ti -1c
.RI "string[] \fBTrackLevels\fP\fC [get, set]\fP"
.br
.RI "Return track levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage]\&. "
.ti -1c
.RI "string[] \fBTrackDecimalLevels\fP\fC [get, set]\fP"
.br
.RI "Return track decimal levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage] * Utage returns utage level\&. "
.ti -1c
.RI "string \fBDXChartTrackPathSuffix\fP\fC [get]\fP"
.br
.RI "Return the suffix of Track title for export\&. "
.ti -1c
.RI "string \fBStandardDeluxePrefix\fP\fC [get]\fP"
.br
.RI "Returns if the track is Standard or Deluxe\&. "
.ti -1c
.RI "string \fBStandardDeluxeSuffix\fP\fC [get]\fP"
.br
.RI "Title suffix for better distinguish\&. "
.ti -1c
.RI "bool \fBIsDXChart\fP\fC [get]\fP"
.br
.RI "See if the chart is DX chart\&. "
.ti -1c
.RI "string \fBTrackVersion\fP\fC [get, set]\fP"
.br
.RI "Return this\&.TrackVersion\&. "
.ti -1c
.RI "string \fBTrackVersionNumber\fP\fC [get, set]\fP"
.br
.RI "Return this\&.TrackVersionNumber\&. "
.ti -1c
.RI "XmlDocument \fBTakeInValue\fP\fC [get, set]\fP"
.br
.RI "Give access to TakeInValue if necessary\&. "
.ti -1c
.RI "Dictionary< string, string > \fBInformation\fP\fC [get, set]\fP"
.br
.RI "Give access to this\&.Information\&. "
.in -1c
.SH "Detailed Description"
.PP 
Use xml to store track information\&. 
.PP
Definition at line \fB10\fP of file \fBTrackInformation\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MaiLib\&.TrackInformation\&.TrackInformation ()"

.PP
Empty constructor\&. 
.PP
Definition at line \fB1381\fP of file \fBTrackInformation\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "static string MaiLib\&.TrackInformation\&.CompensateShortZero (string intake)\fC [static]\fP"

.PP
Compensate 0 for short music IDs\&. 
.PP
\fBParameters\fP
.RS 4
\fIintake\fP Music ID
.RE
.PP
\fBReturns\fP
.RS 4
0\&.\&.+#Music ID and |Music ID|==4
.RE
.PP

.PP
Definition at line \fB1822\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "static string MaiLib\&.TrackInformation\&.CompensateZero (string intake)\fC [static]\fP"

.PP
Compensate 0 for music IDs\&. 
.PP
\fBParameters\fP
.RS 4
\fIintake\fP Music ID
.RE
.PP
\fBReturns\fP
.RS 4
0\&.\&.+#Music ID and |Music ID|==6
.RE
.PP

.PP
Definition at line \fB1800\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "void MaiLib\&.TrackInformation\&.FormatDummyInformation ()"

.PP
Add in necessary nodes in information for dummy chart\&. 
.PP
Definition at line \fB1462\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "void MaiLib\&.TrackInformation\&.FormatInformation ()"

.PP
Add in necessary nodes in information\&. 
.PP
Definition at line \fB1416\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "XmlNodeList MaiLib\&.TrackInformation\&.GetMatchNodes (string name)"

.PP
Return the XML node that has same name with\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line \fB1725\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "void MaiLib\&.TrackInformation\&.Save (string location)"

.PP
Save the information to given path\&. 
.PP
\fBParameters\fP
.RS 4
\fIlocation\fP Path to save the information
.RE
.PP

.PP
Definition at line \fB1785\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "abstract void MaiLib\&.TrackInformation\&.Update ()\fC [pure virtual]\fP"

.PP
Update information\&. 
.PP
Implemented in \fBMaiLib\&.XmlInformation\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "readonly string [] MaiLib\&.TrackInformation\&.addVersion = { 'Ver1\&.00\&.00'}\fC [static]\fP"

.PP
Definition at line \fB20\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.addVersionDic\fC [static]\fP"
\fBInitial value:\fP.PP
.nf
= new Dictionary<string, string>{
{"0", "maimai"},
{"1", "maimaiPLUS"},
{"2", "GreeN"},
{"3", "GreeNPLUS"},
{"4", "ORANGE"},
{"5", "ORANGEPLUS"},
{"6", "PiNK"},
{"7", "PiNKPLUS"},
{"8", "MURASAKi"},
{"9", "MURASAKiPLUS"},
{"10", "MiLK"},
{"11", "MiLKPLUS"},
{"12", "FiNALE"},
{"13", "maimaDX"},
{"14", "maimaDXPLUS"},
{"15", "Splash"},
{"16", "SplashPLUS"},
{"17", "UNiVERSE"},
{"18", "UNiVERSEPLUS"},
}
.fi

.PP
Definition at line \fB1234\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.artistNameDic\fC [static]\fP"

.PP
Definition at line \fB515\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "readonly string [] MaiLib\&.TrackInformation\&.difficulty = { 'Basic', 'Advance', 'Expert', 'Master', 'Remaster', 'Utage', 'Easy' }\fC [static]\fP"

.PP
Definition at line \fB18\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.eventNameDic\fC [static]\fP"
\fBInitial value:\fP.PP
.nf
= new Dictionary<string, string>{
{"1", "無期限常時解放"},
{"21091621", "210916_02_1"},
{"21111225", "211112_02_5"},
{"22011422", "220114_02_2"},
{"22030321", "220303_02_1"},
{"22032421", "220324_02_1"},
{"22040121", "220401_02_1"},
{"22040821", "220408_02_1"},
{"22041521", "220415_02_1"},
{"22041522", "220415_02_2"},
{"22042821", "220428_02_1"},
{"22042822", "220428_02_2"},
}
.fi

.PP
Definition at line \fB1255\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "readonly string [] MaiLib\&.TrackInformation\&.genre = { '東方Project', 'maimai' }\fC [static]\fP"

.PP
Stores the genre name used in information\&. 103 = Touhou, 105 = maimai
.PP
Definition at line \fB26\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "readonly string [] MaiLib\&.TrackInformation\&.level = { '1', '2', '3', '4', '5', '6', '7', '7+', '8', '8+', '9', '9+', '10', '10+', '11', '11+', '12', '12+', '13', '13+', '14', '14+', '15', '15+' }\fC [static]\fP"

.PP
Stores proper difficulties\&. 1-15 Maimai level
.PP
Definition at line \fB16\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.netOpenNameDic\fC [static]\fP"

.PP
Definition at line \fB292\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.notesDesignerDic\fC [static]\fP"

.PP
Definition at line \fB1274\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.releaseTagNameDic\fC [static]\fP"
\fBInitial value:\fP.PP
.nf
= new Dictionary<string, string>{
{"1", "Ver1\&.00\&.00"},
{"501", "Ver1\&.05\&.00"},
{"1001", "Ver1\&.10\&.00"},
{"1501", "Ver1\&.15\&.00"},
{"2001", "Ver1\&.20\&.00"},
{"2501", "Ver1\&.25\&.00"},
}
.fi

.PP
Definition at line \fB374\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.rightsInfoDic\fC [static]\fP"

.PP
Definition at line \fB382\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "readonly string [] MaiLib\&.TrackInformation\&.shortVersion = { 'maimai', 'PLUS', 'GreeN', 'GreeN PLUS', 'ORANGE', 'ORANGE PLUS', 'PiNK', 'PiNK PLUS', 'MURASAKi', 'MURASAKi PLUS', 'MiLK', 'MiLK PLUS', 'FiNALE', 'DX', 'DX PLUS', 'DX Splash', 'DX Splash PLUS', 'DX UNiVERSE', 'DX UNiVERSE PLUS' }\fC [static]\fP"

.PP
Definition at line \fB34\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.subEventNameDic\fC [static]\fP"
\fBInitial value:\fP.PP
.nf
= new Dictionary<string, string>{
{"0", "解放なし"},
{"1", "無期限常時解放"},
{"22032421", "220324_02_1"},
}
.fi

.PP
Definition at line \fB1269\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "readonly string [] MaiLib\&.TrackInformation\&.version = { 'maimai', 'maimai PLUS', 'maimai GreeN', 'maimai GreeN PLUS', 'maimai ORANGE', 'maimai ORANGE PLUS', 'maimai PiNK', 'maimai PiNK PLUS', 'maimai MURASAKi', 'maimai MURASAKi PLUS', 'maimai MiLK', 'maimai MiLK PLUS', 'maimai FiNALE', 'maimai DX', 'maimai DX PLUS', 'maimai DX Splash', 'maimai DX Splash PLUS', 'maimai DX UNiVERSE', 'maimai DX UNiVERSE PLUS' }\fC [static]\fP"

.PP
Stores prover maimai versions\&. Version name of each generation of Maimai
.PP
Definition at line \fB32\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string [] MaiLib\&.TrackInformation\&.versionArray\fC [static]\fP"

.PP
Definition at line \fB36\fP of file \fBTrackInformation\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "string MaiLib\&.TrackInformation\&.DXChartTrackPathSuffix\fC [get]\fP"

.PP
Return the suffix of Track title for export\&. this\&.TrackSubstituteName'_DX' if is DX chart
.PP
Definition at line \fB1669\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "Dictionary<string, string> MaiLib\&.TrackInformation\&.Information\fC [get]\fP, \fC [set]\fP"

.PP
Give access to this\&.Information\&. this\&.Information as Dictionary
.PP
Definition at line \fB1775\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "bool MaiLib\&.TrackInformation\&.IsDXChart\fC [get]\fP"

.PP
See if the chart is DX chart\&. True if is DX, false if SD
.PP
Definition at line \fB1711\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.StandardDeluxePrefix\fC [get]\fP"

.PP
Returns if the track is Standard or Deluxe\&. SD if standard, DX if deluxe
.PP
Definition at line \fB1684\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.StandardDeluxeSuffix\fC [get]\fP"

.PP
Title suffix for better distinguish\&. [SD] if Standard and [DX] if Deluxe
.PP
Definition at line \fB1699\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "XmlDocument MaiLib\&.TrackInformation\&.TakeInValue\fC [get]\fP, \fC [set]\fP"

.PP
Give access to TakeInValue if necessary\&. this\&.TakeInValue as XMLDocument
.PP
Definition at line \fB1765\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackBPM\fC [get]\fP, \fC [set]\fP"

.PP
Return the track global BPM\&. this\&.TrackBPM
.PP
Definition at line \fB1549\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackComposer\fC [get]\fP, \fC [set]\fP"

.PP
Return the track composer\&. this\&.TrackComposer
.PP
Definition at line \fB1559\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string [] MaiLib\&.TrackInformation\&.TrackDecimalLevels\fC [get]\fP, \fC [set]\fP"

.PP
Return track decimal levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage] * Utage returns utage level\&. 
.PP
Definition at line \fB1640\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackGenre\fC [get]\fP, \fC [set]\fP"

.PP
Return the track genre (By default cabinet 6 categories) this\&.TrackGenre
.PP
Definition at line \fB1539\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackID\fC [get]\fP, \fC [set]\fP"

.PP
Return the track ID (4 digit, having 00 for SD 01 for DX) this\&.TrackID
.PP
Definition at line \fB1529\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string [] MaiLib\&.TrackInformation\&.TrackLevels\fC [get]\fP, \fC [set]\fP"

.PP
Return track levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage]\&. 
.PP
Definition at line \fB1612\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackName\fC [get]\fP, \fC [set]\fP"

.PP
Return the track name\&. this\&.TrackName
.PP
Definition at line \fB1509\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackSortName\fC [get]\fP, \fC [set]\fP"

.PP
Return the sort name (basically English or Katakana) this\&.SortName
.PP
Definition at line \fB1519\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackSymbolicLevel\fC [get]\fP, \fC [set]\fP"

.PP
Return the most representative level of the track = set by default master\&. this\&.TrackLevel
.PP
Definition at line \fB1569\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackVersion\fC [get]\fP, \fC [set]\fP"

.PP
Return this\&.TrackVersion\&. this\&.TrackVersion
.PP
Definition at line \fB1735\fP of file \fBTrackInformation\&.cs\fP\&.
.SS "string MaiLib\&.TrackInformation\&.TrackVersionNumber\fC [get]\fP, \fC [set]\fP"

.PP
Return this\&.TrackVersionNumber\&. this\&.TrackVersionNumber
.PP
Definition at line \fB1750\fP of file \fBTrackInformation\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MaiLib from the source code\&.
