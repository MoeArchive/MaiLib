.TH "MaiLib.Note" 3 "Sun Feb 5 2023" "Version 1.0.4.0" "MaiLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaiLib.Note \- Basic note\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits IEquatable< Note >, \fBMaiLib\&.INote\fP, and IComparable\&.
.PP
Inherited by \fBMaiLib\&.BPMChange\fP, \fBMaiLib\&.Hold\fP, \fBMaiLib\&.MeasureChange\fP, MaiLib\&.Rest, and \fBMaiLib\&.Slide\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNote\fP ()"
.br
.RI "Construct an empty note\&. "
.ti -1c
.RI "\fBNote\fP (\fBNote\fP inTake)"
.br
.RI "Construct a note from other note\&. "
.ti -1c
.RI "abstract bool \fBCheckValidity\fP ()"
.br
.RI "See if current note has all information needed\&. "
.ti -1c
.RI "abstract string \fBCompose\fP (int format)"
.br
.RI "Convert note to string for writing\&. "
.ti -1c
.RI "abstract \fBNote\fP \fBNewInstance\fP ()"
.br
.ti -1c
.RI "int \fBCompareTo\fP (Object? obj)"
.br
.ti -1c
.RI "bool \fBEquals\fP (\fBNote\fP? other)"
.br
.ti -1c
.RI "virtual void \fBFlip\fP (string method)"
.br
.RI "Flip the note according to the method specified\&. "
.ti -1c
.RI "bool \fBUpdate\fP ()"
.br
.RI "Updates this note instance\&. "
.ti -1c
.RI "void \fBReplaceBPMChanges\fP (\fBBPMChanges\fP changeTable)"
.br
.RI "Replace this\&.BPMChangeNotes from change table given\&. "
.ti -1c
.RI "void \fBReplaceBPMChanges\fP (List< \fBBPMChange\fP > changeTable)"
.br
.RI "Replace this\&.BPMChangeNotes from change table given\&. "
.ti -1c
.RI "string \fBGenerateAppropriateLength\fP (int length)"
.br
.RI "Generate appropriate length for hold and slide\&. "
.ti -1c
.RI "string \fBGenerateAppropriateLength\fP (int length, double bpm)"
.br
.RI "Generate appropriate length for hold and slide\&. "
.ti -1c
.RI "double \fBGetTimeStamp\fP (int overallTick)"
.br
.RI "Give time stamp given overall tick\&. "
.in -1c
.in +1c
.ti -1c
.RI "string \fBCompose\fP (int format)"
.br
.RI "Convert note to string for writing\&. "
.ti -1c
.RI "bool \fBCheckValidity\fP ()"
.br
.RI "See if current note has all information needed\&. "
.ti -1c
.RI "bool \fBUpdate\fP ()"
.br
.RI "Updates this note instance\&. "
.ti -1c
.RI "void \fBFlip\fP (string method)"
.br
.RI "Flip the note according to the method specified\&. "
.ti -1c
.RI "double \fBGetTimeStamp\fP (int overallTick)"
.br
.RI "Give time stamp given overall tick\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static double \fBGetBPMTimeUnit\fP (double bpm)"
.br
.RI "Get BPM Time tick unit of bpm\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "string \fBNoteType\fP\fC [get, set]\fP"
.br
.RI "Access NoteType\&. "
.ti -1c
.RI "string \fBKey\fP\fC [get, set]\fP"
.br
.RI "Access Key\&. "
.ti -1c
.RI "int \fBKeyNum\fP\fC [get]\fP"
.br
.RI "Get the number value of Key\&. "
.ti -1c
.RI "string \fBKeyGroup\fP\fC [get]\fP"
.br
.RI "Get the key group of the key - only for touch notes\&. "
.ti -1c
.RI "int \fBBar\fP\fC [get, set]\fP"
.br
.RI "Access Bar\&. "
.ti -1c
.RI "int \fBTick\fP\fC [get, set]\fP"
.br
.RI "Access Tick\&. "
.ti -1c
.RI "int \fBFixedTick\fP\fC [get, set]\fP"
.br
.RI "Access FixedTick\&. "
.ti -1c
.RI "int \fBTickStamp\fP\fC [get, set]\fP"
.br
.RI "Access Tick Stamp = this\&.Bar*384 + this\&.Tick\&. "
.ti -1c
.RI "double \fBTickTimeStamp\fP\fC [get, set]\fP"
.br
.RI "Access Tick Stamp = this\&.Bar*384 + this\&.Tick\&. "
.ti -1c
.RI "int \fBWaitLength\fP\fC [get, set]\fP"
.br
.RI "Access wait time\&. "
.ti -1c
.RI "int \fBWaitTickStamp\fP\fC [get, set]\fP"
.br
.RI "Access the time stamp where wait time ends in ticks\&. "
.ti -1c
.RI "double \fBWaitTimeStamp\fP\fC [get, set]\fP"
.br
.RI "Access the time stamp where wait time ends in seconds\&. "
.ti -1c
.RI "double \fBCalculatedWaitTime\fP\fC [get, set]\fP"
.br
.RI "Gets or sets the calculated wait time\&. "
.ti -1c
.RI "int \fBLastLength\fP\fC [get, set]\fP"
.br
.RI "Access EndTime\&. "
.ti -1c
.RI "int \fBFixedLastLength\fP\fC [get, set]\fP"
.br
.RI "Access FixedEndTime\&. "
.ti -1c
.RI "int \fBLastTickStamp\fP\fC [get, set]\fP"
.br
.RI "Access Last time in ticks\&. "
.ti -1c
.RI "double \fBLastTimeStamp\fP\fC [get, set]\fP"
.br
.RI "Access last time in seconds\&. "
.ti -1c
.RI "double \fBCalculatedLastTime\fP\fC [get, set]\fP"
.br
.RI "Gets or sets the calculated last time in seconds\&. "
.ti -1c
.RI "bool \fBTickBPMDisagree\fP\fC [get, set]\fP"
.br
.RI "Stores if the wait or last are in different BPM\&. "
.ti -1c
.RI "string \fBEndKey\fP\fC [get, set]\fP"
.br
.RI "Access EndKey\&. "
.ti -1c
.RI "int \fBEndKeyNum\fP\fC [get]\fP"
.br
.RI "Get the number value of End Key\&. "
.ti -1c
.RI "bool \fBDelayed\fP\fC [get, set]\fP"
.br
.RI "Access Delayed\&. "
.ti -1c
.RI "double \fBBPM\fP\fC [get, set]\fP"
.br
.RI "Access BPM\&. "
.ti -1c
.RI "\fBNote\fP? \fBPrev\fP\fC [get, set]\fP"
.br
.RI "Access this\&.prev;\&. "
.ti -1c
.RI "\fBNote\fP? \fBNext\fP\fC [get, set]\fP"
.br
.RI "Access this\&.next\&. "
.ti -1c
.RI "\fBNote\fP? \fBSlideStart\fP\fC [get, set]\fP"
.br
.RI "Return the slide start of a note (reserved for slides only) "
.ti -1c
.RI "\fBNote\fP? \fBConsecutiveSlide\fP\fC [get, set]\fP"
.br
.RI "Return the consecutive of a note (reserved for slides only) "
.ti -1c
.RI "List< \fBBPMChange\fP > \fBBPMChangeNotes\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "abstract string \fBNoteSpecificGenre\fP\fC [get]\fP"
.br
.RI "Return this\&.SpecificType\&. "
.ti -1c
.RI "abstract string \fBNoteGenre\fP\fC [get]\fP"
.br
.RI "Return this\&.noteGenre\&. "
.ti -1c
.RI "abstract bool \fBIsNote\fP\fC [get]\fP"
.br
.RI "Return if this is a true note\&. "
.in -1c
.SH "Detailed Description"
.PP 
Basic note\&. 
.PP
Definition at line \fB11\fP of file \fBNote\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MaiLib\&.Note\&.Note ()"

.PP
Construct an empty note\&. 
.PP
Definition at line \fB141\fP of file \fBNote\&.cs\fP\&.
.SS "MaiLib\&.Note\&.Note (\fBNote\fP inTake)"

.PP
Construct a note from other note\&. 
.PP
\fBParameters\fP
.RS 4
\fIinTake\fP The intake note
.RE
.PP

.PP
Definition at line \fB168\fP of file \fBNote\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "abstract bool MaiLib\&.Note\&.CheckValidity ()\fC [pure virtual]\fP"

.PP
See if current note has all information needed\&. 
.PP
\fBReturns\fP
.RS 4
True if qualified, false otherwise
.RE
.PP

.PP
Implements \fBMaiLib\&.INote\fP\&.
.PP
Implemented in \fBMaiLib\&.BPMChange\fP, \fBMaiLib\&.Hold\fP, \fBMaiLib\&.MeasureChange\fP, and \fBMaiLib\&.Slide\fP\&.
.SS "int MaiLib\&.Note\&.CompareTo (Object? obj)"

.PP
Definition at line \fB568\fP of file \fBNote\&.cs\fP\&.
.SS "abstract string MaiLib\&.Note\&.Compose (int format)\fC [pure virtual]\fP"

.PP
Convert note to string for writing\&. 
.PP
\fBParameters\fP
.RS 4
\fIformat\fP 0 if Simai, 1 if Ma2
.RE
.PP

.PP
Implements \fBMaiLib\&.INote\fP\&.
.PP
Implemented in \fBMaiLib\&.BPMChange\fP, \fBMaiLib\&.Hold\fP, \fBMaiLib\&.MeasureChange\fP, and \fBMaiLib\&.Slide\fP\&.
.SS "bool MaiLib\&.Note\&.Equals (\fBNote\fP? other)"

.PP
Definition at line \fB633\fP of file \fBNote\&.cs\fP\&.
.SS "virtual void MaiLib\&.Note\&.Flip (string method)\fC [virtual]\fP"

.PP
Flip the note according to the method specified\&. 
.PP
\fBParameters\fP
.RS 4
\fImethod\fP UpSideDown, LeftToRight, Clockwise90/180, Counterclockwise90/180
.RE
.PP

.PP
Implements \fBMaiLib\&.INote\fP\&.
.PP
Definition at line \fB650\fP of file \fBNote\&.cs\fP\&.
.SS "string MaiLib\&.Note\&.GenerateAppropriateLength (int length)"

.PP
Generate appropriate length for hold and slide\&. 
.PP
\fBParameters\fP
.RS 4
\fIlength\fP Last Time
.RE
.PP
\fBReturns\fP
.RS 4
[Definition:Length]=[Quaver:Beat]
.RE
.PP

.PP
Definition at line \fB1197\fP of file \fBNote\&.cs\fP\&.
.SS "string MaiLib\&.Note\&.GenerateAppropriateLength (int length, double bpm)"

.PP
Generate appropriate length for hold and slide\&. 
.PP
\fBParameters\fP
.RS 4
\fIlength\fP Last Time
.br
\fIbpm\fP BPM
.RE
.PP
\fBReturns\fP
.RS 4
[Definition:Length]=[Quaver:Beat]
.RE
.PP

.PP
Definition at line \fB1224\fP of file \fBNote\&.cs\fP\&.
.SS "static double MaiLib\&.Note\&.GetBPMTimeUnit (double bpm)\fC [static]\fP"

.PP
Get BPM Time tick unit of bpm\&. 
.PP
\fBParameters\fP
.RS 4
\fIbpm\fP BPM to calculate
.RE
.PP
\fBReturns\fP
.RS 4
BPM Tick Unit of bpm
.RE
.PP

.PP
Definition at line \fB1248\fP of file \fBNote\&.cs\fP\&.
.SS "double MaiLib\&.Note\&.GetTimeStamp (int overallTick)"

.PP
Give time stamp given overall tick\&. 
.PP
\fBParameters\fP
.RS 4
\fIoverallTick\fP Note\&.Bar*384+Note\&.Tick
.RE
.PP
\fBReturns\fP
.RS 4
Appropriate time stamp in seconds
.RE
.PP

.PP
Implements \fBMaiLib\&.INote\fP\&.
.PP
Definition at line \fB1254\fP of file \fBNote\&.cs\fP\&.
.SS "abstract \fBNote\fP MaiLib\&.Note\&.NewInstance ()\fC [pure virtual]\fP"

.PP
Implemented in \fBMaiLib\&.BPMChange\fP, \fBMaiLib\&.Hold\fP, \fBMaiLib\&.MeasureChange\fP, and \fBMaiLib\&.Slide\fP\&.
.SS "void MaiLib\&.Note\&.ReplaceBPMChanges (\fBBPMChanges\fP changeTable)"

.PP
Replace this\&.BPMChangeNotes from change table given\&. 
.PP
\fBParameters\fP
.RS 4
\fIchangeTable\fP Change table contains bpm notes
.RE
.PP

.PP
Definition at line \fB1176\fP of file \fBNote\&.cs\fP\&.
.SS "void MaiLib\&.Note\&.ReplaceBPMChanges (List< \fBBPMChange\fP > changeTable)"

.PP
Replace this\&.BPMChangeNotes from change table given\&. 
.PP
\fBParameters\fP
.RS 4
\fIchangeTable\fP Change table contains bpm notes
.RE
.PP

.PP
Definition at line \fB1186\fP of file \fBNote\&.cs\fP\&.
.SS "bool MaiLib\&.Note\&.Update ()"

.PP
Updates this note instance\&. 
.PP
\fBReturns\fP
.RS 4
True if Calculated Times is defined, false otherwise
.RE
.PP

.PP
Implements \fBMaiLib\&.INote\fP\&.
.PP
Definition at line \fB1145\fP of file \fBNote\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "int MaiLib\&.Note\&.Bar\fC [get]\fP, \fC [set]\fP"

.PP
Access Bar\&. 
.PP
Definition at line \fB249\fP of file \fBNote\&.cs\fP\&.
.SS "double MaiLib\&.Note\&.BPM\fC [get]\fP, \fC [set]\fP"

.PP
Access BPM\&. 
.PP
Definition at line \fB490\fP of file \fBNote\&.cs\fP\&.
.SS "List<\fBBPMChange\fP> MaiLib\&.Note\&.BPMChangeNotes\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB532\fP of file \fBNote\&.cs\fP\&.
.SS "double MaiLib\&.Note\&.CalculatedLastTime\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the calculated last time in seconds\&. The calculated last time in seconds\&. 
.PP
Definition at line \fB430\fP of file \fBNote\&.cs\fP\&.
.SS "double MaiLib\&.Note\&.CalculatedWaitTime\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the calculated wait time\&. The calculated wait time in seconds\&. 
.PP
Definition at line \fB358\fP of file \fBNote\&.cs\fP\&.
.SS "\fBNote\fP? MaiLib\&.Note\&.ConsecutiveSlide\fC [get]\fP, \fC [set]\fP"

.PP
Return the consecutive of a note (reserved for slides only) 
.PP
Definition at line \fB526\fP of file \fBNote\&.cs\fP\&.
.SS "bool MaiLib\&.Note\&.Delayed\fC [get]\fP, \fC [set]\fP"

.PP
Access Delayed\&. 
.PP
Definition at line \fB481\fP of file \fBNote\&.cs\fP\&.
.SS "string MaiLib\&.Note\&.EndKey\fC [get]\fP, \fC [set]\fP"

.PP
Access EndKey\&. 
.PP
Definition at line \fB449\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.EndKeyNum\fC [get]\fP"

.PP
Get the number value of End Key\&. Number value of Key 0-7, exclude key group
.PP
Definition at line \fB465\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.FixedLastLength\fC [get]\fP, \fC [set]\fP"

.PP
Access FixedEndTime\&. 
.PP
Definition at line \fB382\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.FixedTick\fC [get]\fP, \fC [set]\fP"

.PP
Access FixedTick\&. 
.PP
Definition at line \fB279\fP of file \fBNote\&.cs\fP\&.
.SS "abstract bool MaiLib\&.Note\&.IsNote\fC [get]\fP"

.PP
Return if this is a true note\&. 
.PP
\fBReturns\fP
.RS 4
True if is TAP,HOLD or SLIDE, false otherwise
.RE
.PP

.PP
Definition at line \fB560\fP of file \fBNote\&.cs\fP\&.
.SS "string MaiLib\&.Note\&.Key\fC [get]\fP, \fC [set]\fP"

.PP
Access Key\&. 
.PP
Definition at line \fB208\fP of file \fBNote\&.cs\fP\&.
.SS "string MaiLib\&.Note\&.KeyGroup\fC [get]\fP"

.PP
Get the key group of the key - only for touch notes\&. Key group of the touch note
.PP
Definition at line \fB233\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.KeyNum\fC [get]\fP"

.PP
Get the number value of Key\&. Number value of Key 0-7, exclude key group
.PP
Definition at line \fB224\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.LastLength\fC [get]\fP, \fC [set]\fP"

.PP
Access EndTime\&. 
.PP
Definition at line \fB367\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.LastTickStamp\fC [get]\fP, \fC [set]\fP"

.PP
Access Last time in ticks\&. 
.PP
Definition at line \fB397\fP of file \fBNote\&.cs\fP\&.
.SS "double MaiLib\&.Note\&.LastTimeStamp\fC [get]\fP, \fC [set]\fP"

.PP
Access last time in seconds\&. 
.PP
Definition at line \fB412\fP of file \fBNote\&.cs\fP\&.
.SS "\fBNote\fP? MaiLib\&.Note\&.Next\fC [get]\fP, \fC [set]\fP"

.PP
Access this\&.next\&. 
.PP
Definition at line \fB508\fP of file \fBNote\&.cs\fP\&.
.SS "abstract string MaiLib\&.Note\&.NoteGenre\fC [get]\fP"

.PP
Return this\&.noteGenre\&. 
.PP
\fBReturns\fP
.RS 4
string of note genre (general category of TAP, SLIDE and HOLD)
.RE
.PP

.PP
Definition at line \fB554\fP of file \fBNote\&.cs\fP\&.
.SS "abstract string MaiLib\&.Note\&.NoteSpecificGenre\fC [get]\fP"

.PP
Return this\&.SpecificType\&. 
.PP
\fBReturns\fP
.RS 4
string of specific genre (specific type of Tap, Slide, etc\&.)
.RE
.PP

.PP
Definition at line \fB548\fP of file \fBNote\&.cs\fP\&.
.SS "string MaiLib\&.Note\&.NoteType\fC [get]\fP, \fC [set]\fP"

.PP
Access NoteType\&. 
.PP
Definition at line \fB193\fP of file \fBNote\&.cs\fP\&.
.SS "\fBNote\fP? MaiLib\&.Note\&.Prev\fC [get]\fP, \fC [set]\fP"

.PP
Access this\&.prev;\&. 
.PP
Definition at line \fB499\fP of file \fBNote\&.cs\fP\&.
.SS "\fBNote\fP? MaiLib\&.Note\&.SlideStart\fC [get]\fP, \fC [set]\fP"

.PP
Return the slide start of a note (reserved for slides only) 
.PP
Definition at line \fB517\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.Tick\fC [get]\fP, \fC [set]\fP"

.PP
Access Tick\&. 
.PP
Definition at line \fB264\fP of file \fBNote\&.cs\fP\&.
.SS "bool MaiLib\&.Note\&.TickBPMDisagree\fC [get]\fP, \fC [set]\fP"

.PP
Stores if the wait or last are in different BPM\&. True if in different BPM, false otherwise
.PP
Definition at line \fB440\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.TickStamp\fC [get]\fP, \fC [set]\fP"

.PP
Access Tick Stamp = this\&.Bar*384 + this\&.Tick\&. 
.PP
Definition at line \fB294\fP of file \fBNote\&.cs\fP\&.
.SS "double MaiLib\&.Note\&.TickTimeStamp\fC [get]\fP, \fC [set]\fP"

.PP
Access Tick Stamp = this\&.Bar*384 + this\&.Tick\&. 
.PP
Definition at line \fB311\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.WaitLength\fC [get]\fP, \fC [set]\fP"

.PP
Access wait time\&. 
.PP
Definition at line \fB320\fP of file \fBNote\&.cs\fP\&.
.SS "int MaiLib\&.Note\&.WaitTickStamp\fC [get]\fP, \fC [set]\fP"

.PP
Access the time stamp where wait time ends in ticks\&. The incoming time
.PP
Definition at line \fB336\fP of file \fBNote\&.cs\fP\&.
.SS "double MaiLib\&.Note\&.WaitTimeStamp\fC [get]\fP, \fC [set]\fP"

.PP
Access the time stamp where wait time ends in seconds\&. The incoming time
.PP
Definition at line \fB346\fP of file \fBNote\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MaiLib from the source code\&.
