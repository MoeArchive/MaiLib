<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__ma2parser_8cs_source" xml:lang="en-US">
<title>Ma2parser.cs</title>
<indexterm><primary>Neskol/MaiLib/Ma2parser.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__ma2parser_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.CompilerServices;
<anchor xml:id="__ma2parser_8cs_source_1l00002"/>00002 
<anchor xml:id="__ma2parser_8cs_source_1l00003"/>00003 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_mai_lib">MaiLib</link>
<anchor xml:id="__ma2parser_8cs_source_1l00004"/>00004 {
<anchor xml:id="__ma2parser_8cs_source_1l00008"/><link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>&#32;{&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21aa1fa27779242b4902f7ae3bdd5c6d508">Type</link>,&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21addc35f88fa71b6ef142ae61f35364653">Bar</link>,&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21a0b3516a5bbb77566f904f9d3877f4710">Tick</link>,&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21a3abff32d98bbe945bbc59b5e5728a99b">KeyOrParam</link>,&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21a8be52214132d104bf047755b568b5843">WaitTimeOrParam</link>,&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21ae7237116218f2c9b98efba91ccea22aa">LastTime</link>,&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21a617f2190b4cbbcddaea9d201ddc88a7b">EndKey</link>&#32;};
<anchor xml:id="__ma2parser_8cs_source_1l00012"/><link linkend="_namespace_mai_lib_1a517cfc2afaaee150626216dfa2b629b1">00012</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_mai_lib_1a517cfc2afaaee150626216dfa2b629b1">DxParam</link>&#32;{&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21aa1fa27779242b4902f7ae3bdd5c6d508">Type</link>,&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21addc35f88fa71b6ef142ae61f35364653">Bar</link>,&#32;<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21a0b3516a5bbb77566f904f9d3877f4710">Tick</link>,&#32;<link linkend="_namespace_mai_lib_1a517cfc2afaaee150626216dfa2b629b1a897356954c2cd3d41b221e3f24f99bba">Key</link>,&#32;<link linkend="_namespace_mai_lib_1a517cfc2afaaee150626216dfa2b629b1ae8a888c2915b1b51dc586d8f14909670">KeyGroupOrLastTime</link>,&#32;<link linkend="_namespace_mai_lib_1a517cfc2afaaee150626216dfa2b629b1a980a3d4f9be49bbf8d3051f7be1e826b">SpecialEffect</link>,&#32;<link linkend="_namespace_mai_lib_1a517cfc2afaaee150626216dfa2b629b1a06a8d9bbf1191bfd207c85908da28e3d">NoteSize</link>&#32;};
<anchor xml:id="__ma2parser_8cs_source_1l00016"/><link linkend="_class_mai_lib_1_1_ma2_parser">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_mai_lib_1_1_ma2_parser">Ma2Parser</link>&#32;:&#32;<link linkend="_interface_mai_lib_1_1_i_parser">IParser</link>
<anchor xml:id="__ma2parser_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Tap&#32;PreviousSlideStart;
<anchor xml:id="__ma2parser_8cs_source_1l00022"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a3887e3ab0226b399b916ffdab2f5cbe8">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a3887e3ab0226b399b916ffdab2f5cbe8">Ma2Parser</link>()
<anchor xml:id="__ma2parser_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PreviousSlideStart&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Tap();
<anchor xml:id="__ma2parser_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00026"/>00026 
<anchor xml:id="__ma2parser_8cs_source_1l00027"/><link linkend="_class_mai_lib_1_1_ma2_parser_1abc9e7e6d2c82f50a0faa63417fece990">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_chart">Chart</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1abc9e7e6d2c82f50a0faa63417fece990">ChartOfToken</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;token)
<anchor xml:id="__ma2parser_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_b_p_m_changes">BPMChanges</link>&#32;bpmChanges&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_b_p_m_changes">BPMChanges</link>();
<anchor xml:id="__ma2parser_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_measure_changes">MeasureChanges</link>&#32;measureChanges&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_measure_changes">MeasureChanges</link>();
<anchor xml:id="__ma2parser_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Note&gt;&#32;notes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Note&gt;();
<anchor xml:id="__ma2parser_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(token&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;token)
<anchor xml:id="__ma2parser_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isBPM_DEF&#32;=&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;BPM_DEF&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isMET_DEF&#32;=&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;MET_DEF&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isBPM&#32;=&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;BPM&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isMET&#32;=&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;MET&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isNOTE&#32;=&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TAP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;STR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TTP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XTP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XST&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;BRK&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;BST&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;HLD&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XHO&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;THO&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SI_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SV_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SF_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SCL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SCR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SUL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SUR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SLL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SLR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SXL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SXR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SSL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SSR&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00063"/>00063 
<anchor xml:id="__ma2parser_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isBPM_DEF)
<anchor xml:id="__ma2parser_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bpmChanges&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a4b665f09edf08588ef870152de63a8fe">BPMChangesOfToken</link>(x);
<anchor xml:id="__ma2parser_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isMET_DEF)
<anchor xml:id="__ma2parser_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;measureChanges&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a7489fd251adbb1c29516f30bfd79060c">MeasureChangesOfToken</link>(x);
<anchor xml:id="__ma2parser_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isBPM)
<anchor xml:id="__ma2parser_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;bpmCandidate&#32;=&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_b_p_m_change">BPMChange</link>&#32;candidate&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_b_p_m_change">BPMChange</link>(Int32.Parse(bpmCandidate[1]),
<anchor xml:id="__ma2parser_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Int32.Parse(bpmCandidate[2]),
<anchor xml:id="__ma2parser_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Double.Parse(bpmCandidate[3]));
<anchor xml:id="__ma2parser_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;foreach&#32;(BPMChange&#32;change&#32;in&#32;bpmChanges.ChangeNotes)</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;{</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;if&#32;(change.TickStamp&#32;&lt;=&#32;candidate.LastTickStamp)</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate.BPMChangeNotes.Add(change);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine(&quot;A&#32;BPM&#32;change&#32;note&#32;was&#32;added&#32;with&#32;overall&#32;tick&#32;of&#32;&quot;+change.TickStamp&#32;+&#32;&quot;&#32;with&#32;bpm&#32;of&#32;&quot;+change.BPM);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bpmChanges.<link linkend="_class_mai_lib_1_1_b_p_m_changes_1aa363e2df4f91c7a6466f0c865c00e5b4">Add</link>(candidate);
<anchor xml:id="__ma2parser_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bpmChanges.<link linkend="_class_mai_lib_1_1_b_p_m_changes_1a0fb34d08f80a551c4e6cb7de7191ea5c">Update</link>();
<anchor xml:id="__ma2parser_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isMET)
<anchor xml:id="__ma2parser_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;measureCandidate&#32;=&#32;x.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;measureChanges.<link linkend="_class_mai_lib_1_1_measure_changes_1aeb76df02bf4918cd354944eb89c023c3">Add</link>(Int32.Parse(measureCandidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Int32.Parse(measureCandidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Int32.Parse(measureCandidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]),
<anchor xml:id="__ma2parser_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Int32.Parse(measureCandidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam]));
<anchor xml:id="__ma2parser_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isNOTE)
<anchor xml:id="__ma2parser_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;candidate&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a267475f0098390f3993cbd12a50b7cdb">NoteOfToken</link>(x);
<anchor xml:id="__ma2parser_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;foreach&#32;(BPMChange&#32;change&#32;in&#32;bpmChanges.ChangeNotes)</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;{</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;if&#32;(change.TickStamp&#32;&lt;=&#32;candidate.LastTickStamp)</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate.BPMChangeNotes.Add(change);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine(&quot;A&#32;BPM&#32;change&#32;note&#32;was&#32;added&#32;with&#32;overall&#32;tick&#32;of&#32;&quot;&#32;+&#32;change.TickStamp&#32;+&#32;&quot;&#32;with&#32;bpm&#32;of&#32;&quot;&#32;+&#32;change.BPM);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notes.Add(candidate);
<anchor xml:id="__ma2parser_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;note&#32;<emphasis role="keywordflow">in</emphasis>&#32;notes)
<anchor xml:id="__ma2parser_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;note.BPMChangeNotes&#32;=&#32;bpmChanges.ChangeNotes;
<anchor xml:id="__ma2parser_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bpmChanges.ChangeNotes.Count&#32;&gt;&#32;0&#32;&amp;&amp;&#32;note.<link linkend="_class_mai_lib_1_1_note_1ac9aaff07cd74d47631c865df65236f01">BPMChangeNotes</link>.Count&#32;==&#32;0)
<anchor xml:id="__ma2parser_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;IndexOutOfRangeException(<emphasis role="stringliteral">&quot;BPM&#32;COUNT&#32;DISAGREE&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bpmChanges.ChangeNotes.Count&#32;==&#32;0)
<anchor xml:id="__ma2parser_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;IndexOutOfRangeException(<emphasis role="stringliteral">&quot;BPM&#32;CHANGE&#32;COUNT&#32;DISAGREE&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_chart">Chart</link>&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_ma2">Ma2</link>(notes,&#32;bpmChanges,&#32;measureChanges);
<anchor xml:id="__ma2parser_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__ma2parser_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00127"/>00127 
<anchor xml:id="__ma2parser_8cs_source_1l00128"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a4b665f09edf08588ef870152de63a8fe">00128</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_b_p_m_changes">BPMChanges</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a4b665f09edf08588ef870152de63a8fe">BPMChangesOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token)
<anchor xml:id="__ma2parser_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_b_p_m_changes">BPMChanges</link>();
<anchor xml:id="__ma2parser_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00132"/>00132 
<anchor xml:id="__ma2parser_8cs_source_1l00133"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a7489fd251adbb1c29516f30bfd79060c">00133</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_measure_changes">MeasureChanges</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a7489fd251adbb1c29516f30bfd79060c">MeasureChangesOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token)
<anchor xml:id="__ma2parser_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_measure_changes">MeasureChanges</link>(Int32.Parse(token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[1]),&#32;Int32.Parse(token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[2]));
<anchor xml:id="__ma2parser_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00137"/>00137 
<anchor xml:id="__ma2parser_8cs_source_1l00138"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a267475f0098390f3993cbd12a50b7cdb">00138</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a267475f0098390f3993cbd12a50b7cdb">NoteOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token)
<anchor xml:id="__ma2parser_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rest();
<anchor xml:id="__ma2parser_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTap&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TAP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;STR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TTP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XTP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XST&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;BRK&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;BST&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isHold&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;HLD&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XHO&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;THO&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isSlide&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SI_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SV_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SF_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SCL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SCR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SUL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SUR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SLL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SLR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SXL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SXR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SSL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SSR&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;candidate&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bar&#32;=&#32;Int32.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]);
<anchor xml:id="__ma2parser_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tick&#32;=&#32;Int32.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]);
<anchor xml:id="__ma2parser_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isTap)
<anchor xml:id="__ma2parser_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a60dd6e2818dfdcd6935455561409ca96">TapOfToken</link>(token);
<anchor xml:id="__ma2parser_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result.<link linkend="_class_mai_lib_1_1_note_1a15f933472746a63f10ccef80e1b77af7">NoteSpecificGenre</link>.Equals(<emphasis role="stringliteral">&quot;SLIDE_START&quot;</emphasis>))
<anchor xml:id="__ma2parser_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PreviousSlideStart&#32;=&#32;(Tap)result;
<anchor xml:id="__ma2parser_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isHold)
<anchor xml:id="__ma2parser_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a6c6f8470763f5802f96b8d603aac709a">HoldOfToken</link>(token);
<anchor xml:id="__ma2parser_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isSlide)
<anchor xml:id="__ma2parser_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a7662ce67879ceeb260f336ace04ff5ae">SlideOfToken</link>(token);
<anchor xml:id="__ma2parser_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;result.SlideStart&#32;=&#32;PreviousSlideStart;</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result.<link linkend="_class_mai_lib_1_1_note_1aa670c5a13ce0eded4efa1a36562dbb4d">Tick</link>&#32;==&#32;384)
<anchor xml:id="__ma2parser_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.Tick&#32;=&#32;0;
<anchor xml:id="__ma2parser_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.<link linkend="_class_mai_lib_1_1_note_1a0354b2b7d0a4fa8fa0406a3651034b41">Bar</link>++;
<anchor xml:id="__ma2parser_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__ma2parser_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00191"/>00191 
<anchor xml:id="__ma2parser_8cs_source_1l00192"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a947cf5c0d98e6d703be31fbd694eba41">00192</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a947cf5c0d98e6d703be31fbd694eba41">NoteOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bar,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tick,&#32;<emphasis role="keywordtype">double</emphasis>&#32;bpm)
<anchor xml:id="__ma2parser_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rest();
<anchor xml:id="__ma2parser_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTap&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TAP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;STR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TTP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XTP&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XST&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;BRK&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;BST&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isHold&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;HLD&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;XHO&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;THO&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isSlide&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SI_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SV_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SF_&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SCL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SCR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SUL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SUR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SLL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SLR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SXL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SXR&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SSL&quot;</emphasis>)
<anchor xml:id="__ma2parser_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>)[(int)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;SSR&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;candidate&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;candidate)
<anchor xml:id="__ma2parser_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isTap)
<anchor xml:id="__ma2parser_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a60dd6e2818dfdcd6935455561409ca96">TapOfToken</link>(token,&#32;bar,&#32;tick,&#32;bpm);
<anchor xml:id="__ma2parser_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isHold)
<anchor xml:id="__ma2parser_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a6c6f8470763f5802f96b8d603aac709a">HoldOfToken</link>(token,&#32;bar,&#32;tick,&#32;bpm);
<anchor xml:id="__ma2parser_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isSlide)
<anchor xml:id="__ma2parser_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a7662ce67879ceeb260f336ace04ff5ae">SlideOfToken</link>(token,&#32;bar,&#32;tick,&#32;PreviousSlideStart,&#32;bpm);
<anchor xml:id="__ma2parser_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result.Tick&#32;==&#32;384)
<anchor xml:id="__ma2parser_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.Tick&#32;=&#32;0;
<anchor xml:id="__ma2parser_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.Bar++;
<anchor xml:id="__ma2parser_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__ma2parser_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00241"/>00241 
<anchor xml:id="__ma2parser_8cs_source_1l00242"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a6c6f8470763f5802f96b8d603aac709a">00242</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_hold">Hold</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a6c6f8470763f5802f96b8d603aac709a">HoldOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bar,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tick,&#32;<emphasis role="keywordtype">double</emphasis>&#32;bpm)
<anchor xml:id="__ma2parser_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rest();
<anchor xml:id="__ma2parser_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;candidate&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;THO&quot;</emphasis>)&#32;&amp;&amp;&#32;candidate.Count()&#32;&gt;&#32;7)
<anchor xml:id="__ma2parser_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_hold">Hold</link>(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bar,
<anchor xml:id="__ma2parser_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tick,
<anchor xml:id="__ma2parser_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]&#32;+&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime],&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1a517cfc2afaaee150626216dfa2b629b1">DxParam</link>.SpecialEffect]),
<anchor xml:id="__ma2parser_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.EndKey]),
<anchor xml:id="__ma2parser_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[7]);&#32;<emphasis role="comment">//candidate[(int)StdParam.EndKey]&#32;is&#32;special&#32;effect</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;THO&quot;</emphasis>)&#32;&amp;&amp;&#32;candidate.Count()&#32;&lt;=&#32;7)
<anchor xml:id="__ma2parser_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.ReadLine();</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_hold">Hold</link>(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]&#32;+&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime],&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam]),
<anchor xml:id="__ma2parser_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.EndKey]),
<anchor xml:id="__ma2parser_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;M1&quot;</emphasis>);&#32;<emphasis role="comment">//candidate[(int)StdParam.EndKey]&#32;is&#32;special&#32;effect</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_hold">Hold</link>(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam],
<anchor xml:id="__ma2parser_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam]));
<anchor xml:id="__ma2parser_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.BPM&#32;=&#32;bpm;
<anchor xml:id="__ma2parser_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_mai_lib_1_1_hold">Hold</link>)result;
<anchor xml:id="__ma2parser_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00274"/>00274 
<anchor xml:id="__ma2parser_8cs_source_1l00275"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a63b991f61fdc89273f93ec0752898f8a">00275</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_hold">Hold</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a63b991f61fdc89273f93ec0752898f8a">HoldOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token)
<anchor xml:id="__ma2parser_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;candidate&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bar&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]);
<anchor xml:id="__ma2parser_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tick&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]);
<anchor xml:id="__ma2parser_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;THO&quot;</emphasis>)&#32;&amp;&amp;&#32;candidate.Count()&#32;&gt;&#32;7)
<anchor xml:id="__ma2parser_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_hold">Hold</link>(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bar,
<anchor xml:id="__ma2parser_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tick,
<anchor xml:id="__ma2parser_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]&#32;+&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime],&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam]),
<anchor xml:id="__ma2parser_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.EndKey]),
<anchor xml:id="__ma2parser_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[7]);&#32;<emphasis role="comment">//candidate[(int)StdParam.EndKey]&#32;is&#32;special&#32;effect</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;THO&quot;</emphasis>)&#32;&amp;&amp;&#32;candidate.Count()&#32;&lt;=&#32;7)
<anchor xml:id="__ma2parser_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.ReadLine();</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_hold">Hold</link>(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]&#32;+&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime],&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam]),
<anchor xml:id="__ma2parser_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.EndKey]),
<anchor xml:id="__ma2parser_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;M1&quot;</emphasis>);&#32;<emphasis role="comment">//candidate[(int)StdParam.EndKey]&#32;is&#32;special&#32;effect</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_hold">Hold</link>(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam],
<anchor xml:id="__ma2parser_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam]));
<anchor xml:id="__ma2parser_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00306"/>00306 
<anchor xml:id="__ma2parser_8cs_source_1l00307"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a7662ce67879ceeb260f336ace04ff5ae">00307</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_slide">Slide</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a7662ce67879ceeb260f336ace04ff5ae">SlideOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bar,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tick,&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;slideStart,&#32;<emphasis role="keywordtype">double</emphasis>&#32;bpm)
<anchor xml:id="__ma2parser_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;candidate&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;localSlideStart&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_slide">Slide</link>(slideStart);
<anchor xml:id="__ma2parser_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!localSlideStart.<link linkend="_class_mai_lib_1_1_note_1ae93ef9ee5987428ab77603867d3ed864">Key</link>.Equals(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam])&#32;||&#32;localSlideStart.<link linkend="_class_mai_lib_1_1_note_1a0354b2b7d0a4fa8fa0406a3651034b41">Bar</link>&#32;!=&#32;bar&#32;||&#32;localSlideStart.<link linkend="_class_mai_lib_1_1_note_1aa670c5a13ce0eded4efa1a36562dbb4d">Tick</link>&#32;!=&#32;tick)
<anchor xml:id="__ma2parser_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.WriteLine(&quot;Expected&#32;key:&#32;&quot;&#32;+&#32;candidate[(int)StdParam.KeyOrParam]);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.WriteLine(&quot;Actual&#32;key:&#32;&quot;&#32;+&#32;PreviousSlideStart.Key);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.WriteLine(&quot;Previous&#32;Slide&#32;Start:&#32;&quot;&#32;+&#32;PreviousSlideStart.Compose((int)StdParam.Bar));</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//throw&#32;new&#32;Exception(&quot;THE&#32;SLIDE&#32;START&#32;DOES&#32;NOT&#32;MATCH&#32;WITH&#32;THE&#32;DEFINITION&#32;OF&#32;THIS&#32;NOTE!&quot;);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localSlideStart&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Tap(<emphasis role="stringliteral">&quot;NST&quot;</emphasis>,&#32;bar,&#32;tick,&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]);
<anchor xml:id="__ma2parser_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_slide">Slide</link>&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_slide">Slide</link>(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bar,
<anchor xml:id="__ma2parser_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tick,
<anchor xml:id="__ma2parser_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localSlideStart.<link linkend="_class_mai_lib_1_1_note_1ae93ef9ee5987428ab77603867d3ed864">Key</link>,
<anchor xml:id="__ma2parser_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam]),
<anchor xml:id="__ma2parser_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime]),
<anchor xml:id="__ma2parser_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.EndKey]);
<anchor xml:id="__ma2parser_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.SlideStart&#32;=&#32;localSlideStart;
<anchor xml:id="__ma2parser_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localSlideStart.ConsecutiveSlide&#32;=&#32;result;
<anchor xml:id="__ma2parser_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slideStart&#32;=&#32;localSlideStart;
<anchor xml:id="__ma2parser_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__ma2parser_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00331"/>00331 
<anchor xml:id="__ma2parser_8cs_source_1l00332"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a11a29b94f872cb4c4e363a35ab3a8cd3">00332</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mai_lib_1_1_slide">Slide</link>&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a11a29b94f872cb4c4e363a35ab3a8cd3">SlideOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token)
<anchor xml:id="__ma2parser_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;candidate&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bar&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]);
<anchor xml:id="__ma2parser_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tick&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]);
<anchor xml:id="__ma2parser_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!PreviousSlideStart.Key.Equals(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam])&#32;||&#32;PreviousSlideStart.Bar&#32;!=&#32;bar&#32;||&#32;PreviousSlideStart.Tick&#32;!=&#32;tick)
<anchor xml:id="__ma2parser_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.WriteLine(&quot;Expected&#32;key:&#32;&quot;&#32;+&#32;candidate[(int)StdParam.KeyOrParam]);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.WriteLine(&quot;Actual&#32;key:&#32;&quot;&#32;+&#32;PreviousSlideStart.Key);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.WriteLine(&quot;Previous&#32;Slide&#32;Start:&#32;&quot;&#32;+&#32;PreviousSlideStart.Compose((int)StdParam.Bar));</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//throw&#32;new&#32;Exception(&quot;THE&#32;SLIDE&#32;START&#32;DOES&#32;NOT&#32;MATCH&#32;WITH&#32;THE&#32;DEFINITION&#32;OF&#32;THIS&#32;NOTE!&quot;);</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PreviousSlideStart&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Tap(<emphasis role="stringliteral">&quot;NST&quot;</emphasis>,&#32;bar,&#32;tick,&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]);
<anchor xml:id="__ma2parser_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_slide">Slide</link>&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_mai_lib_1_1_slide">Slide</link>(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bar,
<anchor xml:id="__ma2parser_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tick,
<anchor xml:id="__ma2parser_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PreviousSlideStart.Key,
<anchor xml:id="__ma2parser_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam]),
<anchor xml:id="__ma2parser_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime]),
<anchor xml:id="__ma2parser_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.EndKey]);
<anchor xml:id="__ma2parser_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.SlideStart&#32;=&#32;PreviousSlideStart;
<anchor xml:id="__ma2parser_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PreviousSlideStart.ConsecutiveSlide&#32;=&#32;result;
<anchor xml:id="__ma2parser_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__ma2parser_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00356"/>00356 
<anchor xml:id="__ma2parser_8cs_source_1l00357"/>00357 
<anchor xml:id="__ma2parser_8cs_source_1l00358"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a60dd6e2818dfdcd6935455561409ca96">00358</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tap&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a60dd6e2818dfdcd6935455561409ca96">TapOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bar,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tick,&#32;<emphasis role="keywordtype">double</emphasis>&#32;bpm)
<anchor xml:id="__ma2parser_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mai_lib_1_1_note">Note</link>&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rest();
<anchor xml:id="__ma2parser_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;candidate&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TTP&quot;</emphasis>)&#32;&amp;&amp;&#32;(candidate.Count())&#32;&gt;=&#32;7)
<anchor xml:id="__ma2parser_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Tap(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bar,
<anchor xml:id="__ma2parser_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tick,
<anchor xml:id="__ma2parser_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]&#32;+&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam],
<anchor xml:id="__ma2parser_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime]),
<anchor xml:id="__ma2parser_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.EndKey]);
<anchor xml:id="__ma2parser_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TTP&quot;</emphasis>)&#32;&amp;&amp;&#32;(candidate.Count())&#32;&lt;&#32;7)
<anchor xml:id="__ma2parser_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.ReadLine();</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Tap(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]&#32;+&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam],
<anchor xml:id="__ma2parser_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime]),
<anchor xml:id="__ma2parser_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;M1&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Tap(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]);
<anchor xml:id="__ma2parser_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.BPM&#32;=&#32;bpm;
<anchor xml:id="__ma2parser_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(Tap)result;
<anchor xml:id="__ma2parser_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00389"/>00389 
<anchor xml:id="__ma2parser_8cs_source_1l00390"/><link linkend="_class_mai_lib_1_1_ma2_parser_1a34934530f7447c9f475636896b2c7a87">00390</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tap&#32;<link linkend="_class_mai_lib_1_1_ma2_parser_1a34934530f7447c9f475636896b2c7a87">TapOfToken</link>(<emphasis role="keywordtype">string</emphasis>&#32;token)
<anchor xml:id="__ma2parser_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;candidate&#32;=&#32;token.Split(<emphasis role="charliteral">&apos;\t&apos;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bar&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]);
<anchor xml:id="__ma2parser_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tick&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]);
<anchor xml:id="__ma2parser_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TTP&quot;</emphasis>)&#32;&amp;&amp;&#32;(candidate.Count())&#32;&gt;=&#32;7)
<anchor xml:id="__ma2parser_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Tap(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bar,
<anchor xml:id="__ma2parser_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tick,
<anchor xml:id="__ma2parser_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]&#32;+&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam],
<anchor xml:id="__ma2parser_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime]),
<anchor xml:id="__ma2parser_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.EndKey]);
<anchor xml:id="__ma2parser_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type].Equals(<emphasis role="stringliteral">&quot;TTP&quot;</emphasis>)&#32;&amp;&amp;&#32;(candidate.Count())&#32;&lt;&#32;7)
<anchor xml:id="__ma2parser_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ma2parser_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.ReadLine();</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Tap(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]&#32;+&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.WaitTimeOrParam],
<anchor xml:id="__ma2parser_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.LastTime]),
<anchor xml:id="__ma2parser_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;M1&quot;</emphasis>);
<anchor xml:id="__ma2parser_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__ma2parser_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Tap(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Type],
<anchor xml:id="__ma2parser_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Bar]),
<anchor xml:id="__ma2parser_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>.Parse(candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.Tick]),
<anchor xml:id="__ma2parser_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate[(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_mai_lib_1adb5e6f6beeec05fe18aebc928e2f1c21">StdParam</link>.KeyOrParam]);
<anchor xml:id="__ma2parser_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;}
<anchor xml:id="__ma2parser_8cs_source_1l00421"/>00421 
<anchor xml:id="__ma2parser_8cs_source_1l00422"/>00422 }
<anchor xml:id="__ma2parser_8cs_source_1l00423"/>00423 
</programlisting></section>
