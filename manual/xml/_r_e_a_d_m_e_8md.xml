<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>MaiLib</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>A<sp/>library<sp/>for<sp/>processing<sp/>maimai<sp/>charts</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>One<sp/>demo<sp/>implementation<sp/>is<sp/>MaichartConverter<sp/>to<sp/>convert<sp/>between<sp/>Simai<sp/>and<sp/>Ma2.<sp/>Please<sp/>see<sp/>[MaichartConverter](https://github.com/Neskol/MaichartConverter)<sp/>for<sp/>more<sp/>information.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>git<sp/>clone</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>dotnet<sp/>build</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Usage</highlight></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>basic<sp/>parts<sp/>of<sp/>this<sp/>is<sp/>`Chart`<sp/>-<sp/>you<sp/>could<sp/>use<sp/>this<sp/>to<sp/>construct<sp/>different<sp/>charts.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>This<sp/>library<sp/>follows<sp/>Tokenizer<sp/>-<sp/>Parser<sp/>-<sp/>Compiler<sp/>format<sp/>to<sp/>process<sp/>files<sp/>and<sp/>uses<sp/>Abstract<sp/>Syntax<sp/>Tree<sp/>for<sp/>grammer<sp/>decomposing<sp/>when<sp/>implementing<sp/>Simai<sp/>and<sp/>Ma2<sp/>format<sp/>support.<sp/>If<sp/>you<sp/>were<sp/>to<sp/>extend<sp/>format<sp/>supporting,<sp/>make<sp/>sure<sp/>you<sp/>also<sp/>implement<sp/>your<sp/>Tokenizer,<sp/>Parser,<sp/>and<sp/>Compiler,<sp/>and<sp/>make<sp/>them<sp/>follow<sp/>Interface<sp/>`ITokenizer`,<sp/>`IParser`,<sp/>and<sp/>`ICompiler`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>`Chart`<sp/>base<sp/>class<sp/>is<sp/>a<sp/>intermediate<sp/>format<sp/>to<sp/>achieve<sp/>inter-format<sp/>compatability.<sp/>If<sp/>you<sp/>are<sp/>adding<sp/>a<sp/>new<sp/>format,<sp/>be<sp/>sure<sp/>to<sp/>also<sp/>create<sp/>a<sp/>class<sp/>implementing<sp/>this<sp/>base<sp/>class.<sp/>The<sp/>`Chart`<sp/>class<sp/>has<sp/>already<sp/>implemented<sp/>the<sp/>functions<sp/>you<sp/>need<sp/>for<sp/>a<sp/>maimai<sp/>chart,<sp/>and<sp/>you<sp/>only<sp/>need<sp/>to<sp/>implement<sp/>several<sp/>abstract<sp/>method<sp/>in<sp/>this<sp/>class<sp/>to<sp/>fit<sp/>with<sp/>your<sp/>format.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Then,<sp/>you<sp/>could<sp/>create<sp/>a<sp/>maimai<sp/>chart<sp/>instance<sp/>in<sp/>your<sp/>code.<sp/>For<sp/>example,<sp/>creating<sp/>a<sp/>Ma2<sp/>chart<sp/>could<sp/>be<sp/>done<sp/>by<sp/>`Chart<sp/>ma2Chart<sp/>=<sp/>new<sp/>Ma2();`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Additional<sp/>notice<sp/>for<sp/>Simai<sp/>compatability</highlight></codeline>
<codeline><highlight class="normal">-<sp/>As<sp/>always,<sp/>I<sp/>think<sp/>Simai<sp/>is<sp/>a<sp/>language<sp/>more<sp/>focusing<sp/>on<sp/>charting<sp/>rather<sp/>than<sp/>interpreting.<sp/>I<sp/>still<sp/>have<sp/>no<sp/>idea<sp/>why<sp/>there<sp/>is<sp/>still<sp/>no<sp/>UI-based<sp/>charting<sp/>tool<sp/>but<sp/>let<sp/>everyone<sp/>learn<sp/>this<sp/>full-of-compromise<sp/>language,<sp/>especially<sp/>after<sp/>Festival<sp/>added<sp/>new<sp/>features.<sp/>This<sp/>made<sp/>interpreting<sp/>Simai<sp/>a<sp/>PAIN<sp/>since<sp/>the<sp/>idea<sp/>how<sp/>it<sp/>converts<sp/>between<sp/>ticks<sp/>and<sp/>times<sp/>are<sp/>vague<sp/>and<sp/>unreasonable.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>For<sp/>example,<sp/>it<sp/>defines<sp/>a<sp/>Slide<sp/>note<sp/>will<sp/>have<sp/>a<sp/>wait<sp/>time<sp/>of<sp/>1<sp/>beat<sp/>or<sp/>one<sp/>1/4<sp/>note<sp/>(or<sp/>crotchet<sp/>for<sp/>music<sp/>community)<sp/>after<sp/>its<sp/>start<sp/>tap.<sp/>If<sp/>your<sp/>Slide<sp/>starts<sp/>longer<sp/>or<sp/>shorter<sp/>than<sp/>1<sp/>quaver<sp/>of<sp/>current<sp/>BPM,<sp/>you<sp/>will<sp/>have<sp/>to<sp/>1)<sp/>change<sp/>the<sp/>BPM<sp/>for<sp/>this<sp/>specific<sp/>Slide<sp/>or<sp/>2)<sp/>define<sp/>the<sp/>time<sp/>by<sp/>[wait<sp/>time##last<sp/>time]<sp/>-<sp/>and<sp/>calculating<sp/>that<sp/>is<sp/>extremely<sp/>time<sp/>consuming<sp/>when<sp/>converting<sp/>tick<sp/>to<sp/>time.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>I<sp/>hope<sp/>someone<sp/>could<sp/>develop<sp/>a<sp/>better<sp/>language<sp/>than<sp/>Simai<sp/>as<sp/>a<sp/>intermediate<sp/>language<sp/>between<sp/>coding<sp/>and<sp/>charting.<sp/>Thank<sp/>you.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Parameters<sp/>notice</highlight></codeline>
<codeline><highlight class="normal">-<sp/>music<sp/>files<sp/>should<sp/>be<sp/>named<sp/>musicxxxxxx.mp3<sp/>which<sp/>xxxxxx<sp/>matches<sp/>the<sp/>music<sp/>id<sp/>specified<sp/>in<sp/>music.xml<sp/>in<sp/>each<sp/>a000<sp/>folder,<sp/>and<sp/>compensate<sp/>0s<sp/>at<sp/>the<sp/>front<sp/>to<sp/>6<sp/>digits</highlight></codeline>
<codeline><highlight class="normal">-<sp/>bga<sp/>files<sp/>should<sp/>be<sp/>named<sp/>xxxxxx.mp4<sp/>which<sp/>matches<sp/>the<sp/>music<sp/>id<sp/>specified<sp/>in<sp/>music.xml<sp/>in<sp/>each<sp/>a000<sp/>folder,<sp/>and<sp/>compensate<sp/>0s<sp/>at<sp/>the<sp/>front<sp/>to<sp/>6<sp/>digits</highlight></codeline>
<codeline><highlight class="normal">-<sp/>image<sp/>folder<sp/>should<sp/>be<sp/>structured<sp/>in<sp/>image/Texture2D/<sp/>and<sp/>the<sp/>files<sp/>should<sp/>start<sp/>with<sp/>UI_Jacket_xxxxxx.jpg<sp/>which<sp/>xxxxxx<sp/>matches<sp/>the<sp/>music<sp/>id<sp/>specified<sp/>in<sp/>music.xml<sp/>in<sp/>each<sp/>a000<sp/>folder,<sp/>and<sp/>compensate<sp/>0s<sp/>at<sp/>the<sp/>front<sp/>to<sp/>6<sp/>digits</highlight></codeline>
<codeline><highlight class="normal">-<sp/>All<sp/>of<sp/>the<sp/>rules<sp/>specified<sp/>above<sp/>is<sp/>in<sp/>convenience<sp/>for<sp/>you<sp/>to<sp/>directly<sp/>use<sp/>after<sp/>you<sp/>obtain<sp/>data<sp/>from<sp/>considerable<sp/>ways</highlight></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>difficulty<sp/>parameter<sp/>is<sp/>listed<sp/>0-4<sp/>as<sp/>Basic<sp/>to<sp/>Re:Master.<sp/>In<sp/>MaiLib<sp/>I<sp/>specified<sp/>rules<sp/>for<sp/>Easy<sp/>and<sp/>Utage<sp/>but<sp/>it<sp/>takes<sp/>times<sp/>for<sp/>me<sp/>to<sp/>figure<sp/>it<sp/>out,<sp/>or<sp/>you<sp/>could<sp/>implement<sp/>on<sp/>you<sp/>own<sp/>referring<sp/>MaiLib<sp/>code</highlight></codeline>
<codeline><highlight class="normal">-<sp/>All<sp/>of<sp/>the<sp/>path<sp/>should<sp/>end<sp/>with<sp/>path<sp/>separator<sp/>like<sp/>&quot;/&quot;<sp/>or<sp/>&quot;\&quot;.<sp/>You<sp/>cannot<sp/>include<sp/>quote<sp/>signs<sp/>in<sp/>the<sp/>path.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>If<sp/>you<sp/>have<sp/>difficulty<sp/>using<sp/>the<sp/>commands,<sp/>please<sp/>refer<sp/>VSCode<sp/>launch.json<sp/>where<sp/>I<sp/>included<sp/>several<sp/>examples</highlight></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>whole<sp/>program<sp/>was<sp/>planned<sp/>to<sp/>convert<sp/>from<sp/>ma2<sp/>to<sp/>simai<sp/>initially<sp/>and<sp/>all<sp/>other<sp/>features<sp/>were<sp/>developed<sp/>after<sp/>that,<sp/>so<sp/>there<sp/>is<sp/>a<sp/>HUGE<sp/>amount<sp/>of<sp/>compromises<sp/>in<sp/>code<sp/>design<sp/>which<sp/>made<sp/>it<sp/>hard<sp/>to<sp/>read<sp/>(but<sp/>works<sp/>so<sp/>far).<sp/>It<sp/>would<sp/>be<sp/>most<sp/>kind<sp/>of<sp/>you<sp/>if<sp/>you<sp/>would<sp/>like<sp/>to<sp/>help<sp/>me<sp/>fixing<sp/>that</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Disclaimer</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Copyrights<sp/>of<sp/>the<sp/>works<sp/>belong<sp/>to<sp/>each<sp/>individual<sp/>right<sp/>holders.<sp/>This<sp/>tool<sp/>is<sp/>purely<sp/>used<sp/>as<sp/>non-commercial<sp/>and<sp/>study<sp/>purpose.<sp/>You<sp/>should<sp/>find<sp/>your<sp/>way<sp/>for<sp/>any<sp/>resource<sp/>might<sp/>be<sp/>used<sp/>and<sp/>properly<sp/>use<sp/>at<sp/>your<sp/>own<sp/>risk.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>If<sp/>you<sp/>would<sp/>like<sp/>to<sp/>use<sp/>the<sp/>parser<sp/>in<sp/>your<sp/>project,<sp/>please<sp/>refer<sp/>[MaiLib](https://github.com/Neskol/MaiLib)<sp/>and<sp/>hopefully<sp/>that<sp/>helps!</highlight></codeline>
    </programlisting>
    <location file="Neskol/MaiLib/README.md"/>
  </compounddef>
</doxygen>
