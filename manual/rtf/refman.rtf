{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment MaiLib  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0.4.0 \par
}}MaiLib}
{\comment Generated by doxygen 1.9.6.}
{\creatim \yr2023\mo2\dy5\hr13\min1\sec4}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt MaiLib}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0.4.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Sun Feb 5 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
MaiLib{\tc \v MaiLib}\par \pard\plain 
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
A library for processing maimai charts
\par}
{\tc\tcl2 \v A library for processing maimai charts}
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \zwjOne demo implementation is MaichartConverter to convert between Simai and Ma2. Please see {\f2 MaichartConverter} for more information. \par
}{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Build
\par}
{\tc\tcl3 \v Build}
git clone dotnet build \par}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Usage
\par}
{\tc\tcl3 \v Usage}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The basic parts of this is {\f2 Chart}  - you could use this to construct different charts.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
This library follows Tokenizer - Parser - Compiler format to process files and uses Abstract Syntax Tree for grammer decomposing when implementing Simai and Ma2 format support. If you were to extend format supporting, make sure you also implement your Tokenizer, Parser, and Compiler, and make them follow Interface {\f2 ITokenizer} , {\f2 IParser} , and {\f2 ICompiler} .\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The {\f2 Chart}  base class is a intermediate format to achieve inter-format compatability. If you are adding a new format, be sure to also create a class implementing this base class. The {\f2 Chart}  class has already implemented the functions you need for a maimai chart, and you only need to implement several abstract method in this class to fit with your format.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Then, you could create a maimai chart instance in your code. For example, creating a Ma2 chart could be done by {\f2 Chart ma2Chart = new Ma2();} \par}
\par
\par}
\par}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Additional notice for Simai compatability
\par}
{\tc\tcl2 \v Additional notice for Simai compatability}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
As always, I think Simai is a language more focusing on charting rather than interpreting. I still have no idea why there is still no UI-based charting tool but let everyone learn this full-of-compromise language, especially after Festival added new features. This made interpreting Simai a PAIN since the idea how it converts between ticks and times are vague and unreasonable.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
For example, it defines a Slide note will have a wait time of 1 beat or one 1/4 note (or crotchet for music community) after its start tap. If your Slide starts longer or shorter than 1 quaver of current BPM, you will have to 1) change the BPM for this specific Slide or 2) define the time by [wait time##last time] - and calculating that is extremely time consuming when converting tick to time.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
I hope someone could develop a better language than Simai as a intermediate language between coding and charting. Thank you.\par}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Parameters notice
\par}
{\tc\tcl3 \v Parameters notice}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
music files should be named musicxxxxxx.mp3 which xxxxxx matches the music id specified in music.xml in each a000 folder, and compensate 0s at the front to 6 digits\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bga files should be named xxxxxx.mp4 which matches the music id specified in music.xml in each a000 folder, and compensate 0s at the front to 6 digits\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
image folder should be structured in image/Texture2D/ and the files should start with UI_Jacket_xxxxxx.jpg which xxxxxx matches the music id specified in music.xml in each a000 folder, and compensate 0s at the front to 6 digits\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
All of the rules specified above is in convenience for you to directly use after you obtain data from considerable ways\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The difficulty parameter is listed 0-4 as Basic to Re:Master. In {\b MaiLib} I specified rules for Easy and Utage but it takes times for me to figure it out, or you could implement on you own referring {\b MaiLib} code\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
All of the path should end with path separator like "/" or "\\". You cannot include quote signs in the path.
- If you have difficulty using the commands, please refer VSCode launch.json where I included several examples
- The whole program was planned to convert from ma2 to simai initially and all other features were developed after that, so there is a HUGE amount of compromises in code design which made it hard to read (but works so far). It would be most kind of you if you would like to help me fixing that

@subsection autotoc_md6 Disclaimer
- Copyrights of the works belong to each individual right holders. This tool is purely used as non-commercial and study purpose. You should find your way for any resource might be used and properly use at your own risk.
- If you would like to use the parser in your project, please refer <a href="{\f2 https://github.com/Neskol/MaiLib}" >{\b MaiLib} and hopefully that helps! \par}
\par
\par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the packages with brief descriptions (if available):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b MaiLib} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.BPMChanges\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.IChart\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.Chart\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.ChartPack\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.Ma2\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.Simai\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.XMaiL\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
IComparable
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.Note\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.BPMChange\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.Hold\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.MeasureChange\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.Slide\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
MaiLib.ICompiler\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIG \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.Compiler\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.SimaiCompiler\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
MaiLib.Ma2\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.XMaiL\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
IEquatable
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.Note\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
MaiLib.INote\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.Note\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
MaiLib.IParser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.Ma2Parser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.SimaiParser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
MaiLib.ITokenizer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.Ma2Tokenizer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.SimaiTokenizer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
MaiLib.MeasureChanges\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaiLib.TrackInformation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MaiLib.XmlInformation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b MaiLib.BPMChange} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BPMChange note for Simai })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.BPMChanges} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Chart} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class holding notes and information to form a chart })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.ChartPack} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a collection to store charts in relate of SD and DX })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Compiler} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Hold} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Hold Note })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.IChart} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for charts })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.ICompiler} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for Compilers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.INote} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface and basic functions for Notes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.IParser} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for parsers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.ITokenizer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and tokenize })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Ma2} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of chart in ma2 format })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Ma2Parser} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses ma2 file into Ma2 chart format })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Ma2Tokenizer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenizer of ma2 file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.MeasureChange} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines measure change note that indicates a measure change in bar })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.MeasureChanges} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store measure change notes in a chart })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Note} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic note })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Simai} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.SimaiCompiler} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compile various Ma2 Charts })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.SimaiParser} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse charts in Simai format })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.SimaiTokenizer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenize input file into tokens that parser can read })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.Slide} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide note (With START!) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.TrackInformation} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use xml to store track information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.XMaiL} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using xml to store maicharts })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaiLib.XmlInformation} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Xml to store trackInformation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b Neskol/MaiLib/{\b BPMChange.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b BPMChanges.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Chart.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b ChartPack.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Compiler.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Hold.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b IChart.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b ICompiler.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b INote.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b IParser.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b ITokenizer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b IXmlUtility.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Ma2.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Ma2parser.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Ma2Tokenizer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b MeasureChange.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b MeasureChanges.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Note.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Rest.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Simai.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b SimaiCompiler.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Simaiparser.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b SimaiTokenizer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Slide.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b Tap.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b TrackInformation.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b XMaiL.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/{\b XmlInformation.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/obj/Debug/net6.0/{\b .NETCoreApp,Version=v6.0.AssemblyAttributes.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/obj/Debug/net6.0/{\b MaiLib.AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Neskol/MaiLib/obj/Debug/net6.0/{\b MaiLib.GlobalUsings.g.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib Namespace Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib}
{\xe \v MaiLib}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BPMChange}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BPMChange note for Simai. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BPMChanges}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Chart}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class holding notes and information to form a chart. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ChartPack}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a collection to store charts in relate of SD and DX. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Compiler}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Hold}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Hold Note. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b IChart}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for charts. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b ICompiler}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for Compilers. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b INote}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface and basic functions for Notes. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b IParser}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for parsers. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b ITokenizer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and tokenize. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b IXmlUtility}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide handful methods for Xml. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ma2}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of chart in ma2 format. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ma2Parser}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses ma2 file into Ma2 chart format. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ma2Tokenizer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenizer of ma2 file. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MeasureChange}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines measure change note that indicates a measure change in bar. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MeasureChanges}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store measure change notes in a chart. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Note}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic note. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Rest}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Rest Note solely for Simai. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Simai}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SimaiCompiler}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compile various Ma2 Charts. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SimaiParser}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse charts in Simai format. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SimaiTokenizer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenize input file into tokens that parser can read. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Slide}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide note (With START!) }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrackInformation}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use xml to store track information. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b XMaiL}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using xml to store maicharts. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b XmlInformation}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Xml to store trackInformation. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b StdParam} \{ {\b Type}
, {\b Bar}
, {\b Tick}
, {\b KeyOrParam}
, {\b WaitTimeOrParam}
, {\b LastTime}
, {\b EndKey}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give enums of parameters of Standard Keys. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DxParam} \{ {\b Type}
, {\b Bar}
, {\b Tick}
, {\b Key}
, {\b KeyGroupOrLastTime}
, {\b SpecialEffect}
, {\b NoteSize}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give enums of parameters of Deluxe Keys. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v DxParam\:MaiLib}
{\xe \v MaiLib\:DxParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b MaiLib.DxParam}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give enums of parameters of Deluxe Keys. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Type\:MaiLib}
{\xe \v MaiLib\:Type}
{\qr Type{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\cell }{\cell }{\row }
{\xe \v Bar\:MaiLib}
{\xe \v MaiLib\:Bar}
{\qr Bar{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\cell }{\cell }{\row }
{\xe \v Tick\:MaiLib}
{\xe \v MaiLib\:Tick}
{\qr Tick{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\cell }{\cell }{\row }
{\xe \v Key\:MaiLib}
{\xe \v MaiLib\:Key}
{\qr Key{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\cell }{\cell }{\row }
{\xe \v KeyGroupOrLastTime\:MaiLib}
{\xe \v MaiLib\:KeyGroupOrLastTime}
{\qr KeyGroupOrLastTime{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\cell }{\cell }{\row }
{\xe \v SpecialEffect\:MaiLib}
{\xe \v MaiLib\:SpecialEffect}
{\qr SpecialEffect{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\cell }{\cell }{\row }
{\xe \v NoteSize\:MaiLib}
{\xe \v MaiLib\:NoteSize}
{\qr NoteSize{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 12} of file {\b Ma2parser.cs}.}\par
}
{\xe \v StdParam\:MaiLib}
{\xe \v MaiLib\:StdParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b MaiLib.StdParam}}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give enums of parameters of Standard Keys. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Type\:MaiLib}
{\xe \v MaiLib\:Type}
{\qr Type{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\cell }{\cell }{\row }
{\xe \v Bar\:MaiLib}
{\xe \v MaiLib\:Bar}
{\qr Bar{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\cell }{\cell }{\row }
{\xe \v Tick\:MaiLib}
{\xe \v MaiLib\:Tick}
{\qr Tick{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\cell }{\cell }{\row }
{\xe \v KeyOrParam\:MaiLib}
{\xe \v MaiLib\:KeyOrParam}
{\qr KeyOrParam{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\cell }{\cell }{\row }
{\xe \v WaitTimeOrParam\:MaiLib}
{\xe \v MaiLib\:WaitTimeOrParam}
{\qr WaitTimeOrParam{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\cell }{\cell }{\row }
{\xe \v LastTime\:MaiLib}
{\xe \v MaiLib\:LastTime}
{\qr LastTime{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\cell }{\cell }{\row }
{\xe \v EndKey\:MaiLib}
{\xe \v MaiLib\:EndKey}
{\qr EndKey{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 8} of file {\b Ma2parser.cs}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.BPMChange Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BPMChange note for Simai. }}\par
Inheritance diagram for MaiLib.BPMChange:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_b_p_m_change.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChange} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Empty. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChange} (int bar, int startTime, double {\b BPM})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChange with given bar, tick, BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChange} ({\b BPMChange} takeIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChange with take in value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChange} ({\b Note} takeIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChange with take in value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b Equals} (object? obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b Note} {\b NewInstance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override int {\b GetHashCode} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an empty note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ({\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a note from other note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b Note} {\b NewInstance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CompareTo} (Object? obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Equals} ({\b Note}? other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} ({\b BPMChanges} changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} (List< {\b BPMChange} > changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NoteGenre}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b IsNote}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NoteSpecificGenre}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b NoteType}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access NoteType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Key}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b KeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b KeyGroup}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the key group of the key - only for touch notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Bar}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Tick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedTick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedTick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TickTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b WaitTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedWaitTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedLastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedEndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Last time in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LastTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedLastTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b TickBPMDisagree}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores if the wait or last are in different BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b EndKey}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndKey. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b EndKeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of End Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Delayed}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Delayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b BPM}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Prev}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.prev;. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Next}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.next. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b SlideStart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the slide start of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b ConsecutiveSlide}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the consecutive of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b BPMChange} > {\b BPMChangeNotes}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteSpecificGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.SpecificType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.noteGenre. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b IsNote}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a true note. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get BPM Time tick unit of bpm. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BPMChange note for Simai. \par
}{
Definition at line {\b 8} of file {\b BPMChange.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BPMChange\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:BPMChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.BPMChange.BPMChange ()}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Empty. }}\par
{
Definition at line {\b 14} of file {\b BPMChange.cs}.}\par
}
{\xe \v BPMChange\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:BPMChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.BPMChange.BPMChange (int  {\i bar}, int  {\i startTime}, double  {\i BPM})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChange with given bar, tick, BPM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i startTime} \cell }{tick\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BPM} \cell }{BPM\cell }
{\row }
}
}{
Definition at line {\b 30} of file {\b BPMChange.cs}.}\par
}
{\xe \v BPMChange\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:BPMChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.BPMChange.BPMChange ({\b BPMChange}  {\i takeIn})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChange with take in value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i takeIn} \cell }{Take in BPMChange\cell }
{\row }
}
}{
Definition at line {\b 42} of file {\b BPMChange.cs}.}\par
}
{\xe \v BPMChange\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:BPMChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.BPMChange.BPMChange ({\b Note}  {\i takeIn})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChange with take in value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i takeIn} \cell }{Take in note\cell }
{\row }
}
}{
Definition at line {\b 54} of file {\b BPMChange.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.BPMChange.CheckValidity (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if qualified, false otherwise\par
}}}{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 62} of file {\b BPMChange.cs}.}\par
}
{\xe \v Compose\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.BPMChange.Compose (int  {\i format}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{0 if Simai, 1 if Ma2\cell }
{\row }
}
}{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 67} of file {\b BPMChange.cs}.}\par
}
{\xe \v Equals\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.BPMChange.Equals (object?  {\i obj})}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b BPMChange.cs}.}\par
}
{\xe \v GetHashCode\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:GetHashCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override int MaiLib.BPMChange.GetHashCode ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 116} of file {\b BPMChange.cs}.}\par
}
{\xe \v NewInstance\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:NewInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b Note} MaiLib.BPMChange.NewInstance (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 110} of file {\b BPMChange.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v IsNote\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:IsNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.BPMChange.IsNote{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b BPMChange.cs}.}\par
}
{\xe \v NoteGenre\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:NoteGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.BPMChange.NoteGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b BPMChange.cs}.}\par
}
{\xe \v NoteSpecificGenre\:MaiLib.BPMChange}
{\xe \v MaiLib.BPMChange\:NoteSpecificGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.BPMChange.NoteSpecificGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b BPMChange.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b BPMChange.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.BPMChanges Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} (List< int > bar, List< int > tick, List< double > bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct with changes listed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct empty BPMChange List. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} ({\b BPMChanges} takenIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChanges with existing one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Add} ({\b BPMChange} takeIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add BPMChange to change notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose change notes according to BPMChanges. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if the BPMChange is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose BPMChanges in beginning of MA2. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b BPMChange} > {\b ChangeNotes}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b InitialChange}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns first definitions. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b BPMChanges.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BPMChanges\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:BPMChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.BPMChanges.BPMChanges (List< int >  {\i bar}, List< int >  {\i tick}, List< double >  {\i bpm})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct with changes listed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar which contains changes\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick in bar contains changes\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{Specified BPM changes\cell }
{\row }
}
}{
Definition at line {\b 16} of file {\b BPMChanges.cs}.}\par
}
{\xe \v BPMChanges\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:BPMChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.BPMChanges.BPMChanges ()}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct empty BPMChange List. }}\par
{
Definition at line {\b 30} of file {\b BPMChanges.cs}.}\par
}
{\xe \v BPMChanges\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:BPMChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.BPMChanges.BPMChanges ({\b BPMChanges}  {\i takenIn})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChanges with existing one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i takenIn} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 40} of file {\b BPMChanges.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.BPMChanges.Add ({\b BPMChange}  {\i takeIn})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add BPMChange to change notes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i takeIn} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 63} of file {\b BPMChanges.cs}.}\par
}
{\xe \v CheckValidity\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.BPMChanges.CheckValidity ()}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if the BPMChange is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if valid, false elsewise\par
}}}{
Definition at line {\b 138} of file {\b BPMChanges.cs}.}\par
}
{\xe \v Compose\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.BPMChanges.Compose ()}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose BPMChanges in beginning of MA2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 148} of file {\b BPMChanges.cs}.}\par
}
{\xe \v Update\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.BPMChanges.Update ()}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose change notes according to BPMChanges. }}\par
{
Definition at line {\b 72} of file {\b BPMChanges.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ChangeNotes\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:ChangeNotes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b BPMChange}> MaiLib.BPMChanges.ChangeNotes{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b BPMChanges.cs}.}\par
}
{\xe \v InitialChange\:MaiLib.BPMChanges}
{\xe \v MaiLib.BPMChanges\:InitialChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.BPMChanges.InitialChange{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns first definitions. }}\par
{
Definition at line {\b 99} of file {\b BPMChanges.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b BPMChanges.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Chart Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Chart}
{\xe \v MaiLib.Chart}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class holding notes and information to form a chart. }}\par
Inheritance diagram for MaiLib.Chart:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_chart.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update properties in Good Brother for exporting. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CheckSlideStart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if all of the slide starts were in the notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ({\b BPMChanges} bpm, {\b MeasureChanges} measure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Take in and replace the current information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetBPMByTick} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the BPM at certain tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasBPMChangeInBetween} (int startTick, int endTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if there are BPM change in between ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates all information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export this Good Brother. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateLeastMeasure} (List< {\b Note} > bar)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the least none 0 measure of bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b RealNoteNumber} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return note number except Rest, BPM and Measure. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ContainNotes} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Judges if this bar contains notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateQuaver} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< {\b Note} > {\b FinishBar} (List< {\b Note} > bar, List< {\b BPMChange} > bpmChanges, int barNumber, int minimalQuaver)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish Bar writing byu adding specific rest note in between. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GCD} (int a, int b)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return GCD of A and B. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsPrime} (int number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a prime (1 counts) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetTimeStamp} ({\b BPMChanges} bpmChanges, int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return BPM tick unit of given bpm. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetNoteDetail} ({\b BPMChanges} bpmChanges, {\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For debug use: print out the note's time stamp in given bpm changes. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Note} > {\b Notes}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< List< {\b Note} > > {\b StoredChart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns this.Chart. aka List of bars. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to BPM Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Measure Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TapNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Tap Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BreakNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Break Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b HoldNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SlideNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Slide Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TouchNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ThoNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalNoteNumber}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to the total note number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b UnitScore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Unit Score. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Achievement}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to theoretical Achievement. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalDelay}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the total delayed value of this Chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return Information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsDXChart}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b FirstNote}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Definition}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the definition of this chart, default by 384. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class holding notes and information to form a chart. \par
}{
Definition at line {\b 13} of file {\b Chart.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Chart\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:Chart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Chart.Chart ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }}\par
{
Definition at line {\b 343} of file {\b Chart.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CalculateLeastMeasure\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:CalculateLeastMeasure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int MaiLib.Chart.CalculateLeastMeasure (List< {\b Note} >  {\i bar}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the least none 0 measure of bar. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{bar to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
List none 0 measure\par
}}}{
Definition at line {\b 603} of file {\b Chart.cs}.}\par
}
{\xe \v CalculateQuaver\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:CalculateQuaver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int MaiLib.Chart.CalculateQuaver (int  {\i length}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i length} \cell }{Last Time\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
[Definition:Length]=[Quaver:Beat]\par
}}}{
Definition at line {\b 669} of file {\b Chart.cs}.}\par
}
{\xe \v CheckSlideStart\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:CheckSlideStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.Chart.CheckSlideStart ()}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if all of the slide starts were in the notes. }}\par
{
Definition at line {\b 561} of file {\b Chart.cs}.}\par
}
{\xe \v CheckValidity\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool MaiLib.Chart.CheckValidity (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Implements {\b MaiLib.IChart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b MaiLib.Ma2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Simai} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Compose\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string MaiLib.Chart.Compose (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String of chart compiled\par
}}}{
Implements {\b MaiLib.IChart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b MaiLib.ChartPack} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Ma2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Simai} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Compose\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string MaiLib.Chart.Compose ({\b BPMChanges}  {\i bpm}, {\b MeasureChanges}  {\i measure}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{Override BPM array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i measure} \cell }{Override Measure array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Good Brother with override array\par
}}}{
Implemented in {\b MaiLib.Ma2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Simai} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ContainNotes\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:ContainNotes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool MaiLib.Chart.ContainNotes (List< {\b Note} >  {\i Bar}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Judges if this bar contains notes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Bar} \cell }{Bar to analyze on\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if contains, false otherwise\par
}}}{
Definition at line {\b 654} of file {\b Chart.cs}.}\par
}
{\xe \v FinishBar\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:FinishBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< {\b Note} > MaiLib.Chart.FinishBar (List< {\b Note} >  {\i bar}, List< {\b BPMChange} >  {\i bpmChanges}, int  {\i barNumber}, int  {\i minimalQuaver}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish Bar writing byu adding specific rest note in between. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar to finish with\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpmChanges} \cell }{BPMChange Notes\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i barNumber} \cell }{Bar number of Bar\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i minimalQuaver} \cell }{Minimal interval calculated from bar\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Finished bar\par
}}}{
Definition at line {\b 687} of file {\b Chart.cs}.}\par
}
{\xe \v GCD\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:GCD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int MaiLib.Chart.GCD (int  {\i a}, int  {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return GCD of A and B. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{A\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i b} \cell }{B\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
GCD of A and B\par
}}}{
Definition at line {\b 815} of file {\b Chart.cs}.}\par
}
{\xe \v GetBPMByTick\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:GetBPMByTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Chart.GetBPMByTick (int  {\i overallTick})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the BPM at certain tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i overallTick} \cell }{Tick to specify\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
BPM at that tick\par
}}}{
Definition at line {\b 997} of file {\b Chart.cs}.}\par
}
{\xe \v GetBPMTimeUnit\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:GetBPMTimeUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double MaiLib.Chart.GetBPMTimeUnit (double  {\i bpm}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return BPM tick unit of given bpm. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM to calculate\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tick Unit of BPM\par
}}}{
Definition at line {\b 966} of file {\b Chart.cs}.}\par
}
{\xe \v GetNoteDetail\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:GetNoteDetail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string MaiLib.Chart.GetNoteDetail ({\b BPMChanges}  {\i bpmChanges}, {\b Note}  {\i inTake}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For debug use: print out the note's time stamp in given bpm changes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpmChanges} \cell }{The list of BPMChanges\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inTake} \cell }{The Note to test\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String of result, consists tick time stamp, wait time stamp and last time stamp\par
}}}{
Definition at line {\b 978} of file {\b Chart.cs}.}\par
}
{\xe \v GetTimeStamp\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:GetTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double MaiLib.Chart.GetTimeStamp ({\b BPMChanges}  {\i bpmChanges}, int  {\i overallTick}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i overallTick} \cell }{Note.Bar*384+Note.Tick\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Appropriate time stamp in seconds\par
}}}{
Definition at line {\b 930} of file {\b Chart.cs}.}\par
}
{\xe \v GetTimeStamp\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:GetTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Chart.GetTimeStamp (int  {\i bar}, int  {\i tick})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Time stamp of bar and note\par
}}<requires>this.bpmChanges!=null</requires> \par
}{
Implements {\b MaiLib.IChart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 852} of file {\b Chart.cs}.}\par
}
{\xe \v GetTimeStamp\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:GetTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Chart.GetTimeStamp (int  {\i overallTick})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i overallTick} \cell }{Note.Bar*384+Note.Tick\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Appropriate time stamp in seconds\par
}}}{
Definition at line {\b 889} of file {\b Chart.cs}.}\par
}
{\xe \v HasBPMChangeInBetween\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:HasBPMChangeInBetween}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.Chart.HasBPMChangeInBetween (int  {\i startTick}, int  {\i endTick})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if there are BPM change in between ticks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i startTick} \cell }{Tick to start with\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i endTick} \cell }{Tick to end with\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 1022} of file {\b Chart.cs}.}\par
}
{\xe \v IsPrime\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:IsPrime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool MaiLib.Chart.IsPrime (int  {\i number}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a prime (1 counts) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i number} \cell }{Number to inspect\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if is prime, false otherwise\par
}}}{
Definition at line {\b 825} of file {\b Chart.cs}.}\par
}
{\xe \v RealNoteNumber\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:RealNoteNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int MaiLib.Chart.RealNoteNumber (List< {\b Note} >  {\i Bar}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return note number except Rest, BPM and Measure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Bar} \cell }{bar of note to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Number\par
}}}{
Definition at line {\b 636} of file {\b Chart.cs}.}\par
}
{\xe \v RotateNotes\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:RotateNotes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.Chart.RotateNotes (string  {\i method})}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i method} \cell }{Clockwise90, Clockwise 180, Counterclockwise90, Counterclockwise 180, UpSideDown, LeftToRight\cell }
{\row }
}
}{
Implements {\b MaiLib.IChart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 1114} of file {\b Chart.cs}.}\par
}
{\xe \v ShiftByOffset\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:ShiftByOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.Chart.ShiftByOffset (int  {\i bar}, int  {\i tick})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar to add for offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick to add for offset\cell }
{\row }
}
}{
Implements {\b MaiLib.IChart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 1108} of file {\b Chart.cs}.}\par
}
{\xe \v ShiftByOffset\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:ShiftByOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.Chart.ShiftByOffset (int  {\i overallTick})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i overallTick} \cell }{Tick to add for offset\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method is not designed with detecting overallTickOverflow!\par
}{
Implements {\b MaiLib.IChart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 1037} of file {\b Chart.cs}.}\par
}
{\xe \v TakeInformation\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:TakeInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.Chart.TakeInformation (Dictionary< string, string >  {\i information})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Take in and replace the current information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i information} \cell }{Dictionary containing information needed\cell }
{\row }
}
}{
Definition at line {\b 844} of file {\b Chart.cs}.}\par
}
{\xe \v Update\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void MaiLib.Chart.Update (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update properties in Good Brother for exporting. }}\par
{
Implements {\b MaiLib.IChart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 359} of file {\b Chart.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Achievement\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:Achievement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.Achievement{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to theoretical Achievement. }}\par
{
Definition at line {\b 277} of file {\b Chart.cs}.}\par
}
{\xe \v BPMChanges\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:BPMChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BPMChanges} MaiLib.Chart.BPMChanges{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to BPM Changes. }}\par
{
Definition at line {\b 138} of file {\b Chart.cs}.}\par
}
{\xe \v BreakNumber\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:BreakNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.BreakNumber{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Break Number. }}\par
{
Definition at line {\b 183} of file {\b Chart.cs}.}\par
}
{\xe \v Definition\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:Definition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.Definition{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the definition of this chart, default by 384. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.chartDefinition\par
}{
Definition at line {\b 337} of file {\b Chart.cs}.}\par
}
{\xe \v FirstNote\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:FirstNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note}? MaiLib.Chart.FirstNote{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 327} of file {\b Chart.cs}.}\par
}
{\xe \v HoldNumber\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:HoldNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.HoldNumber{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Hold Number. }}\par
{
Definition at line {\b 198} of file {\b Chart.cs}.}\par
}
{\xe \v Information\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:Information}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.Chart.Information{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return Information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.Information\par
}{
Definition at line {\b 309} of file {\b Chart.cs}.}\par
}
{\xe \v IsDXChart\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:IsDXChart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.Chart.IsDXChart{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 321} of file {\b Chart.cs}.}\par
}
{\xe \v MeasureChanges\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:MeasureChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MeasureChanges} MaiLib.Chart.MeasureChanges{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Measure Changes. }}\par
{
Definition at line {\b 153} of file {\b Chart.cs}.}\par
}
{\xe \v Notes\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:Notes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b Note}> MaiLib.Chart.Notes{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Notes. }}\par
{
Definition at line {\b 107} of file {\b Chart.cs}.}\par
}
{\xe \v SlideNumber\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:SlideNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.SlideNumber{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Slide Number. }}\par
{
Definition at line {\b 213} of file {\b Chart.cs}.}\par
}
{\xe \v StoredChart\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:StoredChart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<List<{\b Note}> > MaiLib.Chart.StoredChart{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns this.Chart. aka List of bars. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.Chart\par
}{
Definition at line {\b 123} of file {\b Chart.cs}.}\par
}
{\xe \v TapNumber\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:TapNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.TapNumber{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Tap Number. }}\par
{
Definition at line {\b 168} of file {\b Chart.cs}.}\par
}
{\xe \v ThoNumber\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:ThoNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.ThoNumber{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Hold Number. }}\par
{
Definition at line {\b 243} of file {\b Chart.cs}.}\par
}
{\xe \v TotalDelay\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:TotalDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.TotalDelay{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the total delayed value of this Chart. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TotalDelayedValue\par
}{
Definition at line {\b 293} of file {\b Chart.cs}.}\par
}
{\xe \v TotalNoteNumber\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:TotalNoteNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.TotalNoteNumber{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to the total note number. }}\par
{
Definition at line {\b 258} of file {\b Chart.cs}.}\par
}
{\xe \v TouchNumber\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:TouchNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Chart.TouchNumber{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Number. }}\par
{
Definition at line {\b 228} of file {\b Chart.cs}.}\par
}
{\xe \v UnitScore\:MaiLib.Chart}
{\xe \v MaiLib.Chart\:UnitScore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int [] MaiLib.Chart.UnitScore{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Unit Score. }}\par
{
Definition at line {\b 266} of file {\b Chart.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Chart.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.ChartPack Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.ChartPack}
{\xe \v MaiLib.ChartPack}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a collection to store charts in relate of SD and DX. }}\par
Inheritance diagram for MaiLib.ChartPack:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_chart_pack.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ChartPack} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update properties in Good Brother for exporting. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CheckSlideStart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if all of the slide starts were in the notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ({\b BPMChanges} bpm, {\b MeasureChanges} measure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Take in and replace the current information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetBPMByTick} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the BPM at certain tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasBPMChangeInBetween} (int startTick, int endTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if there are BPM change in between ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates all information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export this Good Brother. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Chart} >[] {\b SDDXCharts}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accesses this.sddxCharts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrackInformation}? {\b GlobalInformation}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accesses this.globalInformation. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Note} > {\b Notes}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< List< {\b Note} > > {\b StoredChart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns this.Chart. aka List of bars. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to BPM Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Measure Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TapNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Tap Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BreakNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Break Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b HoldNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SlideNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Slide Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TouchNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ThoNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalNoteNumber}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to the total note number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b UnitScore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Unit Score. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Achievement}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to theoretical Achievement. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalDelay}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the total delayed value of this Chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return Information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsDXChart}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b FirstNote}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Definition}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the definition of this chart, default by 384. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateLeastMeasure} (List< {\b Note} > bar)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the least none 0 measure of bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b RealNoteNumber} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return note number except Rest, BPM and Measure. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ContainNotes} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Judges if this bar contains notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateQuaver} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< {\b Note} > {\b FinishBar} (List< {\b Note} > bar, List< {\b BPMChange} > bpmChanges, int barNumber, int minimalQuaver)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish Bar writing byu adding specific rest note in between. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GCD} (int a, int b)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return GCD of A and B. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsPrime} (int number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a prime (1 counts) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetTimeStamp} ({\b BPMChanges} bpmChanges, int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return BPM tick unit of given bpm. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetNoteDetail} ({\b BPMChanges} bpmChanges, {\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For debug use: print out the note's time stamp in given bpm changes. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a collection to store charts in relate of SD and DX. \par
}{
Definition at line {\b 8} of file {\b ChartPack.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ChartPack\:MaiLib.ChartPack}
{\xe \v MaiLib.ChartPack\:ChartPack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.ChartPack.ChartPack ()}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{
Definition at line {\b 24} of file {\b ChartPack.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compose\:MaiLib.ChartPack}
{\xe \v MaiLib.ChartPack\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.ChartPack.Compose (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String of chart compiled\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 63} of file {\b ChartPack.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v GlobalInformation\:MaiLib.ChartPack}
{\xe \v MaiLib.ChartPack\:GlobalInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TrackInformation}? MaiLib.ChartPack.GlobalInformation{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accesses this.globalInformation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.globalInformation\par
}{
Definition at line {\b 49} of file {\b ChartPack.cs}.}\par
}
{\xe \v SDDXCharts\:MaiLib.ChartPack}
{\xe \v MaiLib.ChartPack\:SDDXCharts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b Chart}> [] MaiLib.ChartPack.SDDXCharts{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accesses this.sddxCharts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.sddxCharts\par
}{
Definition at line {\b 33} of file {\b ChartPack.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b ChartPack.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Compiler Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Compiler}
{\xe \v MaiLib.Compiler}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
Inheritance diagram for MaiLib.Compiler:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_compiler.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Compiler} (string location, string targetLocation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct compiler of a single song. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Compiler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ({\b Chart} chart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return compose of specified chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} (bool isUtage, List< string > ma2files)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose utage charts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b SymbolicBPMTable} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the chart bpm change table of MaiCompiler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b SymbolicFirstNote} (bool isUtage)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the first note of master chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateOneLineSummary} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate one line summary of this track with ID, name, genre and difficulty. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b difficulty} = \{ "Easy", "Basic", "Advanced", "Expert", "Master", "Remaster", "Utage" \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores difficulty keywords. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GlobalSep}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the path separator. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b CompiledChart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the information of Compiled Chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Chart} > {\b Charts}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access stored charts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access global information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XmlInformation} {\b MusicXml}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access read in music XML file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Difficulty}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access difficulty;. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b RotateDictionary}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the rotate dictionary. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 10} of file {\b Compiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Compiler\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:Compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Compiler.Compiler (string  {\i location}, string  {\i targetLocation})}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct compiler of a single song. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{Folder\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i targetLocation} \cell }{Output folder\cell }
{\row }
}
}{
Definition at line {\b 122} of file {\b Compiler.cs}.}\par
}
{\xe \v Compiler\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:Compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Compiler.Compiler ()}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }}\par
{
Definition at line {\b 143} of file {\b Compiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.Compiler.CheckValidity ()}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if valid, false otherwise\par
}}}{
Implements {\b MaiLib.ICompiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 159} of file {\b Compiler.cs}.}\par
}
{\xe \v Compose\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string MaiLib.Compiler.Compose (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding chart\par
}}}{
Implements {\b MaiLib.ICompiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b MaiLib.SimaiCompiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Compose\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string MaiLib.Compiler.Compose (bool  {\i isUtage}, List< string >  {\i ma2files}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose utage charts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i isUtage} \cell }{switch to produce utage\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding utage chart\par
}}}{
Implemented in {\b MaiLib.SimaiCompiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Compose\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string MaiLib.Compiler.Compose ({\b Chart}  {\i chart}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return compose of specified chart. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chart} \cell }{Chart to compose\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Maidata of specified chart WITHOUT headers\par
}}}{
Implemented in {\b MaiLib.SimaiCompiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GenerateOneLineSummary\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:GenerateOneLineSummary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Compiler.GenerateOneLineSummary ()}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate one line summary of this track with ID, name, genre and difficulty. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 241} of file {\b Compiler.cs}.}\par
}
{\xe \v SymbolicBPMTable\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:SymbolicBPMTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BPMChanges} MaiLib.Compiler.SymbolicBPMTable ()}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the chart bpm change table of MaiCompiler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
First BPM change table of this.charts\par
}}}{
Definition at line {\b 194} of file {\b Compiler.cs}.}\par
}
{\xe \v SymbolicFirstNote\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:SymbolicFirstNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note} MaiLib.Compiler.SymbolicFirstNote (bool  {\i isUtage})}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the first note of master chart. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The first note of the master chart, or first note of the Utage chart if isUtage is turned true\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i System.NullReferenceException} \cell }{Throws null reference exception if the chart does not exist\cell }
{\row }
}
}{
Definition at line {\b 214} of file {\b Compiler.cs}.}\par
}
{\xe \v TakeInformation\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:TakeInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.Compiler.TakeInformation (Dictionary< string, string >  {\i information})}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i information} \cell }{TakeInformation to provide\cell }
{\row }
}
}{
Implements {\b MaiLib.ICompiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 185} of file {\b Compiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v difficulty\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:difficulty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly string [] MaiLib.Compiler.difficulty = \{ "Easy", "Basic", "Advanced", "Expert", "Master", "Remaster", "Utage" \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores difficulty keywords. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Difficulty\par
}{
Definition at line {\b 15} of file {\b Compiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Charts\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:Charts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b Chart}> MaiLib.Compiler.Charts{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access stored charts. }}\par
{
Definition at line {\b 67} of file {\b Compiler.cs}.}\par
}
{\xe \v CompiledChart\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:CompiledChart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<string> MaiLib.Compiler.CompiledChart{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the information of Compiled Chart. }}\par
{
Definition at line {\b 58} of file {\b Compiler.cs}.}\par
}
{\xe \v Difficulty\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:Difficulty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string [] MaiLib.Compiler.Difficulty{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access difficulty;. }}\par
{
Definition at line {\b 94} of file {\b Compiler.cs}.}\par
}
{\xe \v GlobalSep\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:GlobalSep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Compiler.GlobalSep{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the path separator. }}\par
{
Definition at line {\b 45} of file {\b Compiler.cs}.}\par
}
{\xe \v Information\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:Information}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.Compiler.Information{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access global information. }}\par
{
Definition at line {\b 76} of file {\b Compiler.cs}.}\par
}
{\xe \v MusicXml\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:MusicXml}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b XmlInformation} MaiLib.Compiler.MusicXml{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access read in music XML file. }}\par
{
Definition at line {\b 85} of file {\b Compiler.cs}.}\par
}
{\xe \v RotateDictionary\:MaiLib.Compiler}
{\xe \v MaiLib.Compiler\:RotateDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.Compiler.RotateDictionary{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the rotate dictionary. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Key: Music ID in Digits; Value: Rotate Parameter\par
}{
Definition at line {\b 103} of file {\b Compiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Compiler.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Hold Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Hold}
{\xe \v MaiLib.Hold}
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Hold Note. }}\par
Inheritance diagram for MaiLib.Hold:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_hold.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} (string noteType, int bar, int startTime, string key, int lastTime)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Hold Note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} (string noteType, int bar, int startTime, string key, int lastTime, int specialEffect, string touchSize)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Touch Hold Note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} ({\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Hold from another note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b Note} {\b NewInstance} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an empty note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ({\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a note from other note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b Note} {\b NewInstance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CompareTo} (Object? obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Equals} ({\b Note}? other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} ({\b BPMChanges} changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} (List< {\b BPMChange} > changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SpecialEffect}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns if the note comes with Special Effect. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TouchSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the size of the note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NoteGenre}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b IsNote}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NoteSpecificGenre}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b NoteType}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access NoteType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Key}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b KeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b KeyGroup}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the key group of the key - only for touch notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Bar}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Tick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedTick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedTick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TickTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b WaitTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedWaitTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedLastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedEndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Last time in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LastTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedLastTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b TickBPMDisagree}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores if the wait or last are in different BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b EndKey}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndKey. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b EndKeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of End Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Delayed}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Delayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b BPM}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Prev}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.prev;. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Next}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.next. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b SlideStart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the slide start of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b ConsecutiveSlide}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the consecutive of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b BPMChange} > {\b BPMChangeNotes}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteSpecificGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.SpecificType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.noteGenre. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b IsNote}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a true note. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get BPM Time tick unit of bpm. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Hold Note. \par
}{
Definition at line {\b 6} of file {\b Hold.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Hold\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:Hold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Hold.Hold (string  {\i noteType}, int  {\i bar}, int  {\i startTime}, string  {\i key}, int  {\i lastTime})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Hold Note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i noteType} \cell }{HLD,XHO\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{Key of the hold note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of the hold note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i startTime} \cell }{Tick of the hold note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lastTime} \cell }{Last time of the hold note\cell }
{\row }
}
}{
Definition at line {\b 32} of file {\b Hold.cs}.}\par
}
{\xe \v Hold\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:Hold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Hold.Hold (string  {\i noteType}, int  {\i bar}, int  {\i startTime}, string  {\i key}, int  {\i lastTime}, int  {\i specialEffect}, string  {\i touchSize})}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Touch Hold Note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i noteType} \cell }{THO\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{Key of the hold note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of the hold note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i startTime} \cell }{Tick of the hold note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lastTime} \cell }{Last time of the hold note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i specialEffect} \cell }{Store if the touch note ends with special effect\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i touchSize} \cell }{Determines how large the touch note is\cell }
{\row }
}
}{
Definition at line {\b 54} of file {\b Hold.cs}.}\par
}
{\xe \v Hold\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:Hold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Hold.Hold ({\b Note}  {\i inTake})}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Hold from another note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inTake} \cell }{The intake note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i NullReferenceException} \cell }{Will raise exception if touch size is null\cell }
{\row }
}
}{
Definition at line {\b 71} of file {\b Hold.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.Hold.CheckValidity (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if qualified, false otherwise\par
}}}{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 121} of file {\b Hold.cs}.}\par
}
{\xe \v Compose\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Hold.Compose (int  {\i format}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{0 if Simai, 1 if Ma2\cell }
{\row }
}
}{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 133} of file {\b Hold.cs}.}\par
}
{\xe \v NewInstance\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:NewInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b Note} MaiLib.Hold.NewInstance (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 188} of file {\b Hold.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v IsNote\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:IsNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.Hold.IsNote{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 177} of file {\b Hold.cs}.}\par
}
{\xe \v NoteGenre\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:NoteGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Hold.NoteGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 175} of file {\b Hold.cs}.}\par
}
{\xe \v NoteSpecificGenre\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:NoteSpecificGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Hold.NoteSpecificGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 179} of file {\b Hold.cs}.}\par
}
{\xe \v SpecialEffect\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:SpecialEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Hold.SpecialEffect{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns if the note comes with Special Effect. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 if no, 1 if yes\par
}{
Definition at line {\b 107} of file {\b Hold.cs}.}\par
}
{\xe \v TouchSize\:MaiLib.Hold}
{\xe \v MaiLib.Hold\:TouchSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Hold.TouchSize{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the size of the note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M1 if regular, L1 if large\par
}{
Definition at line {\b 116} of file {\b Hold.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Hold.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.IChart Interface Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.IChart}
{\xe \v MaiLib.IChart}
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for charts. }}\par
Inheritance diagram for MaiLib.IChart:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_mai_lib_1_1_i_chart.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates all information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export this Good Brother. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for charts. \par
}{
Definition at line {\b 6} of file {\b IChart.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.IChart}
{\xe \v MaiLib.IChart\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.IChart.CheckValidity ()}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Implemented in {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Ma2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Simai} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Compose\:MaiLib.IChart}
{\xe \v MaiLib.IChart\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.IChart.Compose ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export this Good Brother. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Implemented in {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.ChartPack} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Ma2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Simai} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetTimeStamp\:MaiLib.IChart}
{\xe \v MaiLib.IChart\:GetTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.IChart.GetTimeStamp (int  {\i bar}, int  {\i tick})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Time stamp of bar and note\par
}}<requires>this.bpmChanges!=null</requires> \par
}{
Implemented in {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v RotateNotes\:MaiLib.IChart}
{\xe \v MaiLib.IChart\:RotateNotes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.IChart.RotateNotes (string  {\i method})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i method} \cell }{Clockwise90, Clockwise 180, Counterclockwise90, Counterclockwise 180, UpSideDown, LeftToRight\cell }
{\row }
}
}{
Implemented in {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ShiftByOffset\:MaiLib.IChart}
{\xe \v MaiLib.IChart\:ShiftByOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.IChart.ShiftByOffset (int  {\i bar}, int  {\i tick})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar to add for offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick to add for offset\cell }
{\row }
}
}{
Implemented in {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ShiftByOffset\:MaiLib.IChart}
{\xe \v MaiLib.IChart\:ShiftByOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.IChart.ShiftByOffset (int  {\i overallTick})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i overallTick} \cell }{Tick to add for offset\cell }
{\row }
}
}{
Implemented in {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Update\:MaiLib.IChart}
{\xe \v MaiLib.IChart\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.IChart.Update ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates all information. }}\par
{
Implemented in {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b IChart.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.ICompiler Interface Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.ICompiler}
{\xe \v MaiLib.ICompiler}
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for Compilers. }}\par
Inheritance diagram for MaiLib.ICompiler:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_mai_lib_1_1_i_compiler.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for Compilers. \par
}{
Definition at line {\b 6} of file {\b ICompiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.ICompiler}
{\xe \v MaiLib.ICompiler\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.ICompiler.CheckValidity ()}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if valid, false otherwise\par
}}}{
Implemented in {\b MaiLib.Compiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Ma2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Compose\:MaiLib.ICompiler}
{\xe \v MaiLib.ICompiler\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.ICompiler.Compose ()}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding chart\par
}}}{
Implemented in {\b MaiLib.Compiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Ma2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.SimaiCompiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.XMaiL} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v TakeInformation\:MaiLib.ICompiler}
{\xe \v MaiLib.ICompiler\:TakeInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.ICompiler.TakeInformation (Dictionary< string, string >  {\i information})}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i information} \cell }{TakeInformation to provide\cell }
{\row }
}
}{
Implemented in {\b MaiLib.Compiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b ICompiler.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.INote Interface Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.INote}
{\xe \v MaiLib.INote}
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface and basic functions for Notes. }}\par
Inheritance diagram for MaiLib.INote:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_mai_lib_1_1_i_note.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface and basic functions for Notes. \par
}{
Definition at line {\b 6} of file {\b INote.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.INote}
{\xe \v MaiLib.INote\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.INote.CheckValidity ()}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if qualified, false otherwise\par
}}}{
Implemented in {\b MaiLib.BPMChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Hold} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.MeasureChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.Slide} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Compose\:MaiLib.INote}
{\xe \v MaiLib.INote\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.INote.Compose (int  {\i format})}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{0 if Simai, 1 if Ma2\cell }
{\row }
}
}{
Implemented in {\b MaiLib.BPMChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Hold} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.MeasureChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.Slide} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Flip\:MaiLib.INote}
{\xe \v MaiLib.INote\:Flip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.INote.Flip (string  {\i method})}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i method} \cell }{UpSideDown, LeftToRight, Clockwise90/180, Counterclockwise90/180\cell }
{\row }
}
}{
Implemented in {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetTimeStamp\:MaiLib.INote}
{\xe \v MaiLib.INote\:GetTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.INote.GetTimeStamp (int  {\i overallTick})}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i overallTick} \cell }{Note.Bar*384+Note.Tick\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Appropriate time stamp in seconds\par
}}}{
Implemented in {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Update\:MaiLib.INote}
{\xe \v MaiLib.INote\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.INote.Update ()}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if Calculated Times is defined, false otherwise\par
}}}{
Implemented in {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b INote.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.IParser Interface Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.IParser}
{\xe \v MaiLib.IParser}
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for parsers. }}\par
Inheritance diagram for MaiLib.IParser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_mai_lib_1_1_i_parser.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} {\b ChartOfToken} (string[] token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct GoodBrother of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct BPMChanges of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return corresponding MeasureChanges. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token, int bar, int tick, {\b Note} slideStart, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for parsers. \par
}{
Definition at line {\b 8} of file {\b IParser.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BPMChangesOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:BPMChangesOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BPMChanges} MaiLib.IParser.BPMChangesOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct BPMChanges of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to intake\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding BPMChanges\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIW \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ChartOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:ChartOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Chart} MaiLib.IParser.ChartOfToken (string[]  {\i token})}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct GoodBrother of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to intake\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding GoodBrother\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v HoldOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:HoldOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Hold} MaiLib.IParser.HoldOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Hold Note\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v HoldOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:HoldOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Hold} MaiLib.IParser.HoldOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Hold Note\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v MeasureChangesOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:MeasureChangesOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MeasureChanges} MaiLib.IParser.MeasureChangesOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return corresponding MeasureChanges. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Intake token\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding measure change\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v NoteOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:NoteOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note} MaiLib.IParser.NoteOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Note\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v NoteOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:NoteOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note} MaiLib.IParser.NoteOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Note\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v SlideOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:SlideOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Slide} MaiLib.IParser.SlideOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Slide Note\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v SlideOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:SlideOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Slide} MaiLib.IParser.SlideOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, {\b Note}  {\i slideStart}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i slideStart} \cell }{The start note of this slide\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Slide Note\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v TapOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:TapOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tap MaiLib.IParser.TapOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Tap\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v TapOfToken\:MaiLib.IParser}
{\xe \v MaiLib.IParser\:TapOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tap MaiLib.IParser.TapOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Tap\par
}}}{
Implemented in {\b MaiLib.Ma2Parser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b IParser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.ITokenizer Interface Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.ITokenizer}
{\xe \v MaiLib.ITokenizer}
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and tokenize. }}\par
Inheritance diagram for MaiLib.ITokenizer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_mai_lib_1_1_i_tokenizer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Tokens} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TokensFromText} (string text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and tokenize. \par
}{
Definition at line {\b 6} of file {\b ITokenizer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Tokens\:MaiLib.ITokenizer}
{\xe \v MaiLib.ITokenizer\:Tokens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string[] MaiLib.ITokenizer.Tokens (string  {\i location})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tokens from file specified\par
}}}{
Implemented in {\b MaiLib.Ma2Tokenizer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKE \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiTokenizer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v TokensFromText\:MaiLib.ITokenizer}
{\xe \v MaiLib.ITokenizer\:TokensFromText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string[] MaiLib.ITokenizer.TokensFromText (string  {\i text})}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tokens from text specified\par
}}}{
Implemented in {\b MaiLib.Ma2Tokenizer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKH \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.SimaiTokenizer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b ITokenizer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Ma2 Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Ma2}
{\xe \v MaiLib.Ma2}
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of chart in ma2 format. }}\par
Inheritance diagram for MaiLib.Ma2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_ma2.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ma2} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ma2} (List< {\b Note} > notes, {\b BPMChanges} bpmChanges, {\b MeasureChanges} measureChanges)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Ma2 with given notes, bpm change definitions and measure change definitions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ma2} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct GoodBrother from location specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ma2} (string[] tokens)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Ma2 with tokens given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ma2} ({\b Chart} takenIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Ma2 with existing values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ({\b BPMChanges} bpm, {\b MeasureChanges} measure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update properties in Good Brother for exporting. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CheckSlideStart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if all of the slide starts were in the notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ({\b BPMChanges} bpm, {\b MeasureChanges} measure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Take in and replace the current information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetBPMByTick} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the BPM at certain tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasBPMChangeInBetween} (int startTick, int endTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if there are BPM change in between ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates all information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export this Good Brother. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.ICompiler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateLeastMeasure} (List< {\b Note} > bar)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the least none 0 measure of bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b RealNoteNumber} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return note number except Rest, BPM and Measure. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ContainNotes} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Judges if this bar contains notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateQuaver} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< {\b Note} > {\b FinishBar} (List< {\b Note} > bar, List< {\b BPMChange} > bpmChanges, int barNumber, int minimalQuaver)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish Bar writing byu adding specific rest note in between. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GCD} (int a, int b)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return GCD of A and B. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsPrime} (int number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a prime (1 counts) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetTimeStamp} ({\b BPMChanges} bpmChanges, int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return BPM tick unit of given bpm. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetNoteDetail} ({\b BPMChanges} bpmChanges, {\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For debug use: print out the note's time stamp in given bpm changes. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Note} > {\b Notes}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< List< {\b Note} > > {\b StoredChart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns this.Chart. aka List of bars. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to BPM Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Measure Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TapNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Tap Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BreakNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Break Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b HoldNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SlideNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Slide Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TouchNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ThoNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalNoteNumber}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to the total note number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b UnitScore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Unit Score. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Achievement}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to theoretical Achievement. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalDelay}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the total delayed value of this Chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return Information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsDXChart}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b FirstNote}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Definition}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the definition of this chart, default by 384. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of chart in ma2 format. \par
}{
Definition at line {\b 8} of file {\b Ma2.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Ma2\:MaiLib.Ma2}
{\xe \v MaiLib.Ma2\:Ma2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Ma2.Ma2 ()}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Constructor. }}\par
{
Definition at line {\b 13} of file {\b Ma2.cs}.}\par
}
{\xe \v Ma2\:MaiLib.Ma2}
{\xe \v MaiLib.Ma2\:Ma2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Ma2.Ma2 (List< {\b Note} >  {\i notes}, {\b BPMChanges}  {\i bpmChanges}, {\b MeasureChanges}  {\i measureChanges})}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Ma2 with given notes, bpm change definitions and measure change definitions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i notes} \cell }{Notes in Ma2\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpmChanges} \cell }{BPM Changes: Initial BPM is NEEDED!\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i measureChanges} \cell }{Measure Changes: Initial Measure is NEEDED!\cell }
{\row }
}
}{
Definition at line {\b 28} of file {\b Ma2.cs}.}\par
}
{\xe \v Ma2\:MaiLib.Ma2}
{\xe \v MaiLib.Ma2\:Ma2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Ma2.Ma2 (string  {\i location})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct GoodBrother from location specified. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{MA2 location\cell }
{\row }
}
}{
Definition at line {\b 42} of file {\b Ma2.cs}.}\par
}
{\xe \v Ma2\:MaiLib.Ma2}
{\xe \v MaiLib.Ma2\:Ma2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Ma2.Ma2 (string[]  {\i tokens})}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Ma2 with tokens given. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tokens} \cell }{Tokens given\cell }
{\row }
}
}{
Definition at line {\b 58} of file {\b Ma2.cs}.}\par
}
{\xe \v Ma2\:MaiLib.Ma2}
{\xe \v MaiLib.Ma2\:Ma2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Ma2.Ma2 ({\b Chart}  {\i takenIn})}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Ma2 with existing values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i takenIn} \cell }{Existing good brother\cell }
{\row }
}
}{
Definition at line {\b 73} of file {\b Ma2.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.Ma2}
{\xe \v MaiLib.Ma2\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.Ma2.CheckValidity (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 83} of file {\b Ma2.cs}.}\par
}
{\xe \v Compose\:MaiLib.Ma2}
{\xe \v MaiLib.Ma2\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Ma2.Compose (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String of chart compiled\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 90} of file {\b Ma2.cs}.}\par
}
{\xe \v Compose\:MaiLib.Ma2}
{\xe \v MaiLib.Ma2\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Ma2.Compose ({\b BPMChanges}  {\i bpm}, {\b MeasureChanges}  {\i measure}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{Override BPM array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i measure} \cell }{Override Measure array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Good Brother with override array\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 132} of file {\b Ma2.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Ma2.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Ma2Parser Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses ma2 file into Ma2 chart format. }}\par
Inheritance diagram for MaiLib.Ma2Parser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_ma2_parser.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ma2Parser} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} {\b ChartOfToken} (string[] token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct GoodBrother of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct BPMChanges of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return corresponding MeasureChanges. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token, int bar, int tick, {\b Note} slideStart, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} {\b ChartOfToken} (string[] token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct GoodBrother of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct BPMChanges of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return corresponding MeasureChanges. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token, int bar, int tick, {\b Note} slideStart, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses ma2 file into Ma2 chart format. \par
}{
Definition at line {\b 16} of file {\b Ma2parser.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Ma2Parser\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:Ma2Parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Ma2Parser.Ma2Parser ()}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }}\par
{
Definition at line {\b 22} of file {\b Ma2parser.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BPMChangesOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:BPMChangesOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BPMChanges} MaiLib.Ma2Parser.BPMChangesOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct BPMChanges of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to intake\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding BPMChanges\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 128} of file {\b Ma2parser.cs}.}\par
}
{\xe \v ChartOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:ChartOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Chart} MaiLib.Ma2Parser.ChartOfToken (string[]  {\i token})}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct GoodBrother of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to intake\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding GoodBrother\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 27} of file {\b Ma2parser.cs}.}\par
}
{\xe \v HoldOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:HoldOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Hold} MaiLib.Ma2Parser.HoldOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Hold Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 275} of file {\b Ma2parser.cs}.}\par
}
{\xe \v HoldOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:HoldOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Hold} MaiLib.Ma2Parser.HoldOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Hold Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 242} of file {\b Ma2parser.cs}.}\par
}
{\xe \v MeasureChangesOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:MeasureChangesOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MeasureChanges} MaiLib.Ma2Parser.MeasureChangesOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return corresponding MeasureChanges. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Intake token\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding measure change\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 133} of file {\b Ma2parser.cs}.}\par
}
{\xe \v NoteOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:NoteOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note} MaiLib.Ma2Parser.NoteOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 138} of file {\b Ma2parser.cs}.}\par
}
{\xe \v NoteOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:NoteOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note} MaiLib.Ma2Parser.NoteOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 192} of file {\b Ma2parser.cs}.}\par
}
{\xe \v SlideOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:SlideOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Slide} MaiLib.Ma2Parser.SlideOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Slide Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 332} of file {\b Ma2parser.cs}.}\par
}
{\xe \v SlideOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:SlideOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Slide} MaiLib.Ma2Parser.SlideOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, {\b Note}  {\i slideStart}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i slideStart} \cell }{The start note of this slide\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Slide Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 307} of file {\b Ma2parser.cs}.}\par
}
{\xe \v TapOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:TapOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tap MaiLib.Ma2Parser.TapOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Tap\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 390} of file {\b Ma2parser.cs}.}\par
}
{\xe \v TapOfToken\:MaiLib.Ma2Parser}
{\xe \v MaiLib.Ma2Parser\:TapOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tap MaiLib.Ma2Parser.TapOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Tap\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 358} of file {\b Ma2parser.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Ma2parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Ma2Tokenizer Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Ma2Tokenizer}
{\xe \v MaiLib.Ma2Tokenizer}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenizer of ma2 file. }}\par
Inheritance diagram for MaiLib.Ma2Tokenizer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_ma2_tokenizer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ma2Tokenizer} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Tokens} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TokensFromText} (string text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Tokens} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TokensFromText} (string text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenizer of ma2 file. \par
}{
Definition at line {\b 6} of file {\b Ma2Tokenizer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Ma2Tokenizer\:MaiLib.Ma2Tokenizer}
{\xe \v MaiLib.Ma2Tokenizer\:Ma2Tokenizer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Ma2Tokenizer.Ma2Tokenizer ()}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Constructor. }}\par
{
Definition at line {\b 11} of file {\b Ma2Tokenizer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Tokens\:MaiLib.Ma2Tokenizer}
{\xe \v MaiLib.Ma2Tokenizer\:Tokens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string[] MaiLib.Ma2Tokenizer.Tokens (string  {\i location})}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tokens from file specified\par
}}}{
Implements {\b MaiLib.ITokenizer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 15} of file {\b Ma2Tokenizer.cs}.}\par
}
{\xe \v TokensFromText\:MaiLib.Ma2Tokenizer}
{\xe \v MaiLib.Ma2Tokenizer\:TokensFromText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string[] MaiLib.Ma2Tokenizer.TokensFromText (string  {\i text})}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tokens from text specified\par
}}}{
Implements {\b MaiLib.ITokenizer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 21} of file {\b Ma2Tokenizer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Ma2Tokenizer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.MeasureChange Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines measure change note that indicates a measure change in bar. }}\par
Inheritance diagram for MaiLib.MeasureChange:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_measure_change.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChange} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Empty. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChange} (int bar, int tick, int quaver)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChange with given bar, tick, BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChange} ({\b MeasureChange} takeIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct measureChange from another takeIn. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b Note} {\b NewInstance} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an empty note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ({\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a note from other note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b Note} {\b NewInstance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CompareTo} (Object? obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Equals} ({\b Note}? other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} ({\b BPMChanges} changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} (List< {\b BPMChange} > changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Quaver}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.quaver. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NoteGenre}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b IsNote}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NoteSpecificGenre}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b NoteType}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access NoteType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Key}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b KeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b KeyGroup}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the key group of the key - only for touch notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Bar}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Tick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedTick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedTick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TickTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b WaitTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedWaitTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedLastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedEndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Last time in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LastTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedLastTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b TickBPMDisagree}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores if the wait or last are in different BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b EndKey}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndKey. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b EndKeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of End Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Delayed}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Delayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b BPM}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Prev}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.prev;. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Next}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.next. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b SlideStart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the slide start of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b ConsecutiveSlide}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the consecutive of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b BPMChange} > {\b BPMChangeNotes}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteSpecificGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.SpecificType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.noteGenre. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b IsNote}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a true note. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get BPM Time tick unit of bpm. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines measure change note that indicates a measure change in bar. \par
}{
Definition at line {\b 6} of file {\b MeasureChange.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MeasureChange\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:MeasureChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.MeasureChange.MeasureChange ()}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Empty. }}\par
{
Definition at line {\b 13} of file {\b MeasureChange.cs}.}\par
}
{\xe \v MeasureChange\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:MeasureChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.MeasureChange.MeasureChange (int  {\i bar}, int  {\i tick}, int  {\i quaver})}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct BPMChange with given bar, tick, BPM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Quaver} \cell }{Quaver\cell }
{\row }
}
}{
Definition at line {\b 26} of file {\b MeasureChange.cs}.}\par
}
{\xe \v MeasureChange\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:MeasureChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.MeasureChange.MeasureChange ({\b MeasureChange}  {\i takeIn})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct measureChange from another takeIn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i takeIn} \cell }{Another measure change note\cell }
{\row }
}
}{
Definition at line {\b 38} of file {\b MeasureChange.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.MeasureChange.CheckValidity (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if qualified, false otherwise\par
}}}{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 55} of file {\b MeasureChange.cs}.}\par
}
{\xe \v Compose\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.MeasureChange.Compose (int  {\i format}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{0 if Simai, 1 if Ma2\cell }
{\row }
}
}{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 60} of file {\b MeasureChange.cs}.}\par
}
{\xe \v NewInstance\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:NewInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b Note} MaiLib.MeasureChange.NewInstance (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 71} of file {\b MeasureChange.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v IsNote\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:IsNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.MeasureChange.IsNote{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b MeasureChange.cs}.}\par
}
{\xe \v NoteGenre\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:NoteGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.MeasureChange.NoteGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b MeasureChange.cs}.}\par
}
{\xe \v NoteSpecificGenre\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:NoteSpecificGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.MeasureChange.NoteSpecificGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b MeasureChange.cs}.}\par
}
{\xe \v Quaver\:MaiLib.MeasureChange}
{\xe \v MaiLib.MeasureChange\:Quaver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.MeasureChange.Quaver{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.quaver. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quaver\par
}{
Definition at line {\b 50} of file {\b MeasureChange.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b MeasureChange.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.MeasureChanges Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges}
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store measure change notes in a chart. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an empty Measure Change. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} ({\b MeasureChanges} takeIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Measure Change with existing one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} (int initialQuaver, int initialBeat)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Take in initial quavers and beats, incase MET_CHANGE is not specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} (List< int > bar, List< int > tick, List< int > quavers, List< int > beats)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a measure of given beats. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Add} (int bar, int tick, int quavers, int beats)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add new measure changes to MeasureChanges. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< int > {\b Bar}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.Bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< int > {\b Tick}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< int > {\b Quavers}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.Quavers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< int > {\b Beats}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.Beats. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b MeasureChange} > {\b ChangeNotes}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b InitialChange}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return first definitions. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store measure change notes in a chart. \par
}{
Definition at line {\b 6} of file {\b MeasureChanges.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MeasureChanges\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:MeasureChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.MeasureChanges.MeasureChanges ()}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an empty Measure Change. }}\par
{
Definition at line {\b 19} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v MeasureChanges\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:MeasureChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.MeasureChanges.MeasureChanges ({\b MeasureChanges}  {\i takeIn})}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Measure Change with existing one. }}\par
{
Definition at line {\b 31} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v MeasureChanges\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:MeasureChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.MeasureChanges.MeasureChanges (int  {\i initialQuaver}, int  {\i initialBeat})}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Take in initial quavers and beats, incase MET_CHANGE is not specified. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialQuaver} \cell }{Initial Quaver\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialBeat} \cell }{Initial Beat\cell }
{\row }
}
}{
Definition at line {\b 45} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v MeasureChanges\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:MeasureChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.MeasureChanges.MeasureChanges (List< int >  {\i bar}, List< int >  {\i tick}, List< int >  {\i quavers}, List< int >  {\i beats})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a measure of given beats. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i quavers} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i beats} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 63} of file {\b MeasureChanges.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.MeasureChanges.Add (int  {\i bar}, int  {\i tick}, int  {\i quavers}, int  {\i beats})}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add new measure changes to MeasureChanges. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar which changes\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick which changes\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i quavers} \cell }{Quavers which changes\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i beats} \cell }{Beat which changes\cell }
{\row }
}
}{
Definition at line {\b 120} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v CheckValidity\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.MeasureChanges.CheckValidity ()}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 139} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v Compose\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.MeasureChanges.Compose ()}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 148} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v Update\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.MeasureChanges.Update ()}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 165} of file {\b MeasureChanges.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Bar\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:Bar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<int> MaiLib.MeasureChanges.Bar{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.Bar. }}\par
{
Definition at line {\b 77} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v Beats\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:Beats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<int> MaiLib.MeasureChanges.Beats{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.Beats. }}\par
{
Definition at line {\b 101} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v ChangeNotes\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:ChangeNotes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b MeasureChange}> MaiLib.MeasureChanges.ChangeNotes{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 106} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v InitialChange\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:InitialChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.MeasureChanges.InitialChange{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return first definitions. }}\par
{
Definition at line {\b 131} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v Quavers\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:Quavers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<int> MaiLib.MeasureChanges.Quavers{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.Quavers. }}\par
{
Definition at line {\b 93} of file {\b MeasureChanges.cs}.}\par
}
{\xe \v Tick\:MaiLib.MeasureChanges}
{\xe \v MaiLib.MeasureChanges\:Tick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<int> MaiLib.MeasureChanges.Tick{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.Tick. }}\par
{
Definition at line {\b 85} of file {\b MeasureChanges.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b MeasureChanges.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Note Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Note}
{\xe \v MaiLib.Note}
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic note. }}\par
Inheritance diagram for MaiLib.Note:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_note.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an empty note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ({\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a note from other note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b Note} {\b NewInstance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CompareTo} (Object? obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Equals} ({\b Note}? other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} ({\b BPMChanges} changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} (List< {\b BPMChange} > changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get BPM Time tick unit of bpm. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b NoteType}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access NoteType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Key}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b KeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b KeyGroup}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the key group of the key - only for touch notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Bar}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Tick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedTick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedTick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TickTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b WaitTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedWaitTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedLastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedEndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Last time in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LastTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedLastTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b TickBPMDisagree}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores if the wait or last are in different BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b EndKey}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndKey. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b EndKeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of End Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Delayed}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Delayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b BPM}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Prev}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.prev;. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Next}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.next. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b SlideStart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the slide start of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b ConsecutiveSlide}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the consecutive of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b BPMChange} > {\b BPMChangeNotes}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteSpecificGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.SpecificType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.noteGenre. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b IsNote}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a true note. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic note. \par
}{
Definition at line {\b 11} of file {\b Note.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Note\:MaiLib.Note}
{\xe \v MaiLib.Note\:Note}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Note.Note ()}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an empty note. }}\par
{
Definition at line {\b 141} of file {\b Note.cs}.}\par
}
{\xe \v Note\:MaiLib.Note}
{\xe \v MaiLib.Note\:Note}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Note.Note ({\b Note}  {\i inTake})}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a note from other note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inTake} \cell }{The intake note\cell }
{\row }
}
}{
Definition at line {\b 168} of file {\b Note.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.Note}
{\xe \v MaiLib.Note\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool MaiLib.Note.CheckValidity (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if qualified, false otherwise\par
}}}{
Implements {\b MaiLib.INote} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b MaiLib.BPMChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Hold} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.MeasureChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.Slide} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CompareTo\:MaiLib.Note}
{\xe \v MaiLib.Note\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.CompareTo (Object?  {\i obj})}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 568} of file {\b Note.cs}.}\par
}
{\xe \v Compose\:MaiLib.Note}
{\xe \v MaiLib.Note\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string MaiLib.Note.Compose (int  {\i format}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{0 if Simai, 1 if Ma2\cell }
{\row }
}
}{
Implements {\b MaiLib.INote} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b MaiLib.BPMChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Hold} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.MeasureChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.Slide} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Equals\:MaiLib.Note}
{\xe \v MaiLib.Note\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.Note.Equals ({\b Note}?  {\i other})}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 633} of file {\b Note.cs}.}\par
}
{\xe \v Flip\:MaiLib.Note}
{\xe \v MaiLib.Note\:Flip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void MaiLib.Note.Flip (string  {\i method}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i method} \cell }{UpSideDown, LeftToRight, Clockwise90/180, Counterclockwise90/180\cell }
{\row }
}
}{
Implements {\b MaiLib.INote} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 650} of file {\b Note.cs}.}\par
}
{\xe \v GenerateAppropriateLength\:MaiLib.Note}
{\xe \v MaiLib.Note\:GenerateAppropriateLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Note.GenerateAppropriateLength (int  {\i length})}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i length} \cell }{Last Time\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
[Definition:Length]=[Quaver:Beat]\par
}}}{
Definition at line {\b 1197} of file {\b Note.cs}.}\par
}
{\xe \v GenerateAppropriateLength\:MaiLib.Note}
{\xe \v MaiLib.Note\:GenerateAppropriateLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Note.GenerateAppropriateLength (int  {\i length}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i length} \cell }{Last Time\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
[Definition:Length]=[Quaver:Beat]\par
}}}{
Definition at line {\b 1224} of file {\b Note.cs}.}\par
}
{\xe \v GetBPMTimeUnit\:MaiLib.Note}
{\xe \v MaiLib.Note\:GetBPMTimeUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double MaiLib.Note.GetBPMTimeUnit (double  {\i bpm}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get BPM Time tick unit of bpm. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM to calculate\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
BPM Tick Unit of bpm\par
}}}{
Definition at line {\b 1248} of file {\b Note.cs}.}\par
}
{\xe \v GetTimeStamp\:MaiLib.Note}
{\xe \v MaiLib.Note\:GetTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Note.GetTimeStamp (int  {\i overallTick})}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i overallTick} \cell }{Note.Bar*384+Note.Tick\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Appropriate time stamp in seconds\par
}}}{
Implements {\b MaiLib.INote} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 1254} of file {\b Note.cs}.}\par
}
{\xe \v NewInstance\:MaiLib.Note}
{\xe \v MaiLib.Note\:NewInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract {\b Note} MaiLib.Note.NewInstance (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b MaiLib.BPMChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.Hold} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b MaiLib.MeasureChange} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b MaiLib.Slide} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ReplaceBPMChanges\:MaiLib.Note}
{\xe \v MaiLib.Note\:ReplaceBPMChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.Note.ReplaceBPMChanges ({\b BPMChanges}  {\i changeTable})}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i changeTable} \cell }{Change table contains bpm notes\cell }
{\row }
}
}{
Definition at line {\b 1176} of file {\b Note.cs}.}\par
}
{\xe \v ReplaceBPMChanges\:MaiLib.Note}
{\xe \v MaiLib.Note\:ReplaceBPMChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.Note.ReplaceBPMChanges (List< {\b BPMChange} >  {\i changeTable})}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i changeTable} \cell }{Change table contains bpm notes\cell }
{\row }
}
}{
Definition at line {\b 1186} of file {\b Note.cs}.}\par
}
{\xe \v Update\:MaiLib.Note}
{\xe \v MaiLib.Note\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.Note.Update ()}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if Calculated Times is defined, false otherwise\par
}}}{
Implements {\b MaiLib.INote} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 1145} of file {\b Note.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Bar\:MaiLib.Note}
{\xe \v MaiLib.Note\:Bar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.Bar{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Bar. }}\par
{
Definition at line {\b 249} of file {\b Note.cs}.}\par
}
{\xe \v BPM\:MaiLib.Note}
{\xe \v MaiLib.Note\:BPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Note.BPM{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access BPM. }}\par
{
Definition at line {\b 490} of file {\b Note.cs}.}\par
}
{\xe \v BPMChangeNotes\:MaiLib.Note}
{\xe \v MaiLib.Note\:BPMChangeNotes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b BPMChange}> MaiLib.Note.BPMChangeNotes{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 532} of file {\b Note.cs}.}\par
}
{\xe \v CalculatedLastTime\:MaiLib.Note}
{\xe \v MaiLib.Note\:CalculatedLastTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Note.CalculatedLastTime{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated last time in seconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The calculated last time in seconds. \par
}{
Definition at line {\b 430} of file {\b Note.cs}.}\par
}
{\xe \v CalculatedWaitTime\:MaiLib.Note}
{\xe \v MaiLib.Note\:CalculatedWaitTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Note.CalculatedWaitTime{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated wait time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The calculated wait time in seconds. \par
}{
Definition at line {\b 358} of file {\b Note.cs}.}\par
}
{\xe \v ConsecutiveSlide\:MaiLib.Note}
{\xe \v MaiLib.Note\:ConsecutiveSlide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note}? MaiLib.Note.ConsecutiveSlide{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the consecutive of a note (reserved for slides only) }}\par
{
Definition at line {\b 526} of file {\b Note.cs}.}\par
}
{\xe \v Delayed\:MaiLib.Note}
{\xe \v MaiLib.Note\:Delayed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.Note.Delayed{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Delayed. }}\par
{
Definition at line {\b 481} of file {\b Note.cs}.}\par
}
{\xe \v EndKey\:MaiLib.Note}
{\xe \v MaiLib.Note\:EndKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Note.EndKey{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndKey. }}\par
{
Definition at line {\b 449} of file {\b Note.cs}.}\par
}
{\xe \v EndKeyNum\:MaiLib.Note}
{\xe \v MaiLib.Note\:EndKeyNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.EndKeyNum{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of End Key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number value of Key 0-7, exclude key group\par
}{
Definition at line {\b 465} of file {\b Note.cs}.}\par
}
{\xe \v FixedLastLength\:MaiLib.Note}
{\xe \v MaiLib.Note\:FixedLastLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.FixedLastLength{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedEndTime. }}\par
{
Definition at line {\b 382} of file {\b Note.cs}.}\par
}
{\xe \v FixedTick\:MaiLib.Note}
{\xe \v MaiLib.Note\:FixedTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.FixedTick{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedTick. }}\par
{
Definition at line {\b 279} of file {\b Note.cs}.}\par
}
{\xe \v IsNote\:MaiLib.Note}
{\xe \v MaiLib.Note\:IsNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool MaiLib.Note.IsNote{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a true note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if is TAP,HOLD or SLIDE, false otherwise\par
}}}{
Definition at line {\b 560} of file {\b Note.cs}.}\par
}
{\xe \v Key\:MaiLib.Note}
{\xe \v MaiLib.Note\:Key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Note.Key{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Key. }}\par
{
Definition at line {\b 208} of file {\b Note.cs}.}\par
}
{\xe \v KeyGroup\:MaiLib.Note}
{\xe \v MaiLib.Note\:KeyGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Note.KeyGroup{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the key group of the key - only for touch notes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Key group of the touch note\par
}{
Definition at line {\b 233} of file {\b Note.cs}.}\par
}
{\xe \v KeyNum\:MaiLib.Note}
{\xe \v MaiLib.Note\:KeyNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.KeyNum{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of Key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number value of Key 0-7, exclude key group\par
}{
Definition at line {\b 224} of file {\b Note.cs}.}\par
}
{\xe \v LastLength\:MaiLib.Note}
{\xe \v MaiLib.Note\:LastLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.LastLength{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndTime. }}\par
{
Definition at line {\b 367} of file {\b Note.cs}.}\par
}
{\xe \v LastTickStamp\:MaiLib.Note}
{\xe \v MaiLib.Note\:LastTickStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.LastTickStamp{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Last time in ticks. }}\par
{
Definition at line {\b 397} of file {\b Note.cs}.}\par
}
{\xe \v LastTimeStamp\:MaiLib.Note}
{\xe \v MaiLib.Note\:LastTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Note.LastTimeStamp{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access last time in seconds. }}\par
{
Definition at line {\b 412} of file {\b Note.cs}.}\par
}
{\xe \v Next\:MaiLib.Note}
{\xe \v MaiLib.Note\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note}? MaiLib.Note.Next{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.next. }}\par
{
Definition at line {\b 508} of file {\b Note.cs}.}\par
}
{\xe \v NoteGenre\:MaiLib.Note}
{\xe \v MaiLib.Note\:NoteGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string MaiLib.Note.NoteGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.noteGenre. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string of note genre (general category of TAP, SLIDE and HOLD)\par
}}}{
Definition at line {\b 554} of file {\b Note.cs}.}\par
}
{\xe \v NoteSpecificGenre\:MaiLib.Note}
{\xe \v MaiLib.Note\:NoteSpecificGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string MaiLib.Note.NoteSpecificGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.SpecificType. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string of specific genre (specific type of Tap, Slide, etc.)\par
}}}{
Definition at line {\b 548} of file {\b Note.cs}.}\par
}
{\xe \v NoteType\:MaiLib.Note}
{\xe \v MaiLib.Note\:NoteType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.Note.NoteType{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access NoteType. }}\par
{
Definition at line {\b 193} of file {\b Note.cs}.}\par
}
{\xe \v Prev\:MaiLib.Note}
{\xe \v MaiLib.Note\:Prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note}? MaiLib.Note.Prev{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.prev;. }}\par
{
Definition at line {\b 499} of file {\b Note.cs}.}\par
}
{\xe \v SlideStart\:MaiLib.Note}
{\xe \v MaiLib.Note\:SlideStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note}? MaiLib.Note.SlideStart{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the slide start of a note (reserved for slides only) }}\par
{
Definition at line {\b 517} of file {\b Note.cs}.}\par
}
{\xe \v Tick\:MaiLib.Note}
{\xe \v MaiLib.Note\:Tick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.Tick{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick. }}\par
{
Definition at line {\b 264} of file {\b Note.cs}.}\par
}
{\xe \v TickBPMDisagree\:MaiLib.Note}
{\xe \v MaiLib.Note\:TickBPMDisagree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.Note.TickBPMDisagree{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores if the wait or last are in different BPM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if in different BPM, false otherwise\par
}{
Definition at line {\b 440} of file {\b Note.cs}.}\par
}
{\xe \v TickStamp\:MaiLib.Note}
{\xe \v MaiLib.Note\:TickStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.TickStamp{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }}\par
{
Definition at line {\b 294} of file {\b Note.cs}.}\par
}
{\xe \v TickTimeStamp\:MaiLib.Note}
{\xe \v MaiLib.Note\:TickTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Note.TickTimeStamp{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }}\par
{
Definition at line {\b 311} of file {\b Note.cs}.}\par
}
{\xe \v WaitLength\:MaiLib.Note}
{\xe \v MaiLib.Note\:WaitLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.WaitLength{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access wait time. }}\par
{
Definition at line {\b 320} of file {\b Note.cs}.}\par
}
{\xe \v WaitTickStamp\:MaiLib.Note}
{\xe \v MaiLib.Note\:WaitTickStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.Note.WaitTickStamp{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in ticks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The incoming time\par
}{
Definition at line {\b 336} of file {\b Note.cs}.}\par
}
{\xe \v WaitTimeStamp\:MaiLib.Note}
{\xe \v MaiLib.Note\:WaitTimeStamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MaiLib.Note.WaitTimeStamp{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in seconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The incoming time\par
}{
Definition at line {\b 346} of file {\b Note.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Note.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Simai Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Simai}
{\xe \v MaiLib.Simai}
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
Inheritance diagram for MaiLib.Simai:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_simai.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Simai} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Simai} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Simai chart directly from path specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Simai} (List< {\b Note} > notes, {\b BPMChanges} bpmChanges, {\b MeasureChanges} measureChanges)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Simai from given parameters. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Simai} ({\b Chart} takenIn)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ({\b BPMChanges} bpm, {\b MeasureChanges} measure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reconstruct the chart with given arrays. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update properties in Good Brother for exporting. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CheckSlideStart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if all of the slide starts were in the notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ({\b BPMChanges} bpm, {\b MeasureChanges} measure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Take in and replace the current information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetBPMByTick} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the BPM at certain tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasBPMChangeInBetween} (int startTick, int endTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if there are BPM change in between ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates all information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export this Good Brother. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateLeastMeasure} (List< {\b Note} > bar)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the least none 0 measure of bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b RealNoteNumber} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return note number except Rest, BPM and Measure. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ContainNotes} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Judges if this bar contains notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateQuaver} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< {\b Note} > {\b FinishBar} (List< {\b Note} > bar, List< {\b BPMChange} > bpmChanges, int barNumber, int minimalQuaver)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish Bar writing byu adding specific rest note in between. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GCD} (int a, int b)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return GCD of A and B. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsPrime} (int number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a prime (1 counts) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetTimeStamp} ({\b BPMChanges} bpmChanges, int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return BPM tick unit of given bpm. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetNoteDetail} ({\b BPMChanges} bpmChanges, {\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For debug use: print out the note's time stamp in given bpm changes. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Note} > {\b Notes}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< List< {\b Note} > > {\b StoredChart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns this.Chart. aka List of bars. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to BPM Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Measure Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TapNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Tap Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BreakNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Break Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b HoldNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SlideNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Slide Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TouchNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ThoNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalNoteNumber}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to the total note number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b UnitScore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Unit Score. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Achievement}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to theoretical Achievement. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalDelay}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the total delayed value of this Chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return Information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsDXChart}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b FirstNote}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Definition}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the definition of this chart, default by 384. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b Simai.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Simai\:MaiLib.Simai}
{\xe \v MaiLib.Simai\:Simai}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Simai.Simai ()}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }}\par
{
Definition at line {\b 10} of file {\b Simai.cs}.}\par
}
{\xe \v Simai\:MaiLib.Simai}
{\xe \v MaiLib.Simai\:Simai}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Simai.Simai (string  {\i location})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Simai chart directly from path specified. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 23} of file {\b Simai.cs}.}\par
}
{\xe \v Simai\:MaiLib.Simai}
{\xe \v MaiLib.Simai\:Simai}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Simai.Simai (List< {\b Note} >  {\i notes}, {\b BPMChanges}  {\i bpmChanges}, {\b MeasureChanges}  {\i measureChanges})}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Simai from given parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i notes} \cell }{Notes to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpmChanges} \cell }{BPM change to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i measureChanges} \cell }{Measure change to take in\cell }
{\row }
}
}{
Definition at line {\b 41} of file {\b Simai.cs}.}\par
}
{\xe \v Simai\:MaiLib.Simai}
{\xe \v MaiLib.Simai\:Simai}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Simai.Simai ({\b Chart}  {\i takenIn})}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b Simai.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.Simai}
{\xe \v MaiLib.Simai\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.Simai.CheckValidity (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 216} of file {\b Simai.cs}.}\par
}
{\xe \v Compose\:MaiLib.Simai}
{\xe \v MaiLib.Simai\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Simai.Compose (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String of chart compiled\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 61} of file {\b Simai.cs}.}\par
}
{\xe \v Compose\:MaiLib.Simai}
{\xe \v MaiLib.Simai\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Simai.Compose ({\b BPMChanges}  {\i bpm}, {\b MeasureChanges}  {\i measure}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reconstruct the chart with given arrays. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{New BPM Changes\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i measure} \cell }{New Measure Changes\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
New Composed Chart\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 229} of file {\b Simai.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Simai.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.SimaiCompiler Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.SimaiCompiler}
{\xe \v MaiLib.SimaiCompiler}
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compile various Ma2 Charts. }}\par
Inheritance diagram for MaiLib.SimaiCompiler:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_simai_compiler.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimaiCompiler} (string location, string targetLocation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct compiler of a single song. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimaiCompiler} (string location, string targetLocation, bool forUtage)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct compiler of a single song. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimaiCompiler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ({\b Chart} chart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return compose of specified chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} (bool isUtage, List< string > ma2files)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose utage Charts. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Compiler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Compiler} (string location, string targetLocation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct compiler of a single song. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Compiler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ({\b Chart} chart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return compose of specified chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} (bool isUtage, List< string > ma2files)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose utage charts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b SymbolicBPMTable} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the chart bpm change table of MaiCompiler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b SymbolicFirstNote} (bool isUtage)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the first note of master chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateOneLineSummary} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate one line summary of this track with ID, name, genre and difficulty. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Attributes inherited from {\b MaiLib.Compiler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b difficulty} = \{ "Easy", "Basic", "Advanced", "Expert", "Master", "Remaster", "Utage" \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores difficulty keywords. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Compiler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GlobalSep}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the path separator. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b CompiledChart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the information of Compiled Chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Chart} > {\b Charts}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access stored charts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access global information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XmlInformation} {\b MusicXml}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access read in music XML file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Difficulty}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access difficulty;. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b RotateDictionary}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the rotate dictionary. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compile various Ma2 Charts. \par
}{
Definition at line {\b 11} of file {\b SimaiCompiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SimaiCompiler\:MaiLib.SimaiCompiler}
{\xe \v MaiLib.SimaiCompiler\:SimaiCompiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.SimaiCompiler.SimaiCompiler (string  {\i location}, string  {\i targetLocation})}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct compiler of a single song. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{Folder\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i targetLocation} \cell }{Output folder\cell }
{\row }
}
}{
Definition at line {\b 18} of file {\b SimaiCompiler.cs}.}\par
}
{\xe \v SimaiCompiler\:MaiLib.SimaiCompiler}
{\xe \v MaiLib.SimaiCompiler\:SimaiCompiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.SimaiCompiler.SimaiCompiler (string  {\i location}, string  {\i targetLocation}, bool  {\i forUtage})}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct compiler of a single song. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{Folder\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i targetLocation} \cell }{Output folder\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i forUtage} \cell }{True if for utage\cell }
{\row }
}
}{
Definition at line {\b 74} of file {\b SimaiCompiler.cs}.}\par
}
{\xe \v SimaiCompiler\:MaiLib.SimaiCompiler}
{\xe \v MaiLib.SimaiCompiler\:SimaiCompiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.SimaiCompiler.SimaiCompiler ()}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }}\par
{
Definition at line {\b 115} of file {\b SimaiCompiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compose\:MaiLib.SimaiCompiler}
{\xe \v MaiLib.SimaiCompiler\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.SimaiCompiler.Compose (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding chart\par
}}}{
Implements {\b MaiLib.Compiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 126} of file {\b SimaiCompiler.cs}.}\par
}
{\xe \v Compose\:MaiLib.SimaiCompiler}
{\xe \v MaiLib.SimaiCompiler\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.SimaiCompiler.Compose (bool  {\i isUtage}, List< string >  {\i ma2files}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose utage Charts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i isUtage} \cell }{switch to produce utage\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding utage chart\par
}}}{
Implements {\b MaiLib.Compiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 241} of file {\b SimaiCompiler.cs}.}\par
}
{\xe \v Compose\:MaiLib.SimaiCompiler}
{\xe \v MaiLib.SimaiCompiler\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.SimaiCompiler.Compose ({\b Chart}  {\i chart}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return compose of specified chart. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chart} \cell }{Chart to compose\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Maidata of specified chart WITHOUT headers\par
}}}{
Implements {\b MaiLib.Compiler} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 231} of file {\b SimaiCompiler.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b SimaiCompiler.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.SimaiParser Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser}
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse charts in Simai format. }}\par
Inheritance diagram for MaiLib.SimaiParser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_simai_parser.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimaiParser} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor of simaiparser. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse BPM change notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} {\b ChartOfToken} (string[] tokens)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct GoodBrother of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return corresponding MeasureChanges. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token, int bar, int tick, {\b Note} slideStart, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} {\b ChartOfToken} (string[] token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct GoodBrother of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct BPMChanges of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChangesOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return corresponding MeasureChanges. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} {\b NoteOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tap {\b TapOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token, int bar, int tick, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Hold} {\b HoldOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token, int bar, int tick, {\b Note} slideStart, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} {\b SlideOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< string > {\b EachGroupOfToken} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deal with old, out-fashioned and illogical Simai Each Groups. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< string > {\b ExtractParentheses} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deal with annoying and vigours Parentheses grammar of Simai. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< string > {\b ExtractEachSlides} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deal with annoying and vigours Slide grammar of Simai. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b MaximumDefinition} = 384\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum definition of a chart. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse charts in Simai format. \par
}{
Definition at line {\b 9} of file {\b Simaiparser.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SimaiParser\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:SimaiParser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.SimaiParser.SimaiParser ()}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor of simaiparser. }}\par
{
Definition at line {\b 21} of file {\b Simaiparser.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BPMChangesOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:BPMChangesOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BPMChanges} MaiLib.SimaiParser.BPMChangesOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse BPM change notes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{The parsed set of BPM change\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Error: simai does not have this variable\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 31} of file {\b Simaiparser.cs}.}\par
}
{\xe \v ChartOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:ChartOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Chart} MaiLib.SimaiParser.ChartOfToken (string[]  {\i token})}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct GoodBrother of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to intake\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding GoodBrother\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 36} of file {\b Simaiparser.cs}.}\par
}
{\xe \v EachGroupOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:EachGroupOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< string > MaiLib.SimaiParser.EachGroupOfToken (string  {\i token}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deal with old, out-fashioned and illogical Simai Each Groups. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Tokens that potentially contains each Groups\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
List of strings that is composed with single note.\par
}}}{
Definition at line {\b 527} of file {\b Simaiparser.cs}.}\par
}
{\xe \v ExtractEachSlides\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:ExtractEachSlides}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< string > MaiLib.SimaiParser.ExtractEachSlides (string  {\i token}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deal with annoying and vigours Slide grammar of Simai. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token that potentially contains multiple slide note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A list of slides extracts each note\par
}}}{
Definition at line {\b 641} of file {\b Simaiparser.cs}.}\par
}
{\xe \v ExtractParentheses\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:ExtractParentheses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< string > MaiLib.SimaiParser.ExtractParentheses (string  {\i token}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deal with annoying and vigours Parentheses grammar of Simai. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token that potentially contains multiple slide note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A list of strings extracts each note\par
}}}{
Definition at line {\b 587} of file {\b Simaiparser.cs}.}\par
}
{\xe \v HoldOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:HoldOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Hold} MaiLib.SimaiParser.HoldOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Hold Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 152} of file {\b Simaiparser.cs}.}\par
}
{\xe \v HoldOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:HoldOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Hold} MaiLib.SimaiParser.HoldOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Hold note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Hold Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 92} of file {\b Simaiparser.cs}.}\par
}
{\xe \v MeasureChangesOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:MeasureChangesOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MeasureChanges} MaiLib.SimaiParser.MeasureChangesOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return corresponding MeasureChanges. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Intake token\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Corresponding measure change\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 157} of file {\b Simaiparser.cs}.}\par
}
{\xe \v NoteOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:NoteOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note} MaiLib.SimaiParser.NoteOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 162} of file {\b Simaiparser.cs}.}\par
}
{\xe \v NoteOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:NoteOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Note} MaiLib.SimaiParser.NoteOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a specific note of given Token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 210} of file {\b Simaiparser.cs}.}\par
}
{\xe \v SlideOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:SlideOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Slide} MaiLib.SimaiParser.SlideOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Slide Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 454} of file {\b Simaiparser.cs}.}\par
}
{\xe \v SlideOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:SlideOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Slide} MaiLib.SimaiParser.SlideOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, {\b Note}  {\i slideStart}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Slide note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i slideStart} \cell }{The start note of this slide\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Slide Note\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 261} of file {\b Simaiparser.cs}.}\par
}
{\xe \v TapOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:TapOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tap MaiLib.SimaiParser.TapOfToken (string  {\i token})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Tap\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 517} of file {\b Simaiparser.cs}.}\par
}
{\xe \v TapOfToken\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:TapOfToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tap MaiLib.SimaiParser.TapOfToken (string  {\i token}, int  {\i bar}, int  {\i tick}, double  {\i bpm})}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return correct Tap note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{Token to take in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tick} \cell }{Tick of this note\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{BPM of this note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific Tap\par
}}}{
Implements {\b MaiLib.IParser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 459} of file {\b Simaiparser.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v MaximumDefinition\:MaiLib.SimaiParser}
{\xe \v MaiLib.SimaiParser\:MaximumDefinition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MaiLib.SimaiParser.MaximumDefinition = 384{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum definition of a chart. }}\par
{
Definition at line {\b 14} of file {\b Simaiparser.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Simaiparser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.SimaiTokenizer Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.SimaiTokenizer}
{\xe \v MaiLib.SimaiTokenizer}
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenize input file into tokens that parser can read. }}\par
Inheritance diagram for MaiLib.SimaiTokenizer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_simai_tokenizer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimaiTokenizer} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a tokenizer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateFromText} (string input)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update candidates from texts specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateFromPath} (string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update candidates from texts specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Tokens} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TokensFromText} (string text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Tokens} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TokensFromText} (string text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string[]> {\b ChartCandidates}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the chart candidates. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenize input file into tokens that parser can read. \par
}{
Definition at line {\b 11} of file {\b SimaiTokenizer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SimaiTokenizer\:MaiLib.SimaiTokenizer}
{\xe \v MaiLib.SimaiTokenizer\:SimaiTokenizer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.SimaiTokenizer.SimaiTokenizer ()}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a tokenizer. }}\par
{
Definition at line {\b 26} of file {\b SimaiTokenizer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Tokens\:MaiLib.SimaiTokenizer}
{\xe \v MaiLib.SimaiTokenizer\:Tokens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string[] MaiLib.SimaiTokenizer.Tokens (string  {\i location})}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tokens from file specified\par
}}}{
Implements {\b MaiLib.ITokenizer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 224} of file {\b SimaiTokenizer.cs}.}\par
}
{\xe \v TokensFromText\:MaiLib.SimaiTokenizer}
{\xe \v MaiLib.SimaiTokenizer\:TokensFromText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string[] MaiLib.SimaiTokenizer.TokensFromText (string  {\i text})}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and return tokens. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tokens from text specified\par
}}}{
Implements {\b MaiLib.ITokenizer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 237} of file {\b SimaiTokenizer.cs}.}\par
}
{\xe \v UpdateFromPath\:MaiLib.SimaiTokenizer}
{\xe \v MaiLib.SimaiTokenizer\:UpdateFromPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.SimaiTokenizer.UpdateFromPath (string  {\i path})}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update candidates from texts specified. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Location of text to be tokenized\cell }
{\row }
}
}{
Definition at line {\b 213} of file {\b SimaiTokenizer.cs}.}\par
}
{\xe \v UpdateFromText\:MaiLib.SimaiTokenizer}
{\xe \v MaiLib.SimaiTokenizer\:UpdateFromText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.SimaiTokenizer.UpdateFromText (string  {\i input})}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update candidates from texts specified. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i input} \cell }{Text to be tokenized\cell }
{\row }
}
}{
Definition at line {\b 45} of file {\b SimaiTokenizer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ChartCandidates\:MaiLib.SimaiTokenizer}
{\xe \v MaiLib.SimaiTokenizer\:ChartCandidates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string[]> MaiLib.SimaiTokenizer.ChartCandidates{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the chart candidates. }}\par
{
Definition at line {\b 35} of file {\b SimaiTokenizer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b SimaiTokenizer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.Slide Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.Slide}
{\xe \v MaiLib.Slide}
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide note (With START!) }}\par
Inheritance diagram for MaiLib.Slide:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_slide.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} (string noteType, int bar, int startTime, string key, int waitTime, int lastTime, string endKey)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide Note (Valid only if Start Key matches a start!) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Slide} ({\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide from another note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b Note} {\b NewInstance} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an empty note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note} ({\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a note from other note. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b Note} {\b NewInstance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CompareTo} (Object? obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Equals} ({\b Note}? other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} ({\b BPMChanges} changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceBPMChanges} (List< {\b BPMChange} > changeTable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace this.BPMChangeNotes from change table given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GenerateAppropriateLength} (int length, double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} (int format)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates this note instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Flip} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flip the note according to the method specified. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GenerateInflection} ({\b Note} x)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return inflection point of SLL and SLR. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get BPM Time tick unit of bpm. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NoteGenre}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b IsNote}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NoteSpecificGenre}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Note}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b NoteType}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access NoteType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Key}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b KeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b KeyGroup}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the key group of the key - only for touch notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Bar}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Tick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedTick}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedTick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TickTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Tick Stamp = this.Bar*384 + this.Tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b WaitTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b WaitTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the time stamp where wait time ends in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedWaitTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated wait time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FixedLastLength}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access FixedEndTime. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LastTickStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Last time in ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LastTimeStamp}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculatedLastTime}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the calculated last time in seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b TickBPMDisagree}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores if the wait or last are in different BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b EndKey}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access EndKey. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b EndKeyNum}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number value of End Key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Delayed}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Delayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b BPM}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Prev}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.prev;. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b Next}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this.next. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b SlideStart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the slide start of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b ConsecutiveSlide}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the consecutive of a note (reserved for slides only) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b BPMChange} > {\b BPMChangeNotes}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteSpecificGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.SpecificType. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b NoteGenre}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.noteGenre. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b IsNote}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a true note. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide note (With START!) \par
}{
Definition at line {\b 6} of file {\b Slide.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Slide\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:Slide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Slide.Slide ()}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty Constructor. }}\par
{
Definition at line {\b 13} of file {\b Slide.cs}.}\par
}
{\xe \v Slide\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:Slide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Slide.Slide (string  {\i noteType}, int  {\i bar}, int  {\i startTime}, string  {\i key}, int  {\i waitTime}, int  {\i lastTime}, string  {\i endKey})}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide Note (Valid only if Start Key matches a start!) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i noteType} \cell }{SI_(Straight),SCL,SCR,SV_(Line not intercepting Crossing Center),SUL,SUR,SF_(Wifi),SLL(Infecting Line),SLR(Infecting),SXL(Self winding),SXR(Self winding),SSL,SSR\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{0-7\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bar} \cell }{Bar in\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i startTime} \cell }{Start Time\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lastTime} \cell }{Last Time\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i endKey} \cell }{0-7\cell }
{\row }
}
}{
Definition at line {\b 26} of file {\b Slide.cs}.}\par
}
{\xe \v Slide\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:Slide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.Slide.Slide ({\b Note}  {\i inTake})}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide from another note. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inTake} \cell }{The intake note\cell }
{\row }
}
}{
Definition at line {\b 43} of file {\b Slide.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.Slide.CheckValidity (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if current note has all information needed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if qualified, false otherwise\par
}}}{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 67} of file {\b Slide.cs}.}\par
}
{\xe \v Compose\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Slide.Compose (int  {\i format}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert note to string for writing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{0 if Simai, 1 if Ma2\cell }
{\row }
}
}{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 79} of file {\b Slide.cs}.}\par
}
{\xe \v GenerateInflection\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:GenerateInflection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int MaiLib.Slide.GenerateInflection ({\b Note}  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return inflection point of SLL and SLR. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{This note\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Infection point of this note\par
}}}{
Definition at line {\b 159} of file {\b Slide.cs}.}\par
}
{\xe \v NewInstance\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:NewInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b Note} MaiLib.Slide.NewInstance (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b MaiLib.Note} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 216} of file {\b Slide.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v IsNote\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:IsNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.Slide.IsNote{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 212} of file {\b Slide.cs}.}\par
}
{\xe \v NoteGenre\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:NoteGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Slide.NoteGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 210} of file {\b Slide.cs}.}\par
}
{\xe \v NoteSpecificGenre\:MaiLib.Slide}
{\xe \v MaiLib.Slide\:NoteSpecificGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.Slide.NoteSpecificGenre{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 214} of file {\b Slide.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b Slide.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.TrackInformation Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation}
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use xml to store track information. }}\par
Inheritance diagram for MaiLib.TrackInformation:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_track_information.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrackInformation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FormatInformation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add in necessary nodes in information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FormatDummyInformation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add in necessary nodes in information for dummy chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
XmlNodeList {\b GetMatchNodes} (string name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the XML node that has same name with. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Save} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save the information to given path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update information. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b CompensateZero} (string intake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compensate 0 for music IDs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b CompensateShortZero} (string intake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compensate 0 for short music IDs. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b level} = \{ "1", "2", "3", "4", "5", "6", "7", "7+", "8", "8+", "9", "9+", "10", "10+", "11", "11+", "12", "12+", "13", "13+", "14", "14+", "15", "15+" \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores proper difficulties. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b difficulty} = \{ "Basic", "Advance", "Expert", "Master", "Remaster", "Utage", "Easy" \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b addVersion} = \{ "Ver1.00.00"\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b genre} = \{ "\'E6\'9D\'B1\'E6\'96\'B9Project", "maimai" \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the genre name used in information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b version} = \{ "maimai", "maimai PLUS", "maimai GreeN", "maimai GreeN PLUS", "maimai ORANGE", "maimai ORANGE PLUS", "maimai PiNK", "maimai PiNK PLUS", "maimai MURASAKi", "maimai MURASAKi PLUS", "maimai MiLK", "maimai MiLK PLUS", "maimai FiNALE", "maimai DX", "maimai DX PLUS", "maimai DX Splash", "maimai DX Splash PLUS", "maimai DX UNiVERSE", "maimai DX UNiVERSE PLUS" \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores prover maimai versions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b shortVersion} = \{ "maimai", "PLUS", "GreeN", "GreeN PLUS", "ORANGE", "ORANGE PLUS", "PiNK", "PiNK PLUS", "MURASAKi", "MURASAKi PLUS", "MiLK", "MiLK PLUS", "FiNALE", "DX", "DX PLUS", "DX Splash", "DX Splash PLUS", "DX UNiVERSE", "DX UNiVERSE PLUS" \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string[] {\b versionArray}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b netOpenNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b releaseTagNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b rightsInfoDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b artistNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b addVersionDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b eventNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b subEventNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b notesDesignerDic}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackSortName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the sort name (basically English or Katakana) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackID}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track ID (4 digit, having 00 for SD 01 for DX) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackGenre}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track genre (By default cabinet 6 categories) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackBPM}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track global BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackComposer}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track composer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackSymbolicLevel}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the most representative level of the track = set by default master. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TrackLevels}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return track levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage]. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TrackDecimalLevels}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return track decimal levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage] * Utage returns utage level. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b DXChartTrackPathSuffix}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the suffix of Track title for export. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b StandardDeluxePrefix}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns if the track is Standard or Deluxe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b StandardDeluxeSuffix}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Title suffix for better distinguish. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsDXChart}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if the chart is DX chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackVersion}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.TrackVersion. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackVersionNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.TrackVersionNumber. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
XmlDocument {\b TakeInValue}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give access to TakeInValue if necessary. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give access to this.Information. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use xml to store track information. \par
}{
Definition at line {\b 10} of file {\b TrackInformation.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TrackInformation\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.TrackInformation.TrackInformation ()}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }}\par
{
Definition at line {\b 1381} of file {\b TrackInformation.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CompensateShortZero\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:CompensateShortZero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string MaiLib.TrackInformation.CompensateShortZero (string  {\i intake}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compensate 0 for short music IDs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i intake} \cell }{Music ID\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0..+#Music ID and |Music ID|==4\par
}}}{
Definition at line {\b 1822} of file {\b TrackInformation.cs}.}\par
}
{\xe \v CompensateZero\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:CompensateZero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string MaiLib.TrackInformation.CompensateZero (string  {\i intake}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compensate 0 for music IDs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i intake} \cell }{Music ID\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0..+#Music ID and |Music ID|==6\par
}}}{
Definition at line {\b 1800} of file {\b TrackInformation.cs}.}\par
}
{\xe \v FormatDummyInformation\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:FormatDummyInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.TrackInformation.FormatDummyInformation ()}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add in necessary nodes in information for dummy chart. }}\par
{
Definition at line {\b 1462} of file {\b TrackInformation.cs}.}\par
}
{\xe \v FormatInformation\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:FormatInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.TrackInformation.FormatInformation ()}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add in necessary nodes in information. }}\par
{
Definition at line {\b 1416} of file {\b TrackInformation.cs}.}\par
}
{\xe \v GetMatchNodes\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:GetMatchNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XmlNodeList MaiLib.TrackInformation.GetMatchNodes (string  {\i name})}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the XML node that has same name with. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 1725} of file {\b TrackInformation.cs}.}\par
}
{\xe \v Save\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.TrackInformation.Save (string  {\i location})}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save the information to given path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i location} \cell }{Path to save the information\cell }
{\row }
}
}{
Definition at line {\b 1785} of file {\b TrackInformation.cs}.}\par
}
{\xe \v Update\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void MaiLib.TrackInformation.Update (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update information. }}\par
{
Implemented in {\b MaiLib.XmlInformation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v addVersion\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:addVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly string [] MaiLib.TrackInformation.addVersion = \{ "Ver1.00.00"\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b TrackInformation.cs}.}\par
}
{\xe \v addVersionDic\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:addVersionDic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.addVersionDic{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf17 new} Dictionary<string, string>\{\par
\{{\cf22 "0"}, {\cf22 "maimai"}\},\par
\{{\cf22 "1"}, {\cf22 "maimaiPLUS"}\},\par
\{{\cf22 "2"}, {\cf22 "GreeN"}\},\par
\{{\cf22 "3"}, {\cf22 "GreeNPLUS"}\},\par
\{{\cf22 "4"}, {\cf22 "ORANGE"}\},\par
\{{\cf22 "5"}, {\cf22 "ORANGEPLUS"}\},\par
\{{\cf22 "6"}, {\cf22 "PiNK"}\},\par
\{{\cf22 "7"}, {\cf22 "PiNKPLUS"}\},\par
\{{\cf22 "8"}, {\cf22 "MURASAKi"}\},\par
\{{\cf22 "9"}, {\cf22 "MURASAKiPLUS"}\},\par
\{{\cf22 "10"}, {\cf22 "MiLK"}\},\par
\{{\cf22 "11"}, {\cf22 "MiLKPLUS"}\},\par
\{{\cf22 "12"}, {\cf22 "FiNALE"}\},\par
\{{\cf22 "13"}, {\cf22 "maimaDX"}\},\par
\{{\cf22 "14"}, {\cf22 "maimaDXPLUS"}\},\par
\{{\cf22 "15"}, {\cf22 "Splash"}\},\par
\{{\cf22 "16"}, {\cf22 "SplashPLUS"}\},\par
\{{\cf22 "17"}, {\cf22 "UNiVERSE"}\},\par
\{{\cf22 "18"}, {\cf22 "UNiVERSEPLUS"}\},\par
\}\par
}
{
Definition at line {\b 1234} of file {\b TrackInformation.cs}.}\par
}
{\xe \v artistNameDic\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:artistNameDic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.artistNameDic{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 515} of file {\b TrackInformation.cs}.}\par
}
{\xe \v difficulty\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:difficulty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly string [] MaiLib.TrackInformation.difficulty = \{ "Basic", "Advance", "Expert", "Master", "Remaster", "Utage", "Easy" \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b TrackInformation.cs}.}\par
}
{\xe \v eventNameDic\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:eventNameDic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.eventNameDic{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf17 new} Dictionary<string, string>\{\par
\{{\cf22 "1"}, {\cf22 "\'E7\'84\'A1\'E6\'9C\'9F\'E9\'99\'90\'E5\'B8\'B8\'E6\'99\'82\'E8\'A7\'A3\'E6\'94\'BE"}\},\par
\{{\cf22 "21091621"}, {\cf22 "210916_02_1"}\},\par
\{{\cf22 "21111225"}, {\cf22 "211112_02_5"}\},\par
\{{\cf22 "22011422"}, {\cf22 "220114_02_2"}\},\par
\{{\cf22 "22030321"}, {\cf22 "220303_02_1"}\},\par
\{{\cf22 "22032421"}, {\cf22 "220324_02_1"}\},\par
\{{\cf22 "22040121"}, {\cf22 "220401_02_1"}\},\par
\{{\cf22 "22040821"}, {\cf22 "220408_02_1"}\},\par
\{{\cf22 "22041521"}, {\cf22 "220415_02_1"}\},\par
\{{\cf22 "22041522"}, {\cf22 "220415_02_2"}\},\par
\{{\cf22 "22042821"}, {\cf22 "220428_02_1"}\},\par
\{{\cf22 "22042822"}, {\cf22 "220428_02_2"}\},\par
\}\par
}
{
Definition at line {\b 1255} of file {\b TrackInformation.cs}.}\par
}
{\xe \v genre\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:genre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly string [] MaiLib.TrackInformation.genre = \{ "\'E6\'9D\'B1\'E6\'96\'B9Project", "maimai" \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the genre name used in information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
103 = Touhou, 105 = maimai\par
}{
Definition at line {\b 26} of file {\b TrackInformation.cs}.}\par
}
{\xe \v level\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:level}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly string [] MaiLib.TrackInformation.level = \{ "1", "2", "3", "4", "5", "6", "7", "7+", "8", "8+", "9", "9+", "10", "10+", "11", "11+", "12", "12+", "13", "13+", "14", "14+", "15", "15+" \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores proper difficulties. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1-15 Maimai level\par
}{
Definition at line {\b 16} of file {\b TrackInformation.cs}.}\par
}
{\xe \v netOpenNameDic\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:netOpenNameDic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.netOpenNameDic{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 292} of file {\b TrackInformation.cs}.}\par
}
{\xe \v notesDesignerDic\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:notesDesignerDic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.notesDesignerDic{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1274} of file {\b TrackInformation.cs}.}\par
}
{\xe \v releaseTagNameDic\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:releaseTagNameDic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.releaseTagNameDic{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf17 new} Dictionary<string, string>\{\par
\{{\cf22 "1"}, {\cf22 "Ver1.00.00"}\},\par
\{{\cf22 "501"}, {\cf22 "Ver1.05.00"}\},\par
\{{\cf22 "1001"}, {\cf22 "Ver1.10.00"}\},\par
\{{\cf22 "1501"}, {\cf22 "Ver1.15.00"}\},\par
\{{\cf22 "2001"}, {\cf22 "Ver1.20.00"}\},\par
\{{\cf22 "2501"}, {\cf22 "Ver1.25.00"}\},\par
\}\par
}
{
Definition at line {\b 374} of file {\b TrackInformation.cs}.}\par
}
{\xe \v rightsInfoDic\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:rightsInfoDic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.rightsInfoDic{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 382} of file {\b TrackInformation.cs}.}\par
}
{\xe \v shortVersion\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:shortVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly string [] MaiLib.TrackInformation.shortVersion = \{ "maimai", "PLUS", "GreeN", "GreeN PLUS", "ORANGE", "ORANGE PLUS", "PiNK", "PiNK PLUS", "MURASAKi", "MURASAKi PLUS", "MiLK", "MiLK PLUS", "FiNALE", "DX", "DX PLUS", "DX Splash", "DX Splash PLUS", "DX UNiVERSE", "DX UNiVERSE PLUS" \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b TrackInformation.cs}.}\par
}
{\xe \v subEventNameDic\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:subEventNameDic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.subEventNameDic{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf17 new} Dictionary<string, string>\{\par
\{{\cf22 "0"}, {\cf22 "\'E8\'A7\'A3\'E6\'94\'BE\'E3\'81\'AA\'E3\'81\'97"}\},\par
\{{\cf22 "1"}, {\cf22 "\'E7\'84\'A1\'E6\'9C\'9F\'E9\'99\'90\'E5\'B8\'B8\'E6\'99\'82\'E8\'A7\'A3\'E6\'94\'BE"}\},\par
\{{\cf22 "22032421"}, {\cf22 "220324_02_1"}\},\par
\}\par
}
{
Definition at line {\b 1269} of file {\b TrackInformation.cs}.}\par
}
{\xe \v version\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly string [] MaiLib.TrackInformation.version = \{ "maimai", "maimai PLUS", "maimai GreeN", "maimai GreeN PLUS", "maimai ORANGE", "maimai ORANGE PLUS", "maimai PiNK", "maimai PiNK PLUS", "maimai MURASAKi", "maimai MURASAKi PLUS", "maimai MiLK", "maimai MiLK PLUS", "maimai FiNALE", "maimai DX", "maimai DX PLUS", "maimai DX Splash", "maimai DX Splash PLUS", "maimai DX UNiVERSE", "maimai DX UNiVERSE PLUS" \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores prover maimai versions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Version name of each generation of Maimai\par
}{
Definition at line {\b 32} of file {\b TrackInformation.cs}.}\par
}
{\xe \v versionArray\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:versionArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string [] MaiLib.TrackInformation.versionArray{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b TrackInformation.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v DXChartTrackPathSuffix\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:DXChartTrackPathSuffix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.DXChartTrackPathSuffix{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the suffix of Track title for export. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackSubstituteName"_DX" if is DX chart\par
}{
Definition at line {\b 1669} of file {\b TrackInformation.cs}.}\par
}
{\xe \v Information\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:Information}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> MaiLib.TrackInformation.Information{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give access to this.Information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.Information as Dictionary\par
}{
Definition at line {\b 1775} of file {\b TrackInformation.cs}.}\par
}
{\xe \v IsDXChart\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:IsDXChart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MaiLib.TrackInformation.IsDXChart{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if the chart is DX chart. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if is DX, false if SD\par
}{
Definition at line {\b 1711} of file {\b TrackInformation.cs}.}\par
}
{\xe \v StandardDeluxePrefix\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:StandardDeluxePrefix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.StandardDeluxePrefix{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns if the track is Standard or Deluxe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD if standard, DX if deluxe\par
}{
Definition at line {\b 1684} of file {\b TrackInformation.cs}.}\par
}
{\xe \v StandardDeluxeSuffix\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:StandardDeluxeSuffix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.StandardDeluxeSuffix{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Title suffix for better distinguish. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
[SD] if Standard and [DX] if Deluxe\par
}{
Definition at line {\b 1699} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TakeInValue\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TakeInValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XmlDocument MaiLib.TrackInformation.TakeInValue{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give access to TakeInValue if necessary. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TakeInValue as XMLDocument\par
}{
Definition at line {\b 1765} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackBPM\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackBPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackBPM{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track global BPM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackBPM\par
}{
Definition at line {\b 1549} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackComposer\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackComposer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackComposer{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track composer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackComposer\par
}{
Definition at line {\b 1559} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackDecimalLevels\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackDecimalLevels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string [] MaiLib.TrackInformation.TrackDecimalLevels{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return track decimal levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage] * Utage returns utage level. }}\par
{
Definition at line {\b 1640} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackGenre\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackGenre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackGenre{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track genre (By default cabinet 6 categories) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackGenre\par
}{
Definition at line {\b 1539} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackID\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackID{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track ID (4 digit, having 00 for SD 01 for DX) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackID\par
}{
Definition at line {\b 1529} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackLevels\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackLevels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string [] MaiLib.TrackInformation.TrackLevels{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return track levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage]. }}\par
{
Definition at line {\b 1612} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackName\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackName{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackName\par
}{
Definition at line {\b 1509} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackSortName\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackSortName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackSortName{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the sort name (basically English or Katakana) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.SortName\par
}{
Definition at line {\b 1519} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackSymbolicLevel\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackSymbolicLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackSymbolicLevel{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the most representative level of the track = set by default master. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackLevel\par
}{
Definition at line {\b 1569} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackVersion\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackVersion{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.TrackVersion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackVersion\par
}{
Definition at line {\b 1735} of file {\b TrackInformation.cs}.}\par
}
{\xe \v TrackVersionNumber\:MaiLib.TrackInformation}
{\xe \v MaiLib.TrackInformation\:TrackVersionNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string MaiLib.TrackInformation.TrackVersionNumber{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.TrackVersionNumber. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this.TrackVersionNumber\par
}{
Definition at line {\b 1750} of file {\b TrackInformation.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b TrackInformation.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.XMaiL Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL}
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using xml to store maicharts. }}\par
Inheritance diagram for MaiLib.XMaiL:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_x_mai_l.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMaiL} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMaiL} (List< {\b Note} > notes, {\b BPMChanges} bpmChanges, {\b MeasureChanges} measureChanges)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct XMaiL with given notes, bpm change definitions and measure change definitions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMaiL} (string[] tokens)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct XMaiL with tokens given. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMaiL} ({\b Chart} takenIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct XMaiL with existing values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Compose} ({\b BPMChanges} bpm, {\b MeasureChanges} measure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update properties in Good Brother for exporting. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Chart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update properties in Good Brother for exporting. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CheckSlideStart} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if all of the slide starts were in the notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b Compose} ({\b BPMChanges} bpm, {\b MeasureChanges} measure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Take in and replace the current information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetBPMByTick} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the BPM at certain tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasBPMChangeInBetween} (int startTick, int endTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if there are BPM change in between ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates all information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Export this Good Brother. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ShiftByOffset} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shift the chart notes by defined overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RotateNotes} (string method)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the notes by specified method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTimeStamp} (int bar, int tick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get appropriate time stamp of given tick. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.ICompiler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TakeInformation} (Dictionary< string, string > information)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake information to compile data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Compose} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose given chart to specific format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckValidity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the chart given is valid to print. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateLeastMeasure} (List< {\b Note} > bar)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the least none 0 measure of bar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b RealNoteNumber} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return note number except Rest, BPM and Measure. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ContainNotes} (List< {\b Note} > {\b Bar})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Judges if this bar contains notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CalculateQuaver} (int length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate appropriate length for hold and slide. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< {\b Note} > {\b FinishBar} (List< {\b Note} > bar, List< {\b BPMChange} > bpmChanges, int barNumber, int minimalQuaver)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish Bar writing byu adding specific rest note in between. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GCD} (int a, int b)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return GCD of A and B. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsPrime} (int number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return if this is a prime (1 counts) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetTimeStamp} ({\b BPMChanges} bpmChanges, int overallTick)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give time stamp given overall tick. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b GetBPMTimeUnit} (double bpm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return BPM tick unit of given bpm. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetNoteDetail} ({\b BPMChanges} bpmChanges, {\b Note} inTake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For debug use: print out the note's time stamp in given bpm changes. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.Chart}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Note} > {\b Notes}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Notes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< List< {\b Note} > > {\b StoredChart}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns this.Chart. aka List of bars. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPMChanges} {\b BPMChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to BPM Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeasureChanges} {\b MeasureChanges}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Measure Changes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TapNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Tap Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BreakNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Break Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b HoldNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SlideNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Slide Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TouchNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ThoNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Touch Hold Number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalNoteNumber}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to the total note number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b UnitScore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to Unit Score. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Achievement}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access to theoretical Achievement. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalDelay}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the total delayed value of this Chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return Information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsDXChart}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Note}? {\b FirstNote}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Definition}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access the definition of this chart, default by 384. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using xml to store maicharts. \par
}{
Definition at line {\b 9} of file {\b XMaiL.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v XMaiL\:MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL\:XMaiL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.XMaiL.XMaiL ()}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{
Definition at line {\b 19} of file {\b XMaiL.cs}.}\par
}
{\xe \v XMaiL\:MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL\:XMaiL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.XMaiL.XMaiL (List< {\b Note} >  {\i notes}, {\b BPMChanges}  {\i bpmChanges}, {\b MeasureChanges}  {\i measureChanges})}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct XMaiL with given notes, bpm change definitions and measure change definitions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i notes} \cell }{Notes in XMaiL\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpmChanges} \cell }{BPM Changes: Initial BPM is NEEDED!\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i measureChanges} \cell }{Measure Changes: Initial Measure is NEEDED!\cell }
{\row }
}
}{
Definition at line {\b 36} of file {\b XMaiL.cs}.}\par
}
{\xe \v XMaiL\:MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL\:XMaiL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.XMaiL.XMaiL (string[]  {\i tokens})}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct XMaiL with tokens given. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tokens} \cell }{Tokens given\cell }
{\row }
}
}{
Definition at line {\b 51} of file {\b XMaiL.cs}.}\par
}
{\xe \v XMaiL\:MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL\:XMaiL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.XMaiL.XMaiL ({\b Chart}  {\i takenIn})}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct XMaiL with existing values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i takenIn} \cell }{Existing good brother\cell }
{\row }
}
}{
Definition at line {\b 67} of file {\b XMaiL.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckValidity\:MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL\:CheckValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool MaiLib.XMaiL.CheckValidity (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if this chart is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 78} of file {\b XMaiL.cs}.}\par
}
{\xe \v Compose\:MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.XMaiL.Compose (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compose chart in appropriate result. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String of chart compiled\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 85} of file {\b XMaiL.cs}.}\par
}
{\xe \v Compose\:MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL\:Compose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string MaiLib.XMaiL.Compose ({\b BPMChanges}  {\i bpm}, {\b MeasureChanges}  {\i measure}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Override and compose with given arrays. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bpm} \cell }{Override BPM array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i measure} \cell }{Override Measure array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Good Brother with override array\par
}}}{
Implements {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 90} of file {\b XMaiL.cs}.}\par
}
{\xe \v Update\:MaiLib.XMaiL}
{\xe \v MaiLib.XMaiL\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void MaiLib.XMaiL.Update (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update properties in Good Brother for exporting. }}\par
{
Reimplemented from {\b MaiLib.Chart} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 95} of file {\b XMaiL.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b XMaiL.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.XmlInformation Class Reference\par \pard\plain 
{\tc\tcl2 \v MaiLib.XmlInformation}
{\xe \v MaiLib.XmlInformation}
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Xml to store trackInformation. }}\par
Inheritance diagram for MaiLib.XmlInformation:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_mai_lib_1_1_xml_information.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XmlInformation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using take in Xml to store trackInformation: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XmlInformation} (string location)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateEmptyStoredXML} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate new music.xml for export. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
XmlElement {\b CreateNotesInformation} (Dictionary< string, string > information, int chartIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update information. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b MaiLib.TrackInformation}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrackInformation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FormatInformation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add in necessary nodes in information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FormatDummyInformation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add in necessary nodes in information for dummy chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
XmlNodeList {\b GetMatchNodes} (string name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the XML node that has same name with. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Save} (string location)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save the information to given path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b Update} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update information. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b MaiLib.TrackInformation}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b CompensateZero} (string intake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compensate 0 for music IDs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b CompensateShortZero} (string intake)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compensate 0 for short music IDs. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Attributes inherited from {\b MaiLib.TrackInformation}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b level} = \{ "1", "2", "3", "4", "5", "6", "7", "7+", "8", "8+", "9", "9+", "10", "10+", "11", "11+", "12", "12+", "13", "13+", "14", "14+", "15", "15+" \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores proper difficulties. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b difficulty} = \{ "Basic", "Advance", "Expert", "Master", "Remaster", "Utage", "Easy" \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b addVersion} = \{ "Ver1.00.00"\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b genre} = \{ "\'E6\'9D\'B1\'E6\'96\'B9Project", "maimai" \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the genre name used in information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b version} = \{ "maimai", "maimai PLUS", "maimai GreeN", "maimai GreeN PLUS", "maimai ORANGE", "maimai ORANGE PLUS", "maimai PiNK", "maimai PiNK PLUS", "maimai MURASAKi", "maimai MURASAKi PLUS", "maimai MiLK", "maimai MiLK PLUS", "maimai FiNALE", "maimai DX", "maimai DX PLUS", "maimai DX Splash", "maimai DX Splash PLUS", "maimai DX UNiVERSE", "maimai DX UNiVERSE PLUS" \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores prover maimai versions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly string[] {\b shortVersion} = \{ "maimai", "PLUS", "GreeN", "GreeN PLUS", "ORANGE", "ORANGE PLUS", "PiNK", "PiNK PLUS", "MURASAKi", "MURASAKi PLUS", "MiLK", "MiLK PLUS", "FiNALE", "DX", "DX PLUS", "DX Splash", "DX Splash PLUS", "DX UNiVERSE", "DX UNiVERSE PLUS" \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string[] {\b versionArray}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b netOpenNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b releaseTagNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b rightsInfoDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b artistNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b addVersionDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b eventNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b subEventNameDic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, string > {\b notesDesignerDic}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b MaiLib.TrackInformation}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackSortName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the sort name (basically English or Katakana) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackID}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track ID (4 digit, having 00 for SD 01 for DX) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackGenre}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track genre (By default cabinet 6 categories) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackBPM}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track global BPM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackComposer}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the track composer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackSymbolicLevel}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the most representative level of the track = set by default master. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TrackLevels}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return track levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage]. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b TrackDecimalLevels}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return track decimal levels by [Easy, Basic, Advance, Expert, Master, Remaster, Utage] * Utage returns utage level. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b DXChartTrackPathSuffix}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the suffix of Track title for export. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b StandardDeluxePrefix}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns if the track is Standard or Deluxe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b StandardDeluxeSuffix}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Title suffix for better distinguish. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsDXChart}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See if the chart is DX chart. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackVersion}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.TrackVersion. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrackVersionNumber}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return this.TrackVersionNumber. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
XmlDocument {\b TakeInValue}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give access to TakeInValue if necessary. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Information}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give access to this.Information. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Xml to store trackInformation. \par
}{
Definition at line {\b 9} of file {\b XmlInformation.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v XmlInformation\:MaiLib.XmlInformation}
{\xe \v MaiLib.XmlInformation\:XmlInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.XmlInformation.XmlInformation ()}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using take in Xml to store trackInformation: }}\par
{
Definition at line {\b 14} of file {\b XmlInformation.cs}.}\par
}
{\xe \v XmlInformation\:MaiLib.XmlInformation}
{\xe \v MaiLib.XmlInformation\:XmlInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaiLib.XmlInformation.XmlInformation (string  {\i location})}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b XmlInformation.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateNotesInformation\:MaiLib.XmlInformation}
{\xe \v MaiLib.XmlInformation\:CreateNotesInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XmlElement MaiLib.XmlInformation.CreateNotesInformation (Dictionary< string, string >  {\i information}, int  {\i chartIndex})}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 284} of file {\b XmlInformation.cs}.}\par
}
{\xe \v GenerateEmptyStoredXML\:MaiLib.XmlInformation}
{\xe \v MaiLib.XmlInformation\:GenerateEmptyStoredXML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MaiLib.XmlInformation.GenerateEmptyStoredXML ()}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate new music.xml for export. }}\par
{
Definition at line {\b 38} of file {\b XmlInformation.cs}.}\par
}
{\xe \v Update\:MaiLib.XmlInformation}
{\xe \v MaiLib.XmlInformation\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void MaiLib.XmlInformation.Update (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update information. }}\par
{
Implements {\b MaiLib.TrackInformation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 291} of file {\b XmlInformation.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Neskol/MaiLib/{\b XmlInformation.cs}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/BPMChange.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/BPMChange.cs}
{\xe \v Neskol/MaiLib/BPMChange.cs}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.BPMChange}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BPMChange note for Simai. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BPMChange.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/BPMChange.cs}
{\xe \v Neskol/MaiLib/BPMChange.cs}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Diagnostics.Contracts;\par
00002 \par
00003 {\cf17 namespace }MaiLib\par
00004 \{\par
00008     {\cf17 public} {\cf17 class }BPMChange : Note\par
00009     \{\par
00010 \par
00014         {\cf17 public} BPMChange()\par
00015         \{\par
00016             this.NoteType = {\cf22 "BPM"};\par
00017             this.Key = {\cf22 ""};\par
00018             this.Bar = 0;\par
00019             this.Tick = 0;\par
00020             this.BPM = 0;\par
00021             this.Update();\par
00022         \}\par
00023 \par
00030         {\cf17 public} BPMChange({\cf18 int} bar, {\cf18 int} startTime, {\cf18 double} BPM)\par
00031         \{\par
00032             this.Bar = bar;\par
00033             this.Tick = startTime;\par
00034             this.BPM = BPM;\par
00035             this.Update();\par
00036         \}\par
00037 \par
00042         {\cf17 public} BPMChange(BPMChange takeIn)\par
00043         \{\par
00044             this.Bar = takeIn.Bar;\par
00045             this.Tick = takeIn.Tick;\par
00046             this.BPM = takeIn.BPM;\par
00047             this.Update();\par
00048         \}\par
00049 \par
00054         {\cf17 public} BPMChange(Note takeIn)\par
00055         \{\par
00056             this.Bar = takeIn.Bar;\par
00057             this.Tick = takeIn.Tick;\par
00058             this.Update();\par
00059         \}\par
00060 \par
00061 \par
00062         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00063         \{\par
00064             {\cf19 return} this.BPM != 0;\par
00065         \}\par
00066 \par
00067         {\cf17 public} {\cf17 override} {\cf18 string} Compose({\cf18 int} format)\par
00068         \{\par
00069             {\cf18 string} result = {\cf22 ""};\par
00070             {\cf19 if} (format == 0)\par
00071             \{\par
00072                 result += {\cf22 "("} + this.BPM + {\cf22 ")"};\par
00073                 {\cf20 //result += "(" + this.BPM + "_" + this.Bar + "_" + this.Tick + ")";}\par
00074             \}\par
00075             {\cf20 //else result += "(" + this.BPM + "_" + this.Bar + "_" + this.Tick + ")";}\par
00076             {\cf19 return} result;\par
00077         \}\par
00078 \par
00079         {\cf17 public} {\cf17 override} {\cf18 string} NoteGenre => {\cf22 "BPM"};\par
00080 \par
00081         {\cf17 public} {\cf17 override} {\cf18 bool} IsNote => {\cf17 true};\par
00082 \par
00083         {\cf17 public} {\cf17 override} {\cf18 string} NoteSpecificGenre => {\cf22 "BPM"};\par
00084 \par
00085         {\cf17 public} {\cf17 override} {\cf18 bool} Equals({\cf18 object}? obj)\par
00086         \{\par
00087             {\cf18 bool} result = {\cf17 false};\par
00088             {\cf19 if} ({\cf17 this} == obj && {\cf17 this} == {\cf17 null})\par
00089             \{\par
00090                 result = {\cf17 true};\par
00091             \}\par
00092             {\cf19 else} {\cf19 if} ({\cf17 this} != {\cf17 null} && obj != {\cf17 null})\par
00093             \{\par
00094                 BPMChange candidate = (BPMChange)obj;\par
00095                 {\cf19 if} (this.GetHashCode() == candidate.GetHashCode())\par
00096                 \{\par
00097                     result = {\cf17 true};\par
00098                 \}\par
00099                 {\cf19 else} {\cf19 if} (this.Bar == candidate.Bar)\par
00100                 \{\par
00101                     {\cf19 if} (this.Tick == candidate.Tick && {\cf17 this}.BPM == candidate.BPM)\par
00102                     \{\par
00103                         result = {\cf17 true};\par
00104                     \}\par
00105                 \}\par
00106             \}\par
00107             {\cf19 return} result;\par
00108         \}\par
00109 \par
00110         {\cf17 public} {\cf17 override} Note NewInstance()\par
00111         \{\par
00112             Note result = {\cf17 new} BPMChange({\cf17 this});\par
00113             {\cf19 return} result;\par
00114         \}\par
00115 \par
00116         {\cf17 public} {\cf17 override} {\cf18 int} GetHashCode()\par
00117         \{\par
00118             {\cf20 // string hash = this.Bar + "0" + this.Tick + "0" + this.BPM;}\par
00119             {\cf20 // return int.Parse(hash);}\par
00120             {\cf19 return} base.GetHashCode();\par
00121         \}\par
00122     \}\par
00123 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/BPMChanges.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/BPMChanges.cs}
{\xe \v Neskol/MaiLib/BPMChanges.cs}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.BPMChanges}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BPMChanges.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/BPMChanges.cs}
{\xe \v Neskol/MaiLib/BPMChanges.cs}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Dynamic;\par
00002 {\cf17 using }System.Globalization;\par
00003 \par
00004 {\cf17 namespace }MaiLib\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }BPMChanges\par
00007     \{\par
00008         {\cf17 private} HashSet<BPMChange> changeNotes;\par
00009 \par
00016         {\cf17 public} BPMChanges(List<int> bar, List<int> tick, List<double> bpm)\par
00017         \{\par
00018             this.changeNotes = {\cf17 new} HashSet<BPMChange>();\par
00019             {\cf19 for} ({\cf18 int} i = 0; i < bar.Count; i++)\par
00020             \{\par
00021                 BPMChange candidate = {\cf17 new}(bar[i], tick[i], bpm[i]);\par
00022                 changeNotes.Add(candidate);\par
00023             \}\par
00024             this.Update();\par
00025         \}\par
00026 \par
00030         {\cf17 public} BPMChanges()\par
00031         \{\par
00032             this.changeNotes = {\cf17 new} HashSet<BPMChange>();\par
00033             this.Update();\par
00034         \}\par
00035 \par
00040         {\cf17 public} BPMChanges(BPMChanges takenIn)\par
00041         \{\par
00042             this.changeNotes = {\cf17 new} HashSet<BPMChange>();\par
00043             {\cf19 foreach} (BPMChange candidate {\cf19 in} takenIn.ChangeNotes)\par
00044             \{\par
00045                 this.changeNotes.Add(candidate);\par
00046             \}\par
00047         \}\par
00048 \par
00049         {\cf17 public} List<BPMChange> ChangeNotes\par
00050         \{\par
00051             {\cf17 get}\par
00052             \{\par
00053                 List<BPMChange> result = {\cf17 new}();\par
00054                 result.AddRange(this.changeNotes);\par
00055                 {\cf19 return} result;\par
00056             \}\par
00057         \}\par
00058 \par
00063         {\cf17 public} {\cf18 void} Add(BPMChange takeIn)\par
00064         \{\par
00065             this.changeNotes.Add(takeIn);\par
00066             this.Update();\par
00067         \}\par
00068 \par
00072         {\cf17 public} {\cf18 void} Update()\par
00073         \{\par
00074             List<BPMChange> adjusted = {\cf17 new}();\par
00075             Note lastNote = {\cf17 new} Rest();\par
00076             {\cf19 foreach} (BPMChange x {\cf19 in} this.changeNotes)\par
00077             \{\par
00078                 {\cf19 if} (!(x.Bar == lastNote.Bar && x.Tick == lastNote.Tick && x.BPM == lastNote.BPM))\par
00079                 \{\par
00080                     adjusted.Add(x);\par
00081                     lastNote = x;\par
00082                 \}\par
00083             \}\par
00084             {\cf20 // Console.WriteLine(adjusted.Count);}\par
00085             this.changeNotes = {\cf17 new} HashSet<BPMChange>();\par
00086             {\cf19 foreach}(BPMChange x {\cf19 in} adjusted)\par
00087             \{\par
00088                 this.changeNotes.Add(x);\par
00089             \}\par
00090             {\cf19 if} (this.changeNotes.Count!=adjusted.Count)\par
00091             \{\par
00092                 {\cf19 throw} {\cf17 new} Exception({\cf22 "Adjusted BPM Note number not matching"});\par
00093             \}\par
00094         \}\par
00095 \par
00099         {\cf17 public} {\cf18 string} InitialChange\par
00100         \{\par
00101             {\cf17 get}\par
00102             \{\par
00103                 {\cf19 if} (changeNotes.Count > 4)\par
00104                 \{\par
00105                     {\cf18 string} result = {\cf22 "BPM_DEF"} + {\cf22 "\\t"};\par
00106                     {\cf19 for} ({\cf18 int} x = 0; x < 4; x++)\par
00107                     \{\par
00108                         result = result + String.Format({\cf22 "\{0:F3\}"}, this.ChangeNotes[x].BPM);\par
00109                         result += {\cf22 "\\t"};\par
00110                     \}\par
00111                     {\cf19 return} result + {\cf22 "\\n"};\par
00112                 \}\par
00113                 {\cf19 else}\par
00114                 \{\par
00115                     {\cf18 int} times = 0;\par
00116                     {\cf18 string} result = {\cf22 "BPM_DEF"} + {\cf22 "\\t"};\par
00117                     {\cf19 foreach} (BPMChange x {\cf19 in} changeNotes)\par
00118                     \{\par
00119                         result += String.Format({\cf22 "\{0:F3\}"}, x.BPM);\par
00120                         result += {\cf22 "\\t"};\par
00121                         times++;\par
00122                     \}\par
00123                     {\cf19 while} (times < 4)\par
00124                     \{\par
00125                         result += String.Format({\cf22 "\{0:F3\}"}, this.ChangeNotes[0].BPM);\par
00126                         result += {\cf22 "\\t"};\par
00127                         times++;\par
00128                     \}\par
00129                     {\cf19 return} result + {\cf22 "\\n"};\par
00130                 \}\par
00131             \}\par
00132         \}\par
00133 \par
00138         {\cf17 public} {\cf18 bool} CheckValidity()\par
00139         \{\par
00140             {\cf18 bool} result = {\cf17 true};\par
00141             {\cf19 return} result;\par
00142         \}\par
00143 \par
00148         {\cf17 public} {\cf18 string} Compose()\par
00149         \{\par
00150             {\cf18 string} result = {\cf22 ""};\par
00151             {\cf19 for} ({\cf18 int} i = 0; i < changeNotes.Count; i++)\par
00152             \{\par
00153                 result += {\cf22 "BPM"} + {\cf22 "\\t"} + this.ChangeNotes[i].Bar + {\cf22 "\\t"} + this.ChangeNotes[i].Tick + {\cf22 "\\t"} + this.ChangeNotes[i].BPM + {\cf22 "\\n"};\par
00154                 {\cf20 //result += "BPM" + "\\t" + bar[i] + "\\t" + tick[i] + "\\t" + String.Format("\{0:F3\}", bpm[i])+"\\n";}\par
00155             \}\par
00156             {\cf19 return} result;\par
00157         \}\par
00158     \}\par
00159 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Chart.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Chart.cs}
{\xe \v Neskol/MaiLib/Chart.cs}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Chart}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class holding notes and information to form a chart. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Chart.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Chart.cs}
{\xe \v Neskol/MaiLib/Chart.cs}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.ComponentModel;\par
00002 {\cf17 using }System.Diagnostics;\par
00003 {\cf17 using }System.Globalization;\par
00004 {\cf17 using }System.Runtime.CompilerServices;\par
00005 {\cf17 using }System.Xml;\par
00006 \par
00007 {\cf17 namespace }MaiLib\par
00008 \{\par
00009 \par
00013     {\cf17 public} {\cf17 abstract} {\cf17 class }Chart : IChart\par
00014     \{\par
00015         {\cf20 //Stores all notes}\par
00016         {\cf17 private} List<Note> notes;\par
00017 \par
00018         {\cf20 //Stores definitions of BPM Changes}\par
00019         {\cf17 private} BPMChanges bpmChanges;\par
00020 \par
00021         {\cf20 //Stores definitions of Measure Changes}\par
00022         {\cf17 private} MeasureChanges measureChanges;\par
00023 \par
00024         {\cf17 private} {\cf18 int} totalNoteNumber;\par
00025 \par
00026         {\cf20 //Counts number of Tap}\par
00027         {\cf17 private} {\cf18 int} tapNumber;\par
00028 \par
00029         {\cf20 //Counts number of Break}\par
00030         {\cf17 private} {\cf18 int} breakNumber;\par
00031 \par
00032         {\cf20 //Counts number of Hold}\par
00033         {\cf17 private} {\cf18 int} holdNumber;\par
00034 \par
00035         {\cf20 //Counts number of Slide}\par
00036         {\cf17 private} {\cf18 int} slideNumber;\par
00037 \par
00038         {\cf20 //Counts number of Touch}\par
00039         {\cf17 private} {\cf18 int} touchNumber;\par
00040 \par
00041         {\cf20 //Counts number of Touch Hold}\par
00042         {\cf17 private} {\cf18 int} thoNumber;\par
00043 \par
00044         {\cf20 //Defines if the chart is DX chart}\par
00045         {\cf17 private} {\cf18 bool} isDxChart;\par
00046 \par
00050         {\cf17 private} Note? firstNote;\par
00051 \par
00055         {\cf17 private} {\cf18 int} definition = 384;\par
00056 \par
00057         {\cf20 //Defines }\par
00062 {\cf20 }        {\cf17 private} {\cf18 int}[] unitScore = \{ 500, 1000, 1500, 2500 \};\par
00063 \par
00067         {\cf17 private} {\cf18 int} achievement = 0;\par
00068 \par
00072         {\cf17 private} {\cf18 int} totalDelay = 0;\par
00073 \par
00077         {\cf17 private} List<List<Note>> chart;\par
00078 \par
00082         {\cf17 private} Dictionary<string, string> information;\par
00083 \par
00088         {\cf17 private} readonly {\cf18 string}[] TapTypes = \{ {\cf22 "TAP"}, {\cf22 "STR"}, {\cf22 "TTP"}, {\cf22 "XTP"}, {\cf22 "XST"} \};\par
00089 \par
00094         {\cf17 private} readonly {\cf18 string}[] HoldTypes = \{ {\cf22 "HLD"}, {\cf22 "THO"}, {\cf22 "XHO"} \};\par
00095 \par
00100         {\cf17 private} readonly {\cf18 string}[] SlideTypes = \{ {\cf22 "SI_"}, {\cf22 "SV_"}, {\cf22 "SF_"}, {\cf22 "SCL"}, {\cf22 "SCR"}, {\cf22 "SUL"}, {\cf22 "SUR"}, {\cf22 "SLL"}, {\cf22 "SLR"}, {\cf22 "SXL"}, {\cf22 "SXR"}, {\cf22 "SSL"}, {\cf22 "SSR"} \};\par
00101 \par
00102         {\cf20 //Theoretical Rating = (Difference in 100-down and Max score)/100-down}\par
00103 \par
00107         {\cf17 public} List<Note> Notes\par
00108         \{\par
00109             {\cf17 get}\par
00110             \{\par
00111                 {\cf19 return} this.notes;\par
00112             \}\par
00113             {\cf17 set}\par
00114             \{\par
00115                 this.notes = value;\par
00116             \}\par
00117         \}\par
00118 \par
00123         {\cf17 public} List<List<Note>> StoredChart\par
00124         \{\par
00125             {\cf17 get}\par
00126             \{\par
00127                 {\cf19 return} this.chart;\par
00128             \}\par
00129             {\cf17 set}\par
00130             \{\par
00131                 this.chart = value;\par
00132             \}\par
00133         \}\par
00134 \par
00138         {\cf17 public} BPMChanges BPMChanges\par
00139         \{\par
00140             {\cf17 get}\par
00141             \{\par
00142                 {\cf19 return} this.bpmChanges;\par
00143             \}\par
00144             {\cf17 set}\par
00145             \{\par
00146                 this.bpmChanges = value;\par
00147             \}\par
00148         \}\par
00149 \par
00153         {\cf17 public} MeasureChanges MeasureChanges\par
00154         \{\par
00155             {\cf17 get}\par
00156             \{\par
00157                 {\cf19 return} this.measureChanges;\par
00158             \}\par
00159             {\cf17 set}\par
00160             \{\par
00161                 this.measureChanges = value;\par
00162             \}\par
00163         \}\par
00164 \par
00168         {\cf17 public} {\cf18 int} TapNumber\par
00169         \{\par
00170             {\cf17 get}\par
00171             \{\par
00172                 {\cf19 return} this.tapNumber;\par
00173             \}\par
00174             {\cf17 set}\par
00175             \{\par
00176                 this.tapNumber = value;\par
00177             \}\par
00178         \}\par
00179 \par
00183         {\cf17 public} {\cf18 int} BreakNumber\par
00184         \{\par
00185             {\cf17 get}\par
00186             \{\par
00187                 {\cf19 return} this.breakNumber;\par
00188             \}\par
00189             {\cf17 set}\par
00190             \{\par
00191                 this.breakNumber = value;\par
00192             \}\par
00193         \}\par
00194 \par
00198         {\cf17 public} {\cf18 int} HoldNumber\par
00199         \{\par
00200             {\cf17 get}\par
00201             \{\par
00202                 {\cf19 return} this.holdNumber;\par
00203             \}\par
00204             {\cf17 set}\par
00205             \{\par
00206                 this.holdNumber = value;\par
00207             \}\par
00208         \}\par
00209 \par
00213         {\cf17 public} {\cf18 int} SlideNumber\par
00214         \{\par
00215             {\cf17 get}\par
00216             \{\par
00217                 {\cf19 return} this.slideNumber;\par
00218             \}\par
00219             {\cf17 set}\par
00220             \{\par
00221                 this.slideNumber = value;\par
00222             \}\par
00223         \}\par
00224 \par
00228         {\cf17 public} {\cf18 int} TouchNumber\par
00229         \{\par
00230             {\cf17 get}\par
00231             \{\par
00232                 {\cf19 return} this.touchNumber;\par
00233             \}\par
00234             {\cf17 set}\par
00235             \{\par
00236                 this.touchNumber = value;\par
00237             \}\par
00238         \}\par
00239 \par
00243         {\cf17 public} {\cf18 int} ThoNumber\par
00244         \{\par
00245             {\cf17 get}\par
00246             \{\par
00247                 {\cf19 return} this.thoNumber;\par
00248             \}\par
00249             {\cf17 set}\par
00250             \{\par
00251                 this.thoNumber = value;\par
00252             \}\par
00253         \}\par
00254 \par
00258         {\cf17 public} {\cf18 int} TotalNoteNumber\par
00259         \{\par
00260             {\cf17 get} \{ {\cf19 return} this.totalNoteNumber; \}\par
00261         \}\par
00262 \par
00266         {\cf17 public} {\cf18 int}[] UnitScore\par
00267         \{\par
00268             {\cf17 get}\par
00269             \{\par
00270                 {\cf19 return} this.unitScore;\par
00271             \}\par
00272         \}\par
00273 \par
00277         {\cf17 public} {\cf18 int} Achievement\par
00278         \{\par
00279             {\cf17 get}\par
00280             \{\par
00281                 {\cf19 return} this.achievement;\par
00282             \}\par
00283             {\cf17 set}\par
00284             \{\par
00285                 this.achievement = value;\par
00286             \}\par
00287         \}\par
00288 \par
00293         {\cf17 public} {\cf18 int} TotalDelay\par
00294         \{\par
00295             {\cf17 get}\par
00296             \{\par
00297                 {\cf19 return} this.totalDelay;\par
00298             \}\par
00299             {\cf17 set}\par
00300             \{\par
00301                 this.totalDelay = value;\par
00302             \}\par
00303         \}\par
00304 \par
00309         {\cf17 public} Dictionary<string, string> Information\par
00310         \{\par
00311             {\cf17 get}\par
00312             \{\par
00313                 {\cf19 return} this.information;\par
00314             \}\par
00315             {\cf17 set}\par
00316             \{\par
00317                 this.information = value;\par
00318             \}\par
00319         \}\par
00320 \par
00321         {\cf17 public} {\cf18 bool} IsDXChart\par
00322         \{\par
00323             {\cf17 get} => this.isDxChart;\par
00324             {\cf17 set} => this.isDxChart = value;\par
00325         \}\par
00326 \par
00327         {\cf17 public} Note? FirstNote\par
00328         \{\par
00329             {\cf17 get} => this.firstNote;\par
00330             {\cf17 set} => this.firstNote = value;\par
00331         \}\par
00332 \par
00337         {\cf17 public} {\cf18 int} Definition\par
00338         \{{\cf17 get}; {\cf17 set}; \}\par
00339 \par
00343     {\cf17 public} Chart()\par
00344         \{\par
00345             this.notes = {\cf17 new} List<Note>();\par
00346             this.bpmChanges = {\cf17 new} BPMChanges();\par
00347             this.measureChanges = {\cf17 new} MeasureChanges();\par
00348             this.chart = {\cf17 new} List<List<Note>>();\par
00349             this.information = {\cf17 new} Dictionary<string, string>();\par
00350             this.isDxChart = {\cf17 false};\par
00351             this.definition = 384;\par
00352         \}\par
00353 \par
00354         {\cf17 public} {\cf17 abstract} {\cf18 bool} CheckValidity();\par
00355 \par
00359         {\cf17 public} {\cf17 virtual} {\cf18 void} Update()\par
00360         \{\par
00361             this.CheckSlideStart(); {\cf20 //Add all NSTs back to the chart}\par
00362             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00363             {\cf18 int} maxBar = 0;\par
00364             {\cf18 double} timeStamp = 0.0;\par
00365             {\cf19 if} (notes.Count > 0)\par
00366             \{\par
00367                 maxBar = notes[notes.Count - 1].Bar; {\cf20 //Iterate to get the last note's bar as Max Bar}\par
00368             \}\par
00369 \par
00370             {\cf20 //Iterate over bar}\par
00371             {\cf19 for} ({\cf18 int} i = 0; i <= maxBar; i++)\par
00372             \{\par
00373                 List<Note> bar = {\cf17 new} List<Note>();\par
00374                 BPMChange noteChange = {\cf17 new} BPMChange();\par
00375                 {\cf18 double} currentBPM = this.BPMChanges.ChangeNotes[0].BPM;\par
00376                 Note lastNote = {\cf17 new} Rest();\par
00377                 Note realLastNote = {\cf17 new} Rest();\par
00378                 {\cf19 foreach} (BPMChange x {\cf19 in} this.BPMChanges.ChangeNotes)\par
00379                 \{\par
00380                     {\cf19 if} (x.Bar == i)\par
00381                     \{\par
00382                         bar.Add(x); {\cf20 //Extract the first BPM change in bar to the beginning of the bar}\par
00383                     \}\par
00384                 \}\par
00385                 {\cf19 foreach} (Note x {\cf19 in} this.Notes)\par
00386                 \{\par
00387                     {\cf19 if} (this.FirstNote == {\cf17 null} && !(x.NoteType.Equals({\cf22 "BPM"}) || x.NoteType.Equals({\cf22 "MEASURE"})))\par
00388                     \{\par
00389                         this.FirstNote = x;\par
00390                         {\cf20 // Console.WriteLine(x.Compose(0));}\par
00391                     \}\par
00392                     {\cf20 //x.BPMChangeNotes = this.bpmChanges.ChangeNotes;}\par
00393                     {\cf20 //x.Update();}\par
00394                     {\cf20 //x.TickTimeStamp = this.GetTimeStamp(x.TickStamp);}\par
00395                     {\cf20 //x.WaitTimeStamp = this.GetTimeStamp(x.WaitTickStamp);}\par
00396                     {\cf20 //x.LastTimeStamp = this.GetTimeStamp(x.LastTickStamp);}\par
00397                     {\cf19 if} (x.Bar == i)\par
00398                     \{\par
00399                         {\cf20 //x.ReplaceBPMChanges(this.bpmChanges);}\par
00400                         {\cf20 //x.BPMChangeNotes = this.bpmChanges.ChangeNotes;}\par
00401                         {\cf20 //x.Update();}\par
00402                         {\cf20 // Console.WriteLine("This note contains "+x.BPMChangeNotes.Count+" BPM notes");}\par
00403                         {\cf20 //Console.WriteLine(GetNoteDetail(this.bpmChanges, x));}\par
00404                         {\cf18 int} delay = x.Bar * definition + x.Tick + x.WaitLength + x.LastLength;\par
00405                         {\cf19 switch} (x.NoteSpecificGenre)\par
00406                         \{\par
00407                             {\cf19 case} {\cf22 "BPM"}:\par
00408                                 currentBPM = x.BPM;\par
00409                                 {\cf19 break};\par
00410                             {\cf19 case} {\cf22 "MEASURE"}:\par
00411                                 {\cf19 break};\par
00412                             {\cf19 case} {\cf22 "REST"}:\par
00413                                 {\cf19 break};\par
00414                             {\cf19 case} {\cf22 "TAP"}:\par
00415                                 this.tapNumber++;\par
00416                                 {\cf19 if} (x.NoteSpecificGenre.Equals({\cf22 "XTP"}))\par
00417                                 \{\par
00418                                     this.isDxChart = {\cf17 false};\par
00419                                 \}\par
00420                                 {\cf19 if} (x.NoteType.Equals({\cf22 "TTP"}))\par
00421                                 \{\par
00422                                     this.touchNumber++;\par
00423                                     this.isDxChart = {\cf17 false};\par
00424                                 \}\par
00425                                 {\cf19 else} {\cf19 if} (x.NoteType.Equals({\cf22 "BRK"}) || x.NoteType.Equals({\cf22 "BST"}))\par
00426                                 \{\par
00427                                     this.breakNumber++;\par
00428                                 \}\par
00429                                 {\cf19 break};\par
00430                             {\cf19 case} {\cf22 "HOLD"}:\par
00431                                 this.holdNumber++;\par
00432                                 x.TickBPMDisagree = (GetBPMByTick(x.TickStamp) != GetBPMByTick(x.LastTickStamp) || HasBPMChangeInBetween(x.TickStamp, x.LastTickStamp));\par
00433                                 x.Update();\par
00434                                 {\cf19 if} (x.TickTimeStamp == 0)\par
00435                                 \{\par
00436                                     x.TickTimeStamp = this.GetTimeStamp(x.TickStamp);\par
00437                                 \}\par
00438                                 {\cf19 if} (x.CalculatedLastTime == 0)\par
00439                                 \{\par
00440                                     x.LastTimeStamp = this.GetTimeStamp(x.LastTickStamp);\par
00441                                     x.CalculatedLastTime = x.LastTimeStamp - x.TickTimeStamp;\par
00442                                     x.FixedLastLength = (int)(x.CalculatedLastTime / GetBPMTimeUnit(GetBPMByTick(x.TickStamp)));\par
00443                                 \}\par
00444                                 {\cf19 if} (delay > this.TotalDelay)\par
00445                                 \{\par
00446                                     this.totalDelay = delay;\par
00447                                     {\cf20 //Console.WriteLine("New delay: " + delay);}\par
00448                                     {\cf20 //Console.WriteLine(x.Compose(1));}\par
00449                                 \}\par
00450                                 {\cf19 if} (x.NoteType.Equals({\cf22 "THO"}))\par
00451                                 \{\par
00452                                     this.thoNumber++;\par
00453                                     this.isDxChart = {\cf17 false};\par
00454                                 \}\par
00455                                 {\cf19 break};\par
00456                             {\cf19 case} {\cf22 "SLIDE_START"}:\par
00457                                 this.tapNumber++;\par
00458                                 {\cf19 break};\par
00459                             {\cf19 case} {\cf22 "SLIDE"}:\par
00460                                 this.slideNumber++;\par
00461                                 x.TickBPMDisagree = (GetBPMByTick(x.TickStamp) != GetBPMByTick(x.WaitTickStamp) ||\par
00462                                     GetBPMByTick(x.WaitTickStamp) != GetBPMByTick(x.LastTickStamp) ||\par
00463                                     GetBPMByTick(x.TickStamp) != GetBPMByTick(x.LastTickStamp) ||\par
00464                                     HasBPMChangeInBetween(x.TickStamp, x.WaitTickStamp));\par
00465                                 x.Update();\par
00466                                 {\cf19 if} (x.TickTimeStamp == 0)\par
00467                                 \{\par
00468                                     x.TickTimeStamp = this.GetTimeStamp(x.TickStamp);\par
00469                                 \}\par
00470                                 {\cf19 if} (x.CalculatedWaitTime == 0)\par
00471                                 \{\par
00472                                     x.WaitTimeStamp = this.GetTimeStamp(x.WaitTickStamp);\par
00473                                     x.CalculatedWaitTime = x.WaitTimeStamp - x.TickTimeStamp;\par
00474                                 \}\par
00475                                 {\cf19 if} (x.CalculatedLastTime == 0)\par
00476                                 \{\par
00477                                     x.LastTimeStamp = this.GetTimeStamp(x.LastTickStamp);\par
00478                                     x.CalculatedLastTime = x.LastTimeStamp - x.WaitTimeStamp;\par
00479                                 \}\par
00480                                 {\cf20 // if (lastNote.NoteSpecificType.Equals("SLIDE_START") && (lastNote.Bar == x.Bar && lastNote.Tick == x.Tick && lastNote.Key.Equals(x.Key)))}\par
00481                                 {\cf20 // \{}\par
00482                                 {\cf20 //     x.SlideStart = lastNote;}\par
00483                                 {\cf20 //     lastNote.ConsecutiveSlide = x;}\par
00484                                 {\cf20 // \}}\par
00485                                 {\cf19 if} (delay > this.TotalDelay)\par
00486                                 \{\par
00487                                     this.totalDelay = delay;\par
00488                                     {\cf20 //Console.WriteLine("New delay: "+delay);}\par
00489                                     {\cf20 //Console.WriteLine(x.Compose(1));}\par
00490                                 \}\par
00491                                 {\cf19 if} (x.SlideStart == {\cf17 null})\par
00492                                 \{\par
00493                                     Console.WriteLine({\cf22 "A SLIDE WITHOUT START WAS FOUND"});\par
00494                                     Console.WriteLine(x.Compose(1));\par
00495                                     Console.WriteLine({\cf22 "This slide has start: "} + (x.SlideStart == {\cf17 null}));\par
00496                                     {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "A SLIDE WITHOUT START WAS FOUND"});\par
00497                                 \}\par
00498                                 {\cf19 break};\par
00499                             {\cf19 default}:\par
00500                                 {\cf19 break};\par
00501                         \}\par
00502                         x.BPM = currentBPM;\par
00503                         {\cf20 //if (x.NoteGenre.Equals("SLIDE") && !lastNote.NoteSpecificType.Equals("SLIDE_START"))}\par
00504                         {\cf20 //\{}\par
00505                         {\cf20 //    x.Prev = new Tap("NST", x.Bar, x.Tick, x.Key);}\par
00506                         {\cf20 //    lastNote.Next = x.Prev;}\par
00507                         {\cf20 //\}}\par
00508                         {\cf20 //else}\par
00509                         {\cf20 // // lastNote.Next = x;}\par
00510                         {\cf20 // // x.Prev = lastNote;}\par
00511                         {\cf20 // // x.Prev.Next = x;}\par
00512                         {\cf20 //if ((!x.NoteGenre.Equals("SLIDE")) && x.Prev.NoteType.Equals("STR")&&x.Prev.ConsecutiveSlide == null)}\par
00513                         {\cf20 //\{}\par
00514                         {\cf20 //    Console.WriteLine("Found NSS");}\par
00515                         {\cf20 //    Console.WriteLine("This note's note type: " + x.NoteType);}\par
00516                         {\cf20 //    Console.WriteLine(x.Compose(1));}\par
00517                         {\cf20 //    Console.WriteLine("Prev note's note type: " + x.Prev.NoteType);}\par
00518                         {\cf20 //    Console.WriteLine(x.Prev.Compose(1));}\par
00519                         {\cf20 //    lastNote.NoteType = "NSS";}\par
00520                         {\cf20 //    x.Prev.NoteType = "NSS";}\par
00521                         {\cf20 //\}}\par
00522                         bar.Add(x);\par
00523                         {\cf19 if} (!x.NoteGenre.Equals({\cf22 "SLIDE"}))\par
00524                         \{\par
00525                             lastNote = x;\par
00526                         \}\par
00527                         realLastNote = x;\par
00528                         timeStamp += x.TickTimeStamp;\par
00529                     \}\par
00530                 \}\par
00531 \par
00532                 List<Note> afterBar = {\cf17 new} List<Note>();\par
00533                 afterBar.Add({\cf17 new} MeasureChange(i, 0, CalculateQuaver(CalculateLeastMeasure(bar))));\par
00534                 {\cf20 //Console.WriteLine();}\par
00535                 {\cf20 //Console.WriteLine("In bar "+i+", LeastMeasure is "+ CalculateLeastMeasure(bar)+", so quaver will be "+ CalculateQuaver(CalculateLeastMeasure(bar)));}\par
00536                 afterBar.AddRange(bar);\par
00537                 this.chart.Add(FinishBar(afterBar, this.BPMChanges.ChangeNotes, i, CalculateQuaver(CalculateLeastMeasure(bar))));\par
00538             \}\par
00539             {\cf20 //Console.WriteLine("TOTAL DELAY: "+this.TotalDelay);}\par
00540             {\cf20 //Console.WriteLine("TOTAL COUNT: "+ this.chart.Count * 384);}\par
00541             {\cf19 if} (this.totalDelay < this.chart.Count * definition)\par
00542             \{\par
00543                 this.totalDelay = 0;\par
00544             \}\par
00545             {\cf19 else}\par
00546             \{\par
00547                 this.totalDelay -= this.chart.Count * definition;\par
00548             \}\par
00549             this.totalNoteNumber += (this.tapNumber + this.holdNumber + this.slideNumber);\par
00550         \}\par
00551 \par
00556         {\cf17 public} {\cf17 abstract} {\cf18 string} Compose();\par
00557 \par
00561         {\cf17 public} {\cf18 void} CheckSlideStart()\par
00562         \{\par
00563             List<Note> adjusted = {\cf17 new}();\par
00564             Note previousSlideStart = {\cf17 new} Rest();\par
00565             {\cf19 foreach} (Note x {\cf19 in} this.Notes)\par
00566             \{\par
00567                 {\cf19 if} (x.NoteGenre.Equals({\cf22 "SLIDE"}))\par
00568                 \{\par
00569                     {\cf19 if} (x.SlideStart != {\cf17 null} && x.SlideStart.NoteType.Equals({\cf22 "NST"}) && !adjusted.Contains(x.SlideStart))\par
00570                     \{\par
00571                         adjusted.Add(x.SlideStart);\par
00572                         previousSlideStart = {\cf17 new} Tap(x.SlideStart);\par
00573                     \}\par
00574                     {\cf19 else} {\cf19 if} (x.SlideStart == {\cf17 null})\par
00575                     \{\par
00576                         Console.WriteLine({\cf22 "A SLIDE WITHOUT START WAS FOUND"});\par
00577                         Console.WriteLine(x.Compose(1));\par
00578                         Console.WriteLine({\cf22 "This slide has start: "} + (x.SlideStart == {\cf17 null}));\par
00579                         {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "A SLIDE WITHOUT START WAS FOUND"});\par
00580                     \}\par
00581                 \}\par
00582                 {\cf19 if} (!x.NoteGenre.Equals({\cf22 "SLIDE_START"}))\par
00583                 \{\par
00584                     adjusted.Add(x);\par
00585                 \}\par
00586             \}\par
00587             this.Notes = {\cf17 new}(adjusted);\par
00588         \}\par
00589 \par
00596         {\cf17 public} {\cf17 abstract} {\cf18 string} Compose(BPMChanges bpm, MeasureChanges measure);\par
00597 \par
00603         {\cf17 public} {\cf17 static} {\cf18 int} CalculateLeastMeasure(List<Note> bar)\par
00604         \{\par
00605             List<int> startTimeList = {\cf17 new} List<int>();\par
00606             startTimeList.Add(0);\par
00607             {\cf19 foreach} (Note x {\cf19 in} bar)\par
00608             \{\par
00609                 {\cf19 if} (!startTimeList.Contains(x.Tick))\par
00610                 \{\par
00611                     startTimeList.Add(x.Tick);\par
00612                 \}\par
00613                 {\cf19 if} (x.NoteType.Equals({\cf22 "BPM"}))\par
00614                 \{\par
00615                     {\cf20 //Console.WriteLine(x.Compose(0));}\par
00616                 \}\par
00617             \}\par
00618             {\cf19 if} (startTimeList[startTimeList.Count - 1] != 384)\par
00619             \{\par
00620                 startTimeList.Add(384);\par
00621             \}\par
00622             List<int> intervalCandidates = {\cf17 new} List<int>();\par
00623             {\cf18 int} minimalInterval = GCD(startTimeList[0], startTimeList[1]);\par
00624             {\cf19 for} ({\cf18 int} i = 1; i < startTimeList.Count; i++)\par
00625             \{\par
00626                 minimalInterval = GCD(minimalInterval, startTimeList[i]);\par
00627             \}\par
00628             {\cf19 return} minimalInterval;\par
00629         \}\par
00630 \par
00636         {\cf17 public} {\cf17 static} {\cf18 int} RealNoteNumber(List<Note> Bar)\par
00637         \{\par
00638             {\cf18 int} result = 0;\par
00639             {\cf19 foreach} (Note x {\cf19 in} Bar)\par
00640             \{\par
00641                 {\cf19 if} (x.IsNote)\par
00642                 \{\par
00643                     result++;\par
00644                 \}\par
00645             \}\par
00646             {\cf19 return} result;\par
00647         \}\par
00648 \par
00654         {\cf17 public} {\cf17 static} {\cf18 bool} ContainNotes(List<Note> Bar)\par
00655         \{\par
00656             {\cf18 bool} result = {\cf17 false};\par
00657             {\cf19 foreach} (Note x {\cf19 in} Bar)\par
00658             \{\par
00659                 result = result || x.IsNote;\par
00660             \}\par
00661             {\cf19 return} result;\par
00662         \}\par
00663 \par
00669         {\cf17 public} {\cf17 static} {\cf18 int} CalculateQuaver({\cf18 int} length)\par
00670         \{\par
00671             {\cf18 int} result = 0;\par
00672             {\cf17 const} {\cf18 int} definition = 384;\par
00673             {\cf18 int} divisor = GCD(definition, length);\par
00674             {\cf18 int} quaver = definition / divisor, beat = length / divisor;\par
00675             result = quaver;\par
00676             {\cf19 return} result;\par
00677         \}\par
00678 \par
00687         {\cf17 public} {\cf17 static} List<Note> FinishBar(List<Note> bar, List<BPMChange> bpmChanges, {\cf18 int} barNumber, {\cf18 int} minimalQuaver)\par
00688         \{\par
00689             List<Note> result = {\cf17 new} List<Note>();\par
00690             {\cf18 bool} writeRest = {\cf17 true};\par
00691             result.Add(bar[0]);\par
00692             {\cf19 for} ({\cf18 int} i = 0; i < 384; i += 384 / minimalQuaver)\par
00693             \{\par
00694                 {\cf20 //Separate Touch and others to prevent ordering issue}\par
00695                 Note bpm = {\cf17 new} Rest();\par
00696                 List<Note> eachSet = {\cf17 new} List<Note>();\par
00697                 List<Note> touchEachSet = {\cf17 new} List<Note>();\par
00698                 {\cf20 //Set condition to write rest if appropriate}\par
00699                 writeRest = {\cf17 true};\par
00700                 {\cf20 //Add Appropriate note into each set}\par
00701                 Note lastNote = {\cf17 new} Rest();\par
00702                 {\cf19 foreach} (Note x {\cf19 in} bar)\par
00703                 \{\par
00704                     {\cf19 if} ((x.Tick == i) && x.IsNote && !(x.NoteType.Equals({\cf22 "TTP"}) || x.NoteType.Equals({\cf22 "THO"})))\par
00705                     \{\par
00706                         {\cf19 if} (x.NoteSpecificGenre.Equals({\cf22 "BPM"}))\par
00707                         \{\par
00708                             bpm = x;\par
00709                             {\cf20 //List<Note> tempSet = new List<Note>();}\par
00710                             {\cf20 //tempSet.Add(x);}\par
00711                             {\cf20 //tempSet.AddRange(eachSet);}\par
00712                             {\cf20 //eachSet=tempSet;}\par
00713                             {\cf20 //Console.WriteLine("A note was found at tick " + i + " of bar " + barNumber + ", it is "+x.NoteType);}\par
00714                         \}\par
00715                         {\cf19 else}\par
00716                         \{\par
00717                             eachSet.Add(x);\par
00718                             {\cf20 //Console.WriteLine("A note was found at tick " + i + " of bar " + barNumber + ", it is "+x.NoteType);}\par
00719                             writeRest = {\cf17 false};\par
00720                             x.Prev = lastNote;\par
00721                             lastNote.Next = x;\par
00722                         \}\par
00723                     \}\par
00724                     {\cf19 else} {\cf19 if} ((x.Tick == i) && x.IsNote && (x.NoteType.Equals({\cf22 "TTP"}) || x.NoteType.Equals({\cf22 "THO"})))\par
00725                     \{\par
00726                         {\cf19 if} (x.NoteSpecificGenre.Equals({\cf22 "BPM"}))\par
00727                         \{\par
00728                             bpm = x;\par
00729                             {\cf20 //Console.WriteLine("A note was found at tick " + i + " of bar " + barNumber + ", it is "+x.NoteType);}\par
00730                         \}\par
00731                         {\cf19 else}\par
00732                         \{\par
00733                             touchEachSet.Add(x);\par
00734                             {\cf20 //Console.WriteLine("A note was found at tick " + i + " of bar " + barNumber + ", it is "+x.NoteType);}\par
00735                             writeRest = {\cf17 false};\par
00736                             x.Prev = lastNote;\par
00737                             lastNote.Next = x;\par
00738                         \}\par
00739                     \}\par
00740                     {\cf19 if} (!x.NoteSpecificGenre.Equals({\cf22 "BPM"}))\par
00741                     \{\par
00742                         lastNote = x.NewInstance();\par
00743                     \}\par
00744                 \}\par
00745                 {\cf20 //Searching for BPM change. If find one, get into front.}\par
00746                 {\cf19 if} (bpm.BPM != 0)\par
00747                 \{\par
00748                     List<Note> adjusted = {\cf17 new} List<Note>();\par
00749                     adjusted.Add(bpm);\par
00750                     adjusted.AddRange(touchEachSet);\par
00751                     adjusted.AddRange(eachSet);\par
00752                     eachSet = adjusted;\par
00753                 \}\par
00754                 {\cf19 else}\par
00755                 \{\par
00756                     List<Note> adjusted = {\cf17 new} List<Note>();\par
00757                     adjusted.AddRange(touchEachSet);\par
00758                     adjusted.AddRange(eachSet);\par
00759                     eachSet = adjusted;\par
00760                 \}\par
00761                 {\cf19 if} (writeRest)\par
00762                 \{\par
00763                     {\cf20 //Console.WriteLine("There is no note at tick " + i + " of bar " + barNumber + ", Adding one");}\par
00764                     eachSet.Add({\cf17 new} Rest({\cf22 "RST"}, barNumber, i));\par
00765                 \}\par
00766                 result.AddRange(eachSet);\par
00767             \}\par
00768             {\cf19 if} (RealNoteNumber(result) != RealNoteNumber(bar))\par
00769             \{\par
00770                 {\cf18 string} error = {\cf22 ""};\par
00771                 error += ({\cf22 "Bar notes not match in bar: "} + barNumber) + {\cf22 "\\n"};\par
00772                 error += ({\cf22 "Expected: "} + RealNoteNumber(bar)) + {\cf22 "\\n"};\par
00773                 {\cf19 foreach} (Note x {\cf19 in} bar)\par
00774                 \{\par
00775                     error += (x.Compose(1)) + {\cf22 "\\n"};\par
00776                 \}\par
00777                 error += ({\cf22 "\\nActual: "} + RealNoteNumber(result)) + {\cf22 "\\n"};\par
00778                 {\cf19 foreach} (Note y {\cf19 in} result)\par
00779                 \{\par
00780                     error += (y.Compose(1)) + {\cf22 "\\n"};\par
00781                 \}\par
00782                 Console.WriteLine(error);\par
00783                 {\cf19 throw} {\cf17 new} Exception({\cf22 "NOTE NUMBER IS NOT MATCHING"});\par
00784             \}\par
00785             {\cf18 bool} hasFirstBPMChange = {\cf17 false};\par
00786             List<Note> changedResult = {\cf17 new} List<Note>();\par
00787             Note potentialFirstChange = {\cf17 new} Rest();\par
00788             \{\par
00789                 {\cf19 for} ({\cf18 int} i = 0; !hasFirstBPMChange && i < result.Count(); i++)\par
00790                 \{\par
00791                     {\cf19 if} (result[i].NoteGenre.Equals({\cf22 "BPM"}) && result[i].Tick == 0)\par
00792                     \{\par
00793                         changedResult.Add(result[i]);\par
00794                         potentialFirstChange = result[i];\par
00795                         hasFirstBPMChange = {\cf17 true};\par
00796                     \}\par
00797                 \}\par
00798                 {\cf19 if} (hasFirstBPMChange)\par
00799                 \{\par
00800                     result.Remove(potentialFirstChange);\par
00801                     changedResult.AddRange(result);\par
00802                     result = changedResult;\par
00803                 \}\par
00804             \}\par
00805 \par
00806             {\cf19 return} result;\par
00807         \}\par
00808 \par
00815         {\cf17 public} {\cf17 static} {\cf18 int} GCD({\cf18 int} a, {\cf18 int} b)\par
00816         \{\par
00817             {\cf19 return} b == 0 ? a : GCD(b, a % b);\par
00818         \}\par
00819 \par
00825         {\cf17 public} {\cf17 static} {\cf18 bool} IsPrime({\cf18 int} number)\par
00826         \{\par
00827             {\cf19 if} (number < 1) {\cf19 return} {\cf17 false};\par
00828             {\cf19 if} (number == 2) {\cf19 return} {\cf17 true};\par
00829             {\cf19 if} (number % 2 == 0) {\cf19 return} {\cf17 false};\par
00830 \par
00831             var boundary = (int)Math.Floor(Math.Sqrt(number));\par
00832 \par
00833             {\cf19 for} ({\cf18 int} i = 3; i <= boundary; i += 2)\par
00834                 {\cf19 if} (number % i == 0)\par
00835                     {\cf19 return} {\cf17 false};\par
00836 \par
00837             {\cf19 return} {\cf17 true};\par
00838         \}\par
00839 \par
00844         {\cf17 public} {\cf18 void} TakeInformation(Dictionary<string, string> information)\par
00845         \{\par
00846             {\cf19 foreach} (KeyValuePair<string, string> x {\cf19 in} information)\par
00847             \{\par
00848                 this.information.Add(x.Key, x.Value);\par
00849             \}\par
00850         \}\par
00851 \par
00852         {\cf17 public} {\cf18 double} GetTimeStamp({\cf18 int} bar, {\cf18 int} tick)\par
00853         \{\par
00854             {\cf18 double} result = 0.0;\par
00855             {\cf18 int} overallTick = bar * 384 + tick;\par
00856             {\cf19 if} (overallTick != 0)\par
00857             \{\par
00858                 {\cf18 int} maximumBPMIndex = 0;\par
00859                 {\cf19 for} ({\cf18 int} i = 0; i < this.BPMChanges.ChangeNotes.Count; i++)\par
00860                 \{\par
00861                     {\cf19 if} (this.BPMChanges.ChangeNotes[i].TickStamp <= overallTick)\par
00862                     \{\par
00863                         maximumBPMIndex = i;\par
00864                     \}\par
00865                 \}\par
00866                 {\cf19 if} (maximumBPMIndex == 0)\par
00867                 \{\par
00868                     result = 60 / this.BPMChanges.ChangeNotes[0].BPM * 4 / 384;\par
00869                 \}\par
00870                 {\cf19 else}\par
00871                 \{\par
00872                     {\cf19 for} ({\cf18 int} i = 1; i <= maximumBPMIndex; i++)\par
00873                     \{\par
00874                         {\cf18 double} previousTickTimeUnit = 60 / this.BPMChanges.ChangeNotes[i - 1].BPM * 4 / 384;\par
00875                         result += (this.BPMChanges.ChangeNotes[i].TickStamp - this.BPMChanges.ChangeNotes[i - 1].TickStamp) * previousTickTimeUnit;\par
00876                     \}\par
00877                     {\cf18 double} tickTimeUnit = 60 / this.BPMChanges.ChangeNotes[maximumBPMIndex].BPM * 4 / 384;\par
00878                     result += (overallTick - this.BPMChanges.ChangeNotes[maximumBPMIndex].TickStamp) * tickTimeUnit;\par
00879                 \}\par
00880             \}\par
00881             {\cf19 return} result;\par
00882         \}\par
00883 \par
00889         {\cf17 public} {\cf18 double} GetTimeStamp({\cf18 int} overallTick)\par
00890         \{\par
00891             {\cf18 double} result = 0.0;\par
00892             {\cf19 if} (overallTick != 0)\par
00893             \{\par
00894                 {\cf18 bool} foundMax = {\cf17 false};\par
00895                 {\cf18 int} maximumBPMIndex = 0;\par
00896                 {\cf19 for} ({\cf18 int} i = 0; i < this.BPMChanges.ChangeNotes.Count && !foundMax; i++)\par
00897                 \{\par
00898                     {\cf19 if} (this.BPMChanges.ChangeNotes[i].TickStamp <= overallTick)\par
00899                     \{\par
00900                         maximumBPMIndex = i;\par
00901                     \}\par
00902                     {\cf19 else}\par
00903                     \{\par
00904                         foundMax = {\cf17 true};\par
00905                     \}\par
00906                 \}\par
00907                 {\cf19 if} (maximumBPMIndex == 0)\par
00908                 \{\par
00909                     result = GetBPMTimeUnit(this.BPMChanges.ChangeNotes[0].BPM) * overallTick;\par
00910                 \}\par
00911                 {\cf19 else}\par
00912                 \{\par
00913                     {\cf19 for} ({\cf18 int} i = 1; i <= maximumBPMIndex; i++)\par
00914                     \{\par
00915                         {\cf18 double} previousTickTimeUnit = GetBPMTimeUnit(this.BPMChanges.ChangeNotes[i - 1].BPM);\par
00916                         result += (this.BPMChanges.ChangeNotes[i].TickStamp - this.BPMChanges.ChangeNotes[i - 1].TickStamp) * previousTickTimeUnit;\par
00917                     \}\par
00918                     {\cf18 double} tickTimeUnit = GetBPMTimeUnit(this.BPMChanges.ChangeNotes[maximumBPMIndex].BPM);\par
00919                     result += (overallTick - this.BPMChanges.ChangeNotes[maximumBPMIndex].TickStamp) * tickTimeUnit;\par
00920                 \}\par
00921             \}\par
00922             {\cf19 return} result;\par
00923         \}\par
00924 \par
00930         {\cf17 public} {\cf17 static} {\cf18 double} GetTimeStamp(BPMChanges bpmChanges, {\cf18 int} overallTick)\par
00931         \{\par
00932             {\cf18 double} result = 0.0;\par
00933             {\cf19 if} (overallTick != 0)\par
00934             \{\par
00935                 {\cf18 int} maximumBPMIndex = 0;\par
00936                 {\cf19 for} ({\cf18 int} i = 0; i < bpmChanges.ChangeNotes.Count; i++)\par
00937                 \{\par
00938                     {\cf19 if} (bpmChanges.ChangeNotes[i].TickStamp <= overallTick)\par
00939                     \{\par
00940                         maximumBPMIndex = i;\par
00941                     \}\par
00942                 \}\par
00943                 {\cf19 if} (maximumBPMIndex == 0)\par
00944                 \{\par
00945                     result = GetBPMTimeUnit(bpmChanges.ChangeNotes[0].BPM) * overallTick;\par
00946                 \}\par
00947                 {\cf19 else}\par
00948                 \{\par
00949                     {\cf19 for} ({\cf18 int} i = 1; i <= maximumBPMIndex; i++)\par
00950                     \{\par
00951                         {\cf18 double} previousTickTimeUnit = GetBPMTimeUnit(bpmChanges.ChangeNotes[i - 1].BPM);\par
00952                         result += (bpmChanges.ChangeNotes[i].TickStamp - bpmChanges.ChangeNotes[i - 1].TickStamp) * previousTickTimeUnit;\par
00953                     \}\par
00954                     {\cf18 double} tickTimeUnit = GetBPMTimeUnit(bpmChanges.ChangeNotes[maximumBPMIndex].BPM);\par
00955                     result += (overallTick - bpmChanges.ChangeNotes[maximumBPMIndex].TickStamp) * tickTimeUnit;\par
00956                 \}\par
00957             \}\par
00958             {\cf19 return} result;\par
00959         \}\par
00960 \par
00966         {\cf17 public} {\cf17 static} {\cf18 double} GetBPMTimeUnit({\cf18 double} bpm)\par
00967         \{\par
00968             {\cf18 double} result = 60 / bpm * 4 / 384;\par
00969             {\cf19 return} result;\par
00970         \}\par
00971 \par
00978         {\cf17 public} {\cf17 static} {\cf18 string} GetNoteDetail(BPMChanges bpmChanges, Note inTake)\par
00979         \{\par
00980             {\cf18 string} result = {\cf22 ""};\par
00981             result += inTake.Compose(1) + {\cf22 "\\n"};\par
00982             result += {\cf22 "This is a "} + inTake.NoteSpecificGenre + {\cf22 " note,\\n"};\par
00983             result += {\cf22 "This note has overall tick of "} + inTake.TickStamp + {\cf22 ", and therefor, the tick time stamp shall be "} + GetTimeStamp(bpmChanges, inTake.TickStamp) + {\cf22 "\\n"};\par
00984             {\cf19 if} (inTake.NoteGenre.Equals({\cf22 "SLIDE"}))\par
00985             \{\par
00986                 result += {\cf22 "This note has wait length of "} + inTake.WaitLength + {\cf22 ", and therefor, its wait tick stamp is "} + inTake.WaitTickStamp + {\cf22 " with wait time stamp of "} + GetTimeStamp(bpmChanges, inTake.WaitTickStamp) + {\cf22 "\\n"};\par
00987                 result += {\cf22 "This note has last length of "} + inTake.LastLength + {\cf22 ", and therefor, its last tick stamp is "} + inTake.LastTickStamp + {\cf22 " with last time stamp of "} + GetTimeStamp(bpmChanges, inTake.LastTickStamp) + {\cf22 "\\n"};\par
00988             \}\par
00989             {\cf19 return} result;\par
00990         \}\par
00991 \par
00997         {\cf17 public} {\cf18 double} GetBPMByTick({\cf18 int} overallTick)\par
00998         \{\par
00999             {\cf18 double} result = this.bpmChanges.ChangeNotes[0].BPM;\par
01000             {\cf19 if} (overallTick > 0)\par
01001             \{\par
01002                 {\cf18 int} maximumBPMIndex = 0;\par
01003                 {\cf19 for} ({\cf18 int} i = 0; i < this.bpmChanges.ChangeNotes.Count; i++)\par
01004                 \{\par
01005                     {\cf19 if} (this.bpmChanges.ChangeNotes[i].TickStamp <= overallTick)\par
01006                     \{\par
01007                         maximumBPMIndex = i;\par
01008                     \}\par
01009                 \}\par
01010                 result = this.bpmChanges.ChangeNotes[maximumBPMIndex].BPM;\par
01011 \par
01012             \}\par
01013             {\cf19 return} result;\par
01014         \}\par
01015 \par
01022         {\cf17 public} {\cf18 bool} HasBPMChangeInBetween({\cf18 int} startTick, {\cf18 int} endTick)\par
01023         \{\par
01024             {\cf18 bool} result = {\cf17 false};\par
01025 \par
01026             {\cf19 for} ({\cf18 int} i = 0; i < this.bpmChanges.ChangeNotes.Count && !result; i++)\par
01027             \{\par
01028                 {\cf19 if} (this.bpmChanges.ChangeNotes[i].TickStamp > startTick && {\cf17 this}.bpmChanges.ChangeNotes[i].TickStamp < endTick)\par
01029                 \{\par
01030                     result = {\cf17 true};\par
01031                 \}\par
01032             \}\par
01033 \par
01034             {\cf19 return} result;\par
01035         \}\par
01036 \par
01037         {\cf17 public} {\cf18 void} ShiftByOffset({\cf18 int} overallTick)\par
01038         \{\par
01039             List<Note> updatedNotes = {\cf17 new} List<Note>();\par
01040             {\cf19 foreach} (Note x {\cf19 in} this.Notes)\par
01041             \{\par
01042                 {\cf19 if} (!x.NoteType.Equals({\cf22 "BPM"}) || !x.NoteGenre.Equals({\cf22 "MEASURE"}) || (x.NoteType.Equals({\cf22 "BPM"}) && x.Bar != 0 && x.Tick != 0) || (x.NoteGenre.Equals({\cf22 "MEASURE"}) && x.Bar != 0 && x.Tick != 0))\par
01043                 \{\par
01044                     Note copy;\par
01045                     {\cf19 switch} (x.NoteGenre)\par
01046                     \{\par
01047                         {\cf19 case} {\cf22 "TAP"}:\par
01048                         {\cf19 case} {\cf22 "SLIDE_START"}:\par
01049                             copy = {\cf17 new} Tap(x);\par
01050                             copy.Bar += overallTick / 384;\par
01051                             copy.Tick += overallTick % 384;\par
01052                             {\cf20 // if (copy.ConsecutiveSlide!=null)}\par
01053                             {\cf20 // \{}\par
01054                             {\cf20 //     copy.ConsecutiveSlide.Bar += overallTick / 384;}\par
01055                             {\cf20 //     copy.ConsecutiveSlide.Tick += overallTick % 384;}\par
01056                             {\cf20 // \}}\par
01057                             copy.Update();\par
01058                             {\cf19 break};\par
01059                         {\cf19 case} {\cf22 "HOLD"}:\par
01060                             copy = {\cf17 new} Hold(x);\par
01061                             copy.Bar += overallTick / 384;\par
01062                             copy.Tick += overallTick % 384;\par
01063                             copy.Update();\par
01064                             {\cf19 break};\par
01065                         {\cf19 case} {\cf22 "SLIDE"}:\par
01066                             copy = {\cf17 new} Slide(x);\par
01067                             copy.Bar += overallTick / 384;\par
01068                             copy.Tick += overallTick % 384;\par
01069                             {\cf20 // if (copy.SlideStart != null)}\par
01070                             {\cf20 // \{}\par
01071                             {\cf20 //     copy.SlideStart.Bar += overallTick / 384;}\par
01072                             {\cf20 //     copy.SlideStart.Tick += overallTick % 384;}\par
01073                             {\cf20 // \}}\par
01074                             {\cf20 // if (copy.ConsecutiveSlide != null)}\par
01075                             {\cf20 // \{}\par
01076                             {\cf20 //     copy.ConsecutiveSlide.Bar += overallTick / 384;}\par
01077                             {\cf20 //     copy.ConsecutiveSlide.Tick += overallTick % 384;}\par
01078                             {\cf20 // \}}\par
01079                             copy.Update();\par
01080                             {\cf19 break};\par
01081                         {\cf19 case} {\cf22 "BPM"}:\par
01082                             copy = {\cf17 new} BPMChange(x);\par
01083                             copy.Bar += overallTick / 384;\par
01084                             copy.Tick += overallTick % 384;\par
01085                             copy.Update();\par
01086                             {\cf19 break};\par
01087                         {\cf19 case} {\cf22 "MEASURE"}:\par
01088                             copy = {\cf17 new} MeasureChange((MeasureChange)x);\par
01089                             copy.Bar += overallTick / 384;\par
01090                             copy.Tick += overallTick % 384;\par
01091                             copy.Update();\par
01092                             {\cf19 break};\par
01093                         {\cf19 default}:\par
01094                             copy = {\cf17 new} Rest();\par
01095                             {\cf19 break};\par
01096                     \}\par
01097                     updatedNotes.Add(copy);\par
01098                 \} \par
01099                 {\cf19 else}\par
01100                 \{\par
01101                     updatedNotes.Add(x);\par
01102                 \}\par
01103             \}\par
01104             this.Notes = {\cf17 new} List<Note>(updatedNotes);\par
01105             this.Update();\par
01106         \}\par
01107 \par
01108         {\cf17 public} {\cf18 void} ShiftByOffset({\cf18 int} bar, {\cf18 int} tick)\par
01109         \{\par
01110             {\cf18 int} overallTick = bar * 384 + tick;\par
01111             this.ShiftByOffset(overallTick);\par
01112         \}\par
01113 \par
01114         {\cf17 public} {\cf18 void} RotateNotes({\cf18 string} method)\par
01115         \{\par
01116             {\cf19 foreach} (Note x {\cf19 in} this.Notes)\par
01117             \{\par
01118                 x.Flip(method);\par
01119             \}\par
01120             this.Update();\par
01121         \}\par
01122     \}\par
01123 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/ChartPack.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/ChartPack.cs}
{\xe \v Neskol/MaiLib/ChartPack.cs}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.ChartPack}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a collection to store charts in relate of SD and DX. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChartPack.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/ChartPack.cs}
{\xe \v Neskol/MaiLib/ChartPack.cs}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 \par
00003 {\cf17 namespace }MaiLib;\par
00004 \par
00008 {\cf17 public} {\cf17 abstract} {\cf17 class }ChartPack : Chart, IChart\par
00009 \{\par
00014     {\cf17 private} List<Chart>[] sddxCharts;\par
00015 \par
00019     {\cf17 private} TrackInformation? globalInformation;\par
00020 \par
00024     {\cf17 public} ChartPack()\par
00025     \{\par
00026         sddxCharts = {\cf17 new} List<Chart>[2];\par
00027     \}\par
00028 \par
00033     {\cf17 public} List<Chart>[] SDDXCharts\par
00034     \{\par
00035         {\cf17 get}\par
00036         \{\par
00037             {\cf19 return} this.sddxCharts;\par
00038         \}\par
00039         {\cf17 set}\par
00040         \{\par
00041             this.sddxCharts=value;\par
00042         \}\par
00043     \}\par
00044 \par
00049     {\cf17 public} TrackInformation? GlobalInformation \par
00050     \{\par
00051         {\cf17 get}\par
00052         \{\par
00053             {\cf19 return} this.globalInformation;\par
00054         \}\par
00055         {\cf17 set}\par
00056         \{\par
00057             this.globalInformation=value;\par
00058         \}\par
00059     \}\par
00060 \par
00061     {\cf20 // public abstract bool CheckValidity();}\par
00062 \par
00063     {\cf17 public} {\cf17 override} {\cf18 string} Compose()\par
00064     \{\par
00065         {\cf19 throw} {\cf17 new} NotImplementedException();\par
00066     \}\par
00067 \par
00068     {\cf20 // public abstract void Update();}\par
00069 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Compiler.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Compiler.cs}
{\xe \v Neskol/MaiLib/Compiler.cs}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Compiler}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Compiler.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Compiler.cs}
{\xe \v Neskol/MaiLib/Compiler.cs}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Runtime.InteropServices;\par
00005 {\cf17 using }System.Text;\par
00006 {\cf17 using }System.Threading.Tasks;\par
00007 \par
00008 {\cf17 namespace }MaiLib\par
00009 \{\par
00010     {\cf17 public} {\cf17 abstract} {\cf17 class }Compiler : ICompiler\par
00011     \{\par
00015         {\cf17 public} {\cf17 static} readonly {\cf18 string}[] difficulty = \{ {\cf22 "Easy"}, {\cf22 "Basic"}, {\cf22 "Advanced"}, {\cf22 "Expert"}, {\cf22 "Master"}, {\cf22 "Remaster"}, {\cf22 "Utage"} \};\par
00016 \par
00020         {\cf17 private} List<Chart> charts;\par
00021 \par
00025         {\cf17 private} Dictionary<string, string> information;\par
00026 \par
00030         {\cf17 private} XmlInformation musicXml;\par
00031 \par
00035         {\cf17 private} {\cf18 string} globalSep;\par
00036 \par
00040         {\cf17 private} Dictionary<string, string> rotateDictionary = {\cf17 new} Dictionary<string, string> \{ \{ {\cf22 "17"}, {\cf22 "UpSideDown"} \}, \{ {\cf22 "305"}, {\cf22 "LeftToRight"} \}, \{ {\cf22 "417"}, {\cf22 "Clockwise90"} \} \};\par
00041 \par
00045         {\cf17 public} {\cf18 string} GlobalSep\par
00046         \{\par
00047             {\cf17 get} \{ {\cf19 return} this.globalSep; \}\par
00048         \}\par
00049 \par
00053         {\cf17 private} List<string> compiledChart;\par
00054 \par
00058         {\cf17 public} List<string> CompiledChart\par
00059         \{\par
00060             {\cf17 get} \{ {\cf19 return} this.compiledChart; \}\par
00061             {\cf17 set} \{ this.compiledChart = value; \}\par
00062         \}\par
00063 \par
00067         {\cf17 public} List<Chart> Charts\par
00068         \{\par
00069             {\cf17 get} \{ {\cf19 return} this.charts; \}\par
00070             {\cf17 set} \{ this.charts = value; \}\par
00071         \}\par
00072 \par
00076         {\cf17 public} Dictionary<string, string> Information\par
00077         \{\par
00078             {\cf17 get} \{ {\cf19 return} this.information; \}\par
00079             {\cf17 set} \{ this.information = value; \}\par
00080         \}\par
00081 \par
00085         {\cf17 public} XmlInformation MusicXml\par
00086         \{\par
00087             {\cf17 get} \{ {\cf19 return} this.musicXml; \}\par
00088             {\cf17 set} \{ this.musicXml = value; \}\par
00089         \}\par
00090 \par
00094         {\cf17 public} {\cf18 string}[] Difficulty\par
00095         \{\par
00096             {\cf17 get} \{ {\cf19 return} difficulty; \}\par
00097         \}\par
00098 \par
00103         {\cf17 public} Dictionary<string, string> RotateDictionary\par
00104         \{\par
00105             {\cf17 get}\par
00106             \{\par
00107                 {\cf19 return} this.rotateDictionary;\par
00108             \}\par
00109             {\cf17 set}\par
00110             \{\par
00111                 this.rotateDictionary = value;\par
00112             \}\par
00113         \}\par
00114 \par
00115 \par
00116 \par
00122         {\cf17 public} Compiler({\cf18 string} location, {\cf18 string} targetLocation)\par
00123         \{\par
00124             compiledChart = {\cf17 new}();\par
00125             charts = {\cf17 new} List<Chart>();\par
00126             this.musicXml = {\cf17 new} XmlInformation(location);\par
00127             musicXml.Update();\par
00128             this.information = musicXml.Information;\par
00129 \par
00130             {\cf19 if} (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))\par
00131             \{\par
00132                 globalSep = {\cf22 "\\\\"};\par
00133             \}\par
00134             {\cf19 else}\par
00135             \{\par
00136                 globalSep = {\cf22 "/"};\par
00137             \}\par
00138         \}\par
00139 \par
00143         {\cf17 public} Compiler()\par
00144         \{\par
00145             compiledChart = {\cf17 new}();\par
00146             charts = {\cf17 new} List<Chart>();\par
00147             information = {\cf17 new} Dictionary<string, string>();\par
00148             this.musicXml = {\cf17 new} XmlInformation();\par
00149             {\cf19 if} (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))\par
00150             \{\par
00151                 globalSep = {\cf22 "\\\\"};\par
00152             \}\par
00153             {\cf19 else}\par
00154             \{\par
00155                 globalSep = {\cf22 "/"};\par
00156             \}\par
00157         \}\par
00158 \par
00159         {\cf17 public} {\cf18 bool} CheckValidity()\par
00160         \{\par
00161             {\cf18 bool} result = {\cf17 true};\par
00162             {\cf19 foreach} (Chart x {\cf19 in} charts)\par
00163             \{\par
00164                 result = result && x.CheckValidity();\par
00165             \}\par
00166             {\cf19 return} result;\par
00167         \}\par
00168 \par
00169         {\cf17 public} {\cf17 abstract} {\cf18 string} Compose();\par
00170 \par
00176         {\cf17 public} {\cf17 abstract} {\cf18 string} Compose(Chart chart);\par
00177 \par
00183         {\cf17 public} {\cf17 abstract} {\cf18 string} Compose({\cf18 bool} isUtage, List<string> ma2files);\par
00184 \par
00185         {\cf17 public} {\cf18 void} TakeInformation(Dictionary<string, string> information)\par
00186         \{\par
00187             this.information = information;\par
00188         \}\par
00189 \par
00194         {\cf17 public} BPMChanges SymbolicBPMTable()\par
00195         \{\par
00196             BPMChanges bpmTable = {\cf17 new} BPMChanges();\par
00197             {\cf18 bool} foundTable = {\cf17 false};\par
00198             {\cf19 for} ({\cf18 int} i = 0; i < this.charts.Count && !foundTable; i++)\par
00199             \{\par
00200                 {\cf19 if} (this.charts[i] != {\cf17 null})\par
00201                 \{\par
00202                     bpmTable = this.charts[i].BPMChanges;\par
00203                     foundTable = {\cf17 true};\par
00204                 \}\par
00205             \}\par
00206             {\cf19 return} bpmTable;\par
00207         \}\par
00208 \par
00214         {\cf17 public} Note SymbolicFirstNote({\cf18 bool} isUtage)\par
00215         \{\par
00216             {\cf19 if} (!isUtage)\par
00217             \{\par
00218                 {\cf19 return} this.charts[4].FirstNote ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Null first note: master chart is invalid"});\par
00219             \}\par
00220             {\cf19 else} {\cf19 if} (isUtage)\par
00221             \{\par
00222                 Note? firstNote;\par
00223                 {\cf18 bool} foundFirstNote = {\cf17 false};\par
00224                 {\cf19 for} ({\cf18 int} i = this.charts.Count; i >= 0 && !foundFirstNote; i++)\par
00225                 \{\par
00226                     {\cf19 if} (this.charts[i] != {\cf17 null})\par
00227                     \{\par
00228                         firstNote = this.charts[i].FirstNote;\par
00229                         foundFirstNote = {\cf17 true};\par
00230                     \}\par
00231                 \}\par
00232                 {\cf19 return} this.charts[0].FirstNote ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Null first note: utage chart is invalid"});\par
00233             \}\par
00234             {\cf19 else} {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "This compiler contains invalid Master Chart and is not Utage Chart: no first note is returned"});\par
00235         \}\par
00236 \par
00241         {\cf17 public} {\cf18 string} GenerateOneLineSummary()\par
00242         \{\par
00243             {\cf18 string} result = {\cf22 ""};\par
00244             {\cf19 if} (this.charts.Equals({\cf17 null}))\par
00245             \{\par
00246                 {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "This compiler has empty chat list!"});\par
00247             \}\par
00248             result += {\cf22 "("} + this.information[{\cf22 "Music ID"}] + {\cf22 ")"} + this.information[{\cf22 "Name"}] + {\cf22 ", "} + this.information[{\cf22 "Genre"}] + {\cf22 ", "};\par
00249             {\cf19 if} (!this.Information[{\cf22 "Easy"}].Equals({\cf22 ""}))\par
00250             \{\par
00251                 result += this.Information[{\cf22 "Easy"}] + {\cf22 "/"};\par
00252             \}\par
00253             {\cf19 if} (!this.Information[{\cf22 "Basic"}].Equals({\cf22 ""}))\par
00254             \{\par
00255                 result += this.Information[{\cf22 "Basic"}];\par
00256             \}\par
00257             {\cf19 else} result += {\cf22 "-"};\par
00258             {\cf19 if} (!this.Information[{\cf22 "Advanced"}].Equals({\cf22 ""}))\par
00259             \{\par
00260                 result += {\cf22 "/"} + this.Information[{\cf22 "Advanced"}];\par
00261             \}\par
00262             {\cf19 else} result += {\cf22 "-"};\par
00263             {\cf19 if} (!this.Information[{\cf22 "Expert"}].Equals({\cf22 ""}))\par
00264             \{\par
00265                 result += {\cf22 "/"} + this.Information[{\cf22 "Expert"}];\par
00266             \}\par
00267             {\cf19 else} result += {\cf22 "-"};\par
00268             {\cf19 if} (!this.Information[{\cf22 "Master"}].Equals({\cf22 ""}))\par
00269             \{\par
00270                 result += {\cf22 "/"} + this.Information[{\cf22 "Master"}];\par
00271             \}\par
00272             {\cf19 else} result += {\cf22 "-"};\par
00273             {\cf19 if} (!this.Information[{\cf22 "Remaster"}].Equals({\cf22 ""}))\par
00274             \{\par
00275                 result += {\cf22 "/"} + this.Information[{\cf22 "Remaster"}];\par
00276             \}\par
00277             {\cf19 else} result += {\cf22 "-"};\par
00278             {\cf19 if} (!this.Information[{\cf22 "Utage"}].Equals({\cf22 ""}))\par
00279             \{\par
00280                 result += {\cf22 "\\\\"} + this.Information[{\cf22 "Utage"}];\par
00281             \}\par
00282 \par
00283             {\cf19 return} result;\par
00284         \}\par
00285     \}\par
00286 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Hold.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Hold.cs}
{\xe \v Neskol/MaiLib/Hold.cs}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Hold}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Hold Note. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hold.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Hold.cs}
{\xe \v Neskol/MaiLib/Hold.cs}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }Hold : Note\par
00007     \{\par
00011         {\cf17 private} {\cf18 int} specialEffect;\par
00012 \par
00016         {\cf17 private} {\cf18 string} touchSize;\par
00017 \par
00022         {\cf17 private} readonly {\cf18 string}[] allowedType = \{ {\cf22 "HLD"}, {\cf22 "XHO"}, {\cf22 "THO"} \};\par
00023 \par
00032         {\cf17 public} Hold({\cf18 string} noteType, {\cf18 int} bar, {\cf18 int} startTime, {\cf18 string} key, {\cf18 int} lastTime)\par
00033         \{\par
00034             this.NoteType = noteType;\par
00035             this.Key = key;\par
00036             this.Bar = bar;\par
00037             this.Tick = startTime;\par
00038             this.LastLength = lastTime;\par
00039             this.specialEffect = 0;\par
00040             this.touchSize = {\cf22 "M1"};\par
00041             this.Update();\par
00042         \}\par
00043 \par
00054         {\cf17 public} Hold({\cf18 string} noteType, {\cf18 int} bar, {\cf18 int} startTime, {\cf18 string} key, {\cf18 int} lastTime, {\cf18 int} specialEffect, {\cf18 string} touchSize)\par
00055         \{\par
00056             this.NoteType = noteType;\par
00057             this.Key = key;\par
00058             this.Bar = bar;\par
00059             this.Tick = startTime;\par
00060             this.LastLength = lastTime;\par
00061             this.specialEffect = specialEffect;\par
00062             this.touchSize = touchSize;\par
00063             this.Update();\par
00064         \}\par
00065 \par
00071         {\cf17 public} Hold(Note inTake)\par
00072         \{\par
00073             this.NoteType = inTake.NoteType;\par
00074             this.Key = inTake.Key;\par
00075             this.EndKey = inTake.EndKey;\par
00076             this.Bar = inTake.Bar;\par
00077             this.Tick = inTake.Tick;\par
00078             this.TickStamp = inTake.TickStamp;\par
00079             this.TickTimeStamp = inTake.TickTimeStamp;\par
00080             this.LastLength = inTake.LastLength;\par
00081             this.LastTickStamp = inTake.LastTickStamp;\par
00082             this.LastTimeStamp = inTake.LastTimeStamp;\par
00083             this.WaitLength = inTake.WaitLength;\par
00084             this.WaitTickStamp = inTake.WaitTickStamp;\par
00085             this.WaitTimeStamp = inTake.WaitTimeStamp;\par
00086             this.CalculatedLastTime = inTake.CalculatedLastTime;\par
00087             this.CalculatedLastTime = inTake.CalculatedLastTime;\par
00088             this.TickBPMDisagree = inTake.TickBPMDisagree;\par
00089             this.BPM = inTake.BPM;\par
00090             this.BPMChangeNotes = inTake.BPMChangeNotes;\par
00091             {\cf19 if} (inTake.NoteGenre == {\cf22 "HOLD"})\par
00092             \{\par
00093                 this.touchSize = ((Hold)inTake).TouchSize ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00094                 this.specialEffect = ((Hold)inTake).SpecialEffect;\par
00095             \}\par
00096             {\cf19 else}\par
00097             \{\par
00098                 this.touchSize = {\cf22 "M1"};\par
00099                 this.specialEffect = 0;\par
00100             \}\par
00101         \}\par
00102 \par
00107         {\cf17 public} {\cf18 int} SpecialEffect\par
00108         \{\par
00109             {\cf17 get} \{ {\cf19 return} specialEffect; \}\par
00110         \}\par
00111 \par
00116         {\cf17 public} {\cf18 string} TouchSize\par
00117         \{\par
00118             {\cf17 get} \{ {\cf19 return} touchSize; \}\par
00119         \}\par
00120 \par
00121         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00122         \{\par
00123             {\cf18 bool} result = {\cf17 false};\par
00124             {\cf19 foreach} ({\cf18 string} x {\cf19 in} allowedType)\par
00125             \{\par
00126                 result = result || this.NoteType.Equals(x);\par
00127             \}\par
00128             result = result && NoteType.Length == 3;\par
00129             result = result && Key.Length <= 2;\par
00130             {\cf19 return} result;\par
00131         \}\par
00132 \par
00133         {\cf17 public} {\cf17 override} {\cf18 string} Compose({\cf18 int} format)\par
00134         \{\par
00135             {\cf18 string} result = {\cf22 ""};\par
00136             {\cf19 if} (format == 1 && !(this.NoteType.Equals({\cf22 "THO"})))\par
00137             \{\par
00138                 result = this.NoteType + {\cf22 "\\t"} + this.Bar + {\cf22 "\\t"} + this.Tick + {\cf22 "\\t"} + this.Key + {\cf22 "\\t"} + this.LastLength;\par
00139             \}\par
00140             {\cf19 else} {\cf19 if} (format == 1 && this.NoteType.Equals({\cf22 "THO"}))\par
00141             \{\par
00142                 result = this.NoteType + {\cf22 "\\t"} + this.Bar + {\cf22 "\\t"} + this.Tick + {\cf22 "\\t"} + this.Key.ToCharArray()[0] + {\cf22 "\\t"} + this.LastLength + {\cf22 "\\t"} + this.Key.ToCharArray()[1] + {\cf22 "\\t"} + this.SpecialEffect + {\cf22 "\\tM1"}; {\cf20 //M1 for regular note and L1 for Larger Note}\par
00143             \}\par
00144             {\cf19 else} {\cf19 if} (format == 0)\par
00145             \{\par
00146                 {\cf19 switch} (this.NoteType)\par
00147                 \{\par
00148                     {\cf19 case} {\cf22 "HLD"}:\par
00149                         result += (Convert.ToInt32(this.Key) + 1) + {\cf22 "h"};\par
00150                         {\cf19 break};\par
00151                     {\cf19 case} {\cf22 "XHO"}:\par
00152                         result += (Convert.ToInt32(this.Key) + 1) + {\cf22 "xh"};\par
00153                         {\cf19 break};\par
00154                     {\cf19 case} {\cf22 "THO"}:\par
00155                         {\cf19 if} (this.SpecialEffect == 1)\par
00156                         \{\par
00157                             result += this.Key.ToCharArray()[1].ToString() + (Convert.ToInt32(this.Key.Substring(0, 1)) + 1).ToString() + {\cf22 "hf"};\par
00158                         \}\par
00159                         {\cf19 else}\par
00160                             result += this.Key.ToCharArray()[1].ToString() + (Convert.ToInt32(this.Key.Substring(0, 1)) + 1).ToString() + {\cf22 "xh"};\par
00161                         {\cf19 break};\par
00162                 \}\par
00163                 {\cf19 if} (this.TickBPMDisagree || this.Delayed)\par
00164                 \{\par
00165                     result += GenerateAppropriateLength(this.FixedLastLength);\par
00166                 \}\par
00167                 {\cf19 else}\par
00168                 \{\par
00169                     result += GenerateAppropriateLength(this.LastLength);\par
00170                 \}\par
00171             \}\par
00172             {\cf19 return} result;\par
00173         \}\par
00174 \par
00175         {\cf17 public} {\cf17 override} {\cf18 string} NoteGenre => {\cf22 "HOLD"};\par
00176 \par
00177         {\cf17 public} {\cf17 override} {\cf18 bool} IsNote => {\cf17 true};\par
00178 \par
00179         {\cf17 public} {\cf17 override} {\cf18 string} NoteSpecificGenre\par
00180         \{\par
00181             {\cf17 get}\par
00182             \{\par
00183                 {\cf18 string} result = {\cf22 "HOLD"};\par
00184                 {\cf19 return} result;\par
00185             \}\par
00186         \}\par
00187 \par
00188         {\cf17 public} {\cf17 override} Note NewInstance()\par
00189         \{\par
00190             Note result = {\cf17 new} Hold({\cf17 this});\par
00191             {\cf19 return} result;\par
00192         \}\par
00193     \}\par
00194 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/IChart.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/IChart.cs}
{\xe \v Neskol/MaiLib/IChart.cs}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b MaiLib.IChart}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for charts. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IChart.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/IChart.cs}
{\xe \v Neskol/MaiLib/IChart.cs}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 interface }IChart\par
00007     \{\par
00011         {\cf18 void} Update();\par
00012 \par
00017         {\cf18 bool} CheckValidity();\par
00018 \par
00023         {\cf18 string} Compose();\par
00024 \par
00029         {\cf18 void} ShiftByOffset({\cf18 int} overallTick);\par
00030 \par
00036         {\cf18 void} ShiftByOffset({\cf18 int} bar, {\cf18 int} tick);\par
00037 \par
00042         {\cf18 void} RotateNotes({\cf18 string} method);\par
00043 \par
00049         {\cf18 double} GetTimeStamp({\cf18 int} bar, {\cf18 int} tick);\par
00050     \}\par
00051 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/ICompiler.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/ICompiler.cs}
{\xe \v Neskol/MaiLib/ICompiler.cs}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b MaiLib.ICompiler}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for Compilers. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ICompiler.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/ICompiler.cs}
{\xe \v Neskol/MaiLib/ICompiler.cs}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 public} {\cf17 interface }ICompiler\par
00007     \{\par
00012         {\cf17 public} {\cf18 void} TakeInformation(Dictionary<string, string> information);\par
00013 \par
00018         {\cf17 public} {\cf18 string} Compose();\par
00019 \par
00024         {\cf17 public} {\cf18 bool} CheckValidity();\par
00025     \}\par
00026 \}\par
00027 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/INote.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/INote.cs}
{\xe \v Neskol/MaiLib/INote.cs}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b MaiLib.INote}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface and basic functions for Notes. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
INote.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/INote.cs}
{\xe \v Neskol/MaiLib/INote.cs}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 interface }INote\par
00007     \{\par
00012         {\cf18 string} Compose({\cf18 int} format);\par
00013 \par
00018         {\cf18 bool} CheckValidity();\par
00019 \par
00024         {\cf18 bool} Update();\par
00025 \par
00030         {\cf18 void} Flip({\cf18 string} method);\par
00031 \par
00037         {\cf18 double} GetTimeStamp({\cf18 int} overallTick);\par
00038     \}\par
00039 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/IParser.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/IParser.cs}
{\xe \v Neskol/MaiLib/IParser.cs}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b MaiLib.IParser}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide interface for parsers. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IParser.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/IParser.cs}
{\xe \v Neskol/MaiLib/IParser.cs}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Reflection.Emit;\par
00002 \par
00003 {\cf17 namespace }MaiLib\par
00004 \{\par
00008     {\cf17 public} {\cf17 interface }IParser\par
00009     \{\par
00015         {\cf17 public} Chart ChartOfToken({\cf18 string}[] token);\par
00016 \par
00022         {\cf17 public} BPMChanges BPMChangesOfToken({\cf18 string} token);\par
00023 \par
00029         {\cf17 public} MeasureChanges MeasureChangesOfToken({\cf18 string} token);\par
00030 \par
00036         {\cf17 public} Note NoteOfToken({\cf18 string} token);\par
00037 \par
00046         {\cf17 public} Note NoteOfToken({\cf18 string} token,{\cf18 int} bar, {\cf18 int} tick, {\cf18 double} bpm);\par
00047 \par
00056         {\cf17 public} Tap TapOfToken({\cf18 string} token,{\cf18 int} bar, {\cf18 int} tick, {\cf18 double} bpm);\par
00057 \par
00063         {\cf17 public} Tap TapOfToken({\cf18 string} token);\par
00064 \par
00065 \par
00074         {\cf17 public} Hold HoldOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick,{\cf18 double} bpm);\par
00075 \par
00081         {\cf17 public} Hold HoldOfToken({\cf18 string} token);\par
00082 \par
00083 \par
00093         {\cf17 public} Slide SlideOfToken({\cf18 string} token,{\cf18 int} bar, {\cf18 int} tick, Note slideStart, {\cf18 double} bpm);\par
00094 \par
00100         {\cf17 public} Slide SlideOfToken({\cf18 string} token);\par
00101 \par
00102     \}\par
00103 \}\par
00104 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/ITokenizer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/ITokenizer.cs}
{\xe \v Neskol/MaiLib/ITokenizer.cs}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b MaiLib.ITokenizer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intake files and tokenize. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ITokenizer.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/ITokenizer.cs}
{\xe \v Neskol/MaiLib/ITokenizer.cs}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 partial interface }ITokenizer\par
00007     \{\par
00013         {\cf18 string}[] Tokens({\cf18 string} location);\par
00014 \par
00020         {\cf18 string}[] TokensFromText({\cf18 string} text);\par
00021     \}\par
00022 \}\par
00023 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/IXmlUtility.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/IXmlUtility.cs}
{\xe \v Neskol/MaiLib/IXmlUtility.cs}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b MaiLib.IXmlUtility}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide handful methods for Xml. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IXmlUtility.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/IXmlUtility.cs}
{\xe \v Neskol/MaiLib/IXmlUtility.cs}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Xml;\par
00002 \par
00003 {\cf17 namespace }MaiLib\par
00004 \{\par
00008     {\cf17 internal} {\cf17 interface }IXmlUtility\par
00009     \{\par
00014         {\cf20 //public void Load(string location);}\par
00015 \par
00020         {\cf17 public} {\cf18 void} Save({\cf18 string} location);\par
00021 \par
00027         {\cf17 public} XmlNodeList GetMatchNodes({\cf18 string} name);\par
00028 \par
00032         {\cf17 public} {\cf18 void} Update();\par
00033     \}\par
00034 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Ma2.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Ma2.cs}
{\xe \v Neskol/MaiLib/Ma2.cs}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Ma2}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of chart in ma2 format. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ma2.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Ma2.cs}
{\xe \v Neskol/MaiLib/Ma2.cs}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Linq.Expressions;\par
00002 \par
00003 {\cf17 namespace }MaiLib\par
00004 \{\par
00008     {\cf17 public} {\cf17 class }Ma2 : Chart, ICompiler\par
00009     \{\par
00013         {\cf17 public} Ma2()\par
00014         \{\par
00015             this.Notes = {\cf17 new} List<Note>();\par
00016             this.BPMChanges = {\cf17 new} BPMChanges();\par
00017             this.MeasureChanges = {\cf17 new} MeasureChanges();\par
00018             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00019             this.Information = {\cf17 new} Dictionary<string, string>();\par
00020         \}\par
00021 \par
00028         {\cf17 public} Ma2(List<Note> notes, BPMChanges bpmChanges, MeasureChanges measureChanges)\par
00029         \{\par
00030             this.Notes = {\cf17 new} List<Note>(notes);\par
00031             this.BPMChanges = {\cf17 new} BPMChanges(bpmChanges);\par
00032             this.MeasureChanges = {\cf17 new} MeasureChanges(measureChanges);\par
00033             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00034             this.Information = {\cf17 new} Dictionary<string, string>();\par
00035             this.Update();\par
00036         \}\par
00037 \par
00042         {\cf17 public} Ma2({\cf18 string} location)\par
00043         \{\par
00044             {\cf18 string}[] tokens = {\cf17 new} Ma2Tokenizer().Tokens(location);\par
00045             Chart takenIn = {\cf17 new} Ma2Parser().ChartOfToken(tokens);\par
00046             this.Notes = {\cf17 new} List<Note>(takenIn.Notes);\par
00047             this.BPMChanges = {\cf17 new} BPMChanges(takenIn.BPMChanges);\par
00048             this.MeasureChanges = {\cf17 new} MeasureChanges(takenIn.MeasureChanges);\par
00049             this.StoredChart = {\cf17 new} List<List<Note>>(takenIn.StoredChart);\par
00050             this.Information = {\cf17 new} Dictionary<string, string>(takenIn.Information);\par
00051             this.Update();\par
00052         \}\par
00053 \par
00058         {\cf17 public} Ma2({\cf18 string}[] tokens)\par
00059         \{\par
00060             Chart takenIn = {\cf17 new} Ma2Parser().ChartOfToken(tokens);\par
00061             this.Notes = takenIn.Notes;\par
00062             this.BPMChanges = takenIn.BPMChanges;\par
00063             this.MeasureChanges = takenIn.MeasureChanges;\par
00064             this.StoredChart = {\cf17 new} List<List<Note>>(takenIn.StoredChart);\par
00065             this.Information = {\cf17 new} Dictionary<string, string>(takenIn.Information);\par
00066             this.Update();\par
00067         \}\par
00068 \par
00073         {\cf17 public} Ma2(Chart takenIn)\par
00074         \{\par
00075             this.Notes = {\cf17 new} List<Note>(takenIn.Notes);\par
00076             this.BPMChanges = {\cf17 new} BPMChanges(takenIn.BPMChanges);\par
00077             this.MeasureChanges = {\cf17 new} MeasureChanges(takenIn.MeasureChanges);\par
00078             this.StoredChart = {\cf17 new} List<List<Note>>(takenIn.StoredChart);\par
00079             this.Information = {\cf17 new} Dictionary<string, string>(takenIn.Information);\par
00080             this.Update();\par
00081         \}\par
00082 \par
00083         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00084         \{\par
00085             {\cf18 bool} result = {\cf17 this} == {\cf17 null};\par
00086             {\cf20 // Not yet implemented}\par
00087             {\cf19 return} result;\par
00088         \}\par
00089 \par
00090         {\cf17 public} {\cf17 override} {\cf18 string} Compose()\par
00091         \{\par
00092             {\cf18 string} result = {\cf22 ""};\par
00093             {\cf17 const} {\cf18 string} header1 = {\cf22 "VERSION\\t0.00.00\\t1.03.00\\nFES_MODE\\t0\\n"};\par
00094             {\cf17 const} {\cf18 string} header2 = {\cf22 "RESOLUTION\\t384\\nCLK_DEF\\t384\\nCOMPATIBLE_CODE\\tMA2\\n"};\par
00095             result += header1;\par
00096             result += BPMChanges.InitialChange;\par
00097             result += MeasureChanges.InitialChange;\par
00098             result += header2;\par
00099             result += {\cf22 "\\n"};\par
00100 \par
00101             result += BPMChanges.Compose();\par
00102             result += MeasureChanges.Compose();\par
00103             result += {\cf22 "\\n"};\par
00104 \par
00105             {\cf20 //foreach (Note x in this.Notes)}\par
00106             {\cf20 //\{}\par
00107             {\cf20 //    if (!x.Compose(1).Equals(""))}\par
00108             {\cf20 //    \{}\par
00109             {\cf20 //        result += x.Compose(1) + "\\n";}\par
00110             {\cf20 //    \}}\par
00111             {\cf20 //\}}\par
00112             {\cf19 foreach} (List<Note> bar {\cf19 in} this.StoredChart)\par
00113             \{\par
00114                 {\cf19 foreach} (Note x {\cf19 in} bar)\par
00115                 \{\par
00116                     {\cf19 if} (!x.Compose(1).Equals({\cf22 ""}))\par
00117                     \{\par
00118                         result += x.Compose(1) + {\cf22 "\\n"};\par
00119                     \}\par
00120                 \}\par
00121             \}\par
00122             result += {\cf22 "\\n"};\par
00123             {\cf19 return} result;\par
00124         \}\par
00125 \par
00132         {\cf17 public} {\cf17 override} {\cf18 string} Compose(BPMChanges bpm, MeasureChanges measure)\par
00133         \{\par
00134             {\cf18 string} result = {\cf22 ""};\par
00135             {\cf17 const} {\cf18 string} header1 = {\cf22 "VERSION\\t0.00.00\\t1.03.00\\nFES_MODE\\t0\\n"};\par
00136             {\cf17 const} {\cf18 string} header2 = {\cf22 "RESOLUTION\\t384\\nCLK_DEF\\t384\\nCOMPATIBLE_CODE\\tMA2\\n"};\par
00137             result += header1;\par
00138             result += bpm.InitialChange;\par
00139             result += measure.InitialChange;\par
00140             result += header2;\par
00141             result += {\cf22 "\\n"};\par
00142 \par
00143             result += bpm.Compose();\par
00144             result += measure.Compose();\par
00145             result += {\cf22 "\\n"};\par
00146 \par
00147             {\cf19 foreach} (Note y {\cf19 in} this.Notes)\par
00148             \{\par
00149                 result += y.Compose(1) + {\cf22 "\\n"};\par
00150             \}\par
00151             result += {\cf22 "\\n"};\par
00152             {\cf19 return} result;\par
00153         \}\par
00154     \}\par
00155 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Ma2parser.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Ma2parser.cs}
{\xe \v Neskol/MaiLib/Ma2parser.cs}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Ma2Parser}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses ma2 file into Ma2 chart format. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MaiLib.StdParam} \{ {\b MaiLib.Type}
, {\b MaiLib.Bar}
, {\b MaiLib.Tick}
, {\b MaiLib.KeyOrParam}
, {\b MaiLib.WaitTimeOrParam}
, {\b MaiLib.LastTime}
, {\b MaiLib.EndKey}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give enums of parameters of Standard Keys. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MaiLib.DxParam} \{ {\b MaiLib.Type}
, {\b MaiLib.Bar}
, {\b MaiLib.Tick}
, {\b MaiLib.Key}
, {\b MaiLib.KeyGroupOrLastTime}
, {\b MaiLib.SpecialEffect}
, {\b MaiLib.NoteSize}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Give enums of parameters of Deluxe Keys. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ma2parser.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Ma2parser.cs}
{\xe \v Neskol/MaiLib/Ma2parser.cs}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Runtime.CompilerServices;\par
00002 \par
00003 {\cf17 namespace }MaiLib\par
00004 \{\par
00008     {\cf17 public} {\cf17 enum} StdParam \{ Type, Bar, Tick, KeyOrParam, WaitTimeOrParam, LastTime, EndKey \};\par
00012     {\cf17 public} {\cf17 enum} DxParam \{ Type, Bar, Tick, Key, KeyGroupOrLastTime, SpecialEffect, NoteSize \};\par
00016     {\cf17 public} {\cf17 class }Ma2Parser : IParser\par
00017     \{\par
00018         {\cf17 private} Tap PreviousSlideStart;\par
00022         {\cf17 public} Ma2Parser()\par
00023         \{\par
00024             PreviousSlideStart = {\cf17 new} Tap();\par
00025         \}\par
00026 \par
00027         {\cf17 public} Chart ChartOfToken({\cf18 string}[] token)\par
00028         \{\par
00029             BPMChanges bpmChanges = {\cf17 new} BPMChanges();\par
00030             MeasureChanges measureChanges = {\cf17 new} MeasureChanges();\par
00031             List<Note> notes = {\cf17 new} List<Note>();\par
00032             {\cf19 if} (token != {\cf17 null})\par
00033             \{\par
00034                 {\cf19 foreach} ({\cf18 string} x {\cf19 in} token)\par
00035                 \{\par
00036                     {\cf18 bool} isBPM_DEF = x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "BPM_DEF"});\par
00037                     {\cf18 bool} isMET_DEF = x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "MET_DEF"});\par
00038                     {\cf18 bool} isBPM = x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "BPM"});\par
00039                     {\cf18 bool} isMET = x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "MET"});\par
00040                     {\cf18 bool} isNOTE = x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "TAP"})\par
00041                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "STR"})\par
00042                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "TTP"})\par
00043                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XTP"})\par
00044                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XST"})\par
00045                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "BRK"})\par
00046                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "BST"})\par
00047                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "HLD"})\par
00048                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XHO"})\par
00049                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "THO"})\par
00050                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SI_"})\par
00051                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SV_"})\par
00052                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SF_"})\par
00053                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SCL"})\par
00054                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SCR"})\par
00055                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SUL"})\par
00056                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SUR"})\par
00057                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SLL"})\par
00058                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SLR"})\par
00059                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SXL"})\par
00060                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SXR"})\par
00061                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SSL"})\par
00062                         || x.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SSR"});\par
00063 \par
00064                     {\cf19 if} (isBPM_DEF)\par
00065                     \{\par
00066                         bpmChanges = BPMChangesOfToken(x);\par
00067                     \}\par
00068                     {\cf19 else} {\cf19 if} (isMET_DEF)\par
00069                     \{\par
00070                         measureChanges = MeasureChangesOfToken(x);\par
00071                     \}\par
00072                     {\cf19 else} {\cf19 if} (isBPM)\par
00073                     \{\par
00074                         {\cf18 string}[] bpmCandidate = x.Split({\cf23 '\\t'});\par
00075                         BPMChange candidate = {\cf17 new} BPMChange(Int32.Parse(bpmCandidate[1]),\par
00076                             Int32.Parse(bpmCandidate[2]),\par
00077                             Double.Parse(bpmCandidate[3]));\par
00078                         {\cf20 // foreach (BPMChange change in bpmChanges.ChangeNotes)}\par
00079                         {\cf20 // \{}\par
00080                         {\cf20 //     if (change.TickStamp <= candidate.LastTickStamp)}\par
00081                         {\cf20 //     \{}\par
00082                         {\cf20 //         candidate.BPMChangeNotes.Add(change);}\par
00083                         {\cf20 //         Console.WriteLine("A BPM change note was added with overall tick of "+change.TickStamp + " with bpm of "+change.BPM);}\par
00084                         {\cf20 //     \}}\par
00085                         {\cf20 // \}}\par
00086                         bpmChanges.Add(candidate);\par
00087                         bpmChanges.Update();\par
00088                     \}\par
00089                     {\cf19 else} {\cf19 if} (isMET)\par
00090                     \{\par
00091                         {\cf18 string}[] measureCandidate = x.Split({\cf23 '\\t'});\par
00092                         measureChanges.Add(Int32.Parse(measureCandidate[({\cf18 int})StdParam.Bar]),\par
00093                             Int32.Parse(measureCandidate[({\cf18 int})StdParam.Tick]),\par
00094                             Int32.Parse(measureCandidate[({\cf18 int})StdParam.KeyOrParam]),\par
00095                             Int32.Parse(measureCandidate[({\cf18 int})StdParam.WaitTimeOrParam]));\par
00096                     \}\par
00097                     {\cf19 else} {\cf19 if} (isNOTE)\par
00098                     \{\par
00099                         Note candidate = NoteOfToken(x);\par
00100                         {\cf20 // foreach (BPMChange change in bpmChanges.ChangeNotes)}\par
00101                         {\cf20 // \{}\par
00102                         {\cf20 //     if (change.TickStamp <= candidate.LastTickStamp)}\par
00103                         {\cf20 //     \{}\par
00104                         {\cf20 //         candidate.BPMChangeNotes.Add(change);}\par
00105                         {\cf20 //         Console.WriteLine("A BPM change note was added with overall tick of " + change.TickStamp + " with bpm of " + change.BPM);}\par
00106                         {\cf20 //     \}}\par
00107                         {\cf20 // \}}\par
00108                         notes.Add(candidate);\par
00109                     \}\par
00110                 \}\par
00111             \}\par
00112             {\cf19 foreach} (Note note {\cf19 in} notes)\par
00113             \{\par
00114                 note.BPMChangeNotes = bpmChanges.ChangeNotes;\par
00115                 {\cf19 if} (bpmChanges.ChangeNotes.Count > 0 && note.BPMChangeNotes.Count == 0)\par
00116                 \{\par
00117                     {\cf19 throw} {\cf17 new} IndexOutOfRangeException({\cf22 "BPM COUNT DISAGREE"});\par
00118                 \}\par
00119                 {\cf19 if} (bpmChanges.ChangeNotes.Count == 0)\par
00120                 \{\par
00121                     {\cf19 throw} {\cf17 new} IndexOutOfRangeException({\cf22 "BPM CHANGE COUNT DISAGREE"});\par
00122                 \}\par
00123             \}\par
00124             Chart result = {\cf17 new} Ma2(notes, bpmChanges, measureChanges);\par
00125             {\cf19 return} result;\par
00126         \}\par
00127 \par
00128         {\cf17 public} BPMChanges BPMChangesOfToken({\cf18 string} token)\par
00129         \{\par
00130             {\cf19 return} {\cf17 new} BPMChanges();\par
00131         \}\par
00132 \par
00133         {\cf17 public} MeasureChanges MeasureChangesOfToken({\cf18 string} token)\par
00134         \{\par
00135             {\cf19 return} {\cf17 new} MeasureChanges(Int32.Parse(token.Split({\cf23 '\\t'})[1]), Int32.Parse(token.Split({\cf23 '\\t'})[2]));\par
00136         \}\par
00137 \par
00138         {\cf17 public} Note NoteOfToken({\cf18 string} token)\par
00139         \{\par
00140             Note result = {\cf17 new} Rest();\par
00141             {\cf18 bool} isTap = token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "TAP"})\par
00142                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "STR"})\par
00143                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "TTP"})\par
00144                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XTP"})\par
00145                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XST"})\par
00146                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "BRK"})\par
00147                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "BST"});\par
00148             {\cf18 bool} isHold = token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "HLD"})\par
00149                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XHO"})\par
00150                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "THO"});\par
00151             {\cf18 bool} isSlide = token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SI_"})\par
00152                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SV_"})\par
00153                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SF_"})\par
00154                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SCL"})\par
00155                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SCR"})\par
00156                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SUL"})\par
00157                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SUR"})\par
00158                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SLL"})\par
00159                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SLR"})\par
00160                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SXL"})\par
00161                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SXR"})\par
00162                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SSL"})\par
00163                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SSR"});\par
00164             {\cf18 string}[] candidate = token.Split({\cf23 '\\t'});\par
00165             {\cf18 int} bar = Int32.Parse(candidate[({\cf18 int})StdParam.Bar]);\par
00166             {\cf18 int} tick = Int32.Parse(candidate[({\cf18 int})StdParam.Tick]);\par
00167             {\cf19 if} (isTap)\par
00168             \{\par
00169                 result = TapOfToken(token);\par
00170                 {\cf19 if} (result.NoteSpecificGenre.Equals({\cf22 "SLIDE_START"}))\par
00171                 \{\par
00172                     PreviousSlideStart = (Tap)result;\par
00173                 \}\par
00174             \}\par
00175             {\cf19 else} {\cf19 if} (isHold)\par
00176             \{\par
00177                 result = HoldOfToken(token);\par
00178             \}\par
00179             {\cf19 else} {\cf19 if} (isSlide)\par
00180             \{\par
00181                 result = SlideOfToken(token);\par
00182                 {\cf20 // result.SlideStart = PreviousSlideStart;}\par
00183             \}\par
00184             {\cf19 if} (result.Tick == 384)\par
00185             \{\par
00186                 result.Tick = 0;\par
00187                 result.Bar++;\par
00188             \}\par
00189             {\cf19 return} result;\par
00190         \}\par
00191 \par
00192         {\cf17 public} Note NoteOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick, {\cf18 double} bpm)\par
00193         \{\par
00194             Note result = {\cf17 new} Rest();\par
00195             {\cf18 bool} isTap = token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "TAP"})\par
00196                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "STR"})\par
00197                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "TTP"})\par
00198                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XTP"})\par
00199                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XST"})\par
00200                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "BRK"})\par
00201                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "BST"});\par
00202             {\cf18 bool} isHold = token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "HLD"})\par
00203                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "XHO"})\par
00204                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "THO"});\par
00205             {\cf18 bool} isSlide = token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SI_"})\par
00206                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SV_"})\par
00207                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SF_"})\par
00208                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SCL"})\par
00209                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SCR"})\par
00210                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SUL"})\par
00211                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SUR"})\par
00212                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SLL"})\par
00213                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SLR"})\par
00214                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SXL"})\par
00215                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SXR"})\par
00216                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SSL"})\par
00217                 || token.Split({\cf23 '\\t'})[(int)StdParam.Type].Equals({\cf22 "SSR"});\par
00218             {\cf18 string}[] candidate = token.Split({\cf23 '\\t'});\par
00219             {\cf19 foreach} ({\cf18 string} x {\cf19 in} candidate)\par
00220             \{\par
00221                 {\cf19 if} (isTap)\par
00222                 \{\par
00223                     result = TapOfToken(token, bar, tick, bpm);\par
00224                 \}\par
00225                 {\cf19 else} {\cf19 if} (isHold)\par
00226                 \{\par
00227                     result = HoldOfToken(token, bar, tick, bpm);\par
00228                 \}\par
00229                 {\cf19 else} {\cf19 if} (isSlide)\par
00230                 \{\par
00231                     result = SlideOfToken(token, bar, tick, PreviousSlideStart, bpm);\par
00232                 \}\par
00233             \}\par
00234             {\cf19 if} (result.Tick == 384)\par
00235             \{\par
00236                 result.Tick = 0;\par
00237                 result.Bar++;\par
00238             \}\par
00239             {\cf19 return} result;\par
00240         \}\par
00241 \par
00242         {\cf17 public} Hold HoldOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick, {\cf18 double} bpm)\par
00243         \{\par
00244             Note result = {\cf17 new} Rest();\par
00245             {\cf18 string}[] candidate = token.Split({\cf23 '\\t'});\par
00246             {\cf19 if} (candidate[({\cf18 int})StdParam.Type].Equals({\cf22 "THO"}) && candidate.Count() > 7)\par
00247             \{\par
00248                 result = {\cf17 new} Hold(candidate[({\cf18 int})StdParam.Type],\par
00249                 bar,\par
00250                 tick,\par
00251                 candidate[({\cf18 int})StdParam.KeyOrParam] + candidate[({\cf18 int})StdParam.LastTime], {\cf18 int}.Parse(candidate[({\cf18 int})DxParam.SpecialEffect]),\par
00252                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.EndKey]),\par
00253                 candidate[7]); {\cf20 //candidate[(int)StdParam.EndKey] is special effect}\par
00254             \}\par
00255             {\cf19 else} {\cf19 if} (candidate[({\cf18 int})StdParam.Type].Equals({\cf22 "THO"}) && candidate.Count() <= 7)\par
00256             \{\par
00257                 {\cf20 //Console.ReadLine();}\par
00258                 result = {\cf17 new} Hold(candidate[({\cf18 int})StdParam.Type],\par
00259                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]),\par
00260                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]),\par
00261                 candidate[({\cf18 int})StdParam.KeyOrParam] + candidate[({\cf18 int})StdParam.LastTime], {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.WaitTimeOrParam]),\par
00262                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.EndKey]),\par
00263                 {\cf22 "M1"}); {\cf20 //candidate[(int)StdParam.EndKey] is special effect}\par
00264             \}\par
00265             {\cf19 else}\par
00266                 result = {\cf17 new} Hold(candidate[({\cf18 int})StdParam.Type],\par
00267                             {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]),\par
00268                             {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]),\par
00269                             candidate[({\cf18 int})StdParam.KeyOrParam],\par
00270                             {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.WaitTimeOrParam]));\par
00271             result.BPM = bpm;\par
00272             {\cf19 return} (Hold)result;\par
00273         \}\par
00274 \par
00275         {\cf17 public} Hold HoldOfToken({\cf18 string} token)\par
00276         \{\par
00277             {\cf18 string}[] candidate = token.Split({\cf23 '\\t'});\par
00278             {\cf18 int} bar = {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]);\par
00279             {\cf18 int} tick = {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]);\par
00280             {\cf19 if} (candidate[({\cf18 int})StdParam.Type].Equals({\cf22 "THO"}) && candidate.Count() > 7)\par
00281             \{\par
00282                 {\cf19 return} {\cf17 new} Hold(candidate[({\cf18 int})StdParam.Type],\par
00283                 bar,\par
00284                 tick,\par
00285                 candidate[({\cf18 int})StdParam.KeyOrParam] + candidate[({\cf18 int})StdParam.LastTime], {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.WaitTimeOrParam]),\par
00286                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.EndKey]),\par
00287                 candidate[7]); {\cf20 //candidate[(int)StdParam.EndKey] is special effect}\par
00288             \}\par
00289             {\cf19 else} {\cf19 if} (candidate[({\cf18 int})StdParam.Type].Equals({\cf22 "THO"}) && candidate.Count() <= 7)\par
00290             \{\par
00291                 {\cf20 //Console.ReadLine();}\par
00292                 {\cf19 return} {\cf17 new} Hold(candidate[({\cf18 int})StdParam.Type],\par
00293                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]),\par
00294                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]),\par
00295                 candidate[({\cf18 int})StdParam.KeyOrParam] + candidate[({\cf18 int})StdParam.LastTime], {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.WaitTimeOrParam]),\par
00296                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.EndKey]),\par
00297                 {\cf22 "M1"}); {\cf20 //candidate[(int)StdParam.EndKey] is special effect}\par
00298             \}\par
00299             {\cf19 else}\par
00300                 {\cf19 return} {\cf17 new} Hold(candidate[({\cf18 int})StdParam.Type],\par
00301                             {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]),\par
00302                             {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]),\par
00303                             candidate[({\cf18 int})StdParam.KeyOrParam],\par
00304                             {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.WaitTimeOrParam]));\par
00305         \}\par
00306 \par
00307         {\cf17 public} Slide SlideOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick, Note slideStart, {\cf18 double} bpm)\par
00308         \{\par
00309             {\cf18 string}[] candidate = token.Split({\cf23 '\\t'});\par
00310             Note localSlideStart = {\cf17 new} Slide(slideStart);\par
00311             {\cf19 if} (!localSlideStart.Key.Equals(candidate[({\cf18 int})StdParam.KeyOrParam]) || localSlideStart.Bar != bar || localSlideStart.Tick != tick)\par
00312             \{\par
00313                 {\cf20 //Console.WriteLine("Expected key: " + candidate[(int)StdParam.KeyOrParam]);}\par
00314                 {\cf20 //Console.WriteLine("Actual key: " + PreviousSlideStart.Key);}\par
00315                 {\cf20 //Console.WriteLine("Previous Slide Start: " + PreviousSlideStart.Compose((int)StdParam.Bar));}\par
00316                 {\cf20 //throw new Exception("THE SLIDE START DOES NOT MATCH WITH THE DEFINITION OF THIS NOTE!");}\par
00317                 localSlideStart = {\cf17 new} Tap({\cf22 "NST"}, bar, tick, candidate[({\cf18 int})StdParam.KeyOrParam]);\par
00318             \}\par
00319             Slide result = {\cf17 new} Slide(candidate[({\cf18 int})StdParam.Type],\par
00320                         bar,\par
00321                         tick,\par
00322                         localSlideStart.Key,\par
00323                         {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.WaitTimeOrParam]),\par
00324                         {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.LastTime]),\par
00325                         candidate[({\cf18 int})StdParam.EndKey]);\par
00326             result.SlideStart = localSlideStart;\par
00327             localSlideStart.ConsecutiveSlide = result;\par
00328             slideStart = localSlideStart;\par
00329             {\cf19 return} result;\par
00330         \}\par
00331 \par
00332         {\cf17 public} Slide SlideOfToken({\cf18 string} token)\par
00333         \{\par
00334             {\cf18 string}[] candidate = token.Split({\cf23 '\\t'});\par
00335             {\cf18 int} bar = {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]);\par
00336             {\cf18 int} tick = {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]);\par
00337             {\cf19 if} (!PreviousSlideStart.Key.Equals(candidate[({\cf18 int})StdParam.KeyOrParam]) || PreviousSlideStart.Bar != bar || PreviousSlideStart.Tick != tick)\par
00338             \{\par
00339                 {\cf20 //Console.WriteLine("Expected key: " + candidate[(int)StdParam.KeyOrParam]);}\par
00340                 {\cf20 //Console.WriteLine("Actual key: " + PreviousSlideStart.Key);}\par
00341                 {\cf20 //Console.WriteLine("Previous Slide Start: " + PreviousSlideStart.Compose((int)StdParam.Bar));}\par
00342                 {\cf20 //throw new Exception("THE SLIDE START DOES NOT MATCH WITH THE DEFINITION OF THIS NOTE!");}\par
00343                 PreviousSlideStart = {\cf17 new} Tap({\cf22 "NST"}, bar, tick, candidate[({\cf18 int})StdParam.KeyOrParam]);\par
00344             \}\par
00345             Slide result = {\cf17 new} Slide(candidate[({\cf18 int})StdParam.Type],\par
00346                         bar,\par
00347                         tick,\par
00348                         PreviousSlideStart.Key,\par
00349                         {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.WaitTimeOrParam]),\par
00350                         {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.LastTime]),\par
00351                         candidate[({\cf18 int})StdParam.EndKey]);\par
00352             result.SlideStart = PreviousSlideStart;\par
00353             PreviousSlideStart.ConsecutiveSlide = result;\par
00354             {\cf19 return} result;\par
00355         \}\par
00356 \par
00357 \par
00358         {\cf17 public} Tap TapOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick, {\cf18 double} bpm)\par
00359         \{\par
00360             Note result = {\cf17 new} Rest();\par
00361             {\cf18 string}[] candidate = token.Split({\cf23 '\\t'});\par
00362             {\cf19 if} (candidate[({\cf18 int})StdParam.Type].Equals({\cf22 "TTP"}) && (candidate.Count()) >= 7)\par
00363             \{\par
00364                 result = {\cf17 new} Tap(candidate[({\cf18 int})StdParam.Type],\par
00365                 bar,\par
00366                 tick,\par
00367                 candidate[({\cf18 int})StdParam.KeyOrParam] + candidate[({\cf18 int})StdParam.WaitTimeOrParam],\par
00368                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.LastTime]),\par
00369                 candidate[({\cf18 int})StdParam.EndKey]);\par
00370             \}\par
00371             {\cf19 else} {\cf19 if} (candidate[({\cf18 int})StdParam.Type].Equals({\cf22 "TTP"}) && (candidate.Count()) < 7)\par
00372             \{\par
00373                 {\cf20 //Console.ReadLine();}\par
00374                 result = {\cf17 new} Tap(candidate[({\cf18 int})StdParam.Type],\par
00375                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]),\par
00376                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]),\par
00377                 candidate[({\cf18 int})StdParam.KeyOrParam] + candidate[({\cf18 int})StdParam.WaitTimeOrParam],\par
00378                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.LastTime]),\par
00379                 {\cf22 "M1"});\par
00380             \}\par
00381             {\cf19 else}\par
00382                 result = {\cf17 new} Tap(candidate[({\cf18 int})StdParam.Type],\par
00383                     {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]),\par
00384                     {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]),\par
00385                     candidate[({\cf18 int})StdParam.KeyOrParam]);\par
00386             result.BPM = bpm;\par
00387             {\cf19 return} (Tap)result;\par
00388         \}\par
00389 \par
00390         {\cf17 public} Tap TapOfToken({\cf18 string} token)\par
00391         \{\par
00392             {\cf18 string}[] candidate = token.Split({\cf23 '\\t'});\par
00393             {\cf18 int} bar = {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]);\par
00394             {\cf18 int} tick = {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]);\par
00395             {\cf19 if} (candidate[({\cf18 int})StdParam.Type].Equals({\cf22 "TTP"}) && (candidate.Count()) >= 7)\par
00396             \{\par
00397                 {\cf19 return} {\cf17 new} Tap(candidate[({\cf18 int})StdParam.Type],\par
00398                 bar,\par
00399                 tick,\par
00400                 candidate[({\cf18 int})StdParam.KeyOrParam] + candidate[({\cf18 int})StdParam.WaitTimeOrParam],\par
00401                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.LastTime]),\par
00402                 candidate[({\cf18 int})StdParam.EndKey]);\par
00403             \}\par
00404             {\cf19 else} {\cf19 if} (candidate[({\cf18 int})StdParam.Type].Equals({\cf22 "TTP"}) && (candidate.Count()) < 7)\par
00405             \{\par
00406                 {\cf20 //Console.ReadLine();}\par
00407                 {\cf19 return} {\cf17 new} Tap(candidate[({\cf18 int})StdParam.Type],\par
00408                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]),\par
00409                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]),\par
00410                 candidate[({\cf18 int})StdParam.KeyOrParam] + candidate[({\cf18 int})StdParam.WaitTimeOrParam],\par
00411                 {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.LastTime]),\par
00412                 {\cf22 "M1"});\par
00413             \}\par
00414             {\cf19 else}\par
00415                 {\cf19 return} {\cf17 new} Tap(candidate[({\cf18 int})StdParam.Type],\par
00416                     {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Bar]),\par
00417                     {\cf18 int}.Parse(candidate[({\cf18 int})StdParam.Tick]),\par
00418                     candidate[({\cf18 int})StdParam.KeyOrParam]);\par
00419         \}\par
00420     \}\par
00421 \par
00422 \}\par
00423 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Ma2Tokenizer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Ma2Tokenizer.cs}
{\xe \v Neskol/MaiLib/Ma2Tokenizer.cs}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Ma2Tokenizer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenizer of ma2 file. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ma2Tokenizer.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Ma2Tokenizer.cs}
{\xe \v Neskol/MaiLib/Ma2Tokenizer.cs}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }Ma2Tokenizer : ITokenizer\par
00007     \{\par
00011         {\cf17 public} Ma2Tokenizer()\par
00012         \{\par
00013         \}\par
00014 \par
00015         {\cf17 public} {\cf18 string}[] Tokens({\cf18 string} location)\par
00016         \{\par
00017             {\cf18 string}[] result = System.IO.File.ReadAllLines(location);\par
00018             {\cf19 return} result;\par
00019         \}\par
00020 \par
00021         {\cf17 public} {\cf18 string}[] TokensFromText({\cf18 string} text)\par
00022         \{\par
00023             {\cf18 string}[] result = text.Split({\cf22 "\\n"});\par
00024             {\cf19 return} result;\par
00025         \}\par
00026     \}\par
00027 \}\par
00028 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/MeasureChange.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/MeasureChange.cs}
{\xe \v Neskol/MaiLib/MeasureChange.cs}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.MeasureChange}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines measure change note that indicates a measure change in bar. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MeasureChange.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/MeasureChange.cs}
{\xe \v Neskol/MaiLib/MeasureChange.cs}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }MeasureChange : Note\par
00007     \{\par
00008         {\cf17 private} {\cf18 int} quaver;\par
00009 \par
00013         {\cf17 public} MeasureChange()\par
00014         \{\par
00015             this.Tick = 0;\par
00016             this.quaver = 0;\par
00017             this.Update();\par
00018         \}\par
00019 \par
00026         {\cf17 public} MeasureChange({\cf18 int} bar, {\cf18 int} tick, {\cf18 int} quaver)\par
00027         \{\par
00028             this.Bar = bar;\par
00029             this.Tick = tick;\par
00030             this.quaver = quaver;\par
00031             this.Update();\par
00032         \}\par
00033 \par
00038         {\cf17 public} MeasureChange(MeasureChange takeIn)\par
00039         \{\par
00040             this.Bar = takeIn.Bar;\par
00041             this.Tick = takeIn.Tick;\par
00042             this.quaver = takeIn.Quaver;\par
00043             this.Update();\par
00044         \}\par
00045 \par
00050         {\cf17 public} {\cf18 int} Quaver\par
00051         \{\par
00052             {\cf17 get} \{ {\cf19 return} this.quaver; \}\par
00053         \}\par
00054 \par
00055         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00056         \{\par
00057             {\cf19 return} this.quaver > 0;\par
00058         \}\par
00059 \par
00060         {\cf17 public} {\cf17 override} {\cf18 string} Compose({\cf18 int} format)\par
00061         \{\par
00062             {\cf18 string} result = {\cf22 ""};\par
00063             {\cf19 if} (format == 0)\par
00064             \{\par
00065                 result += {\cf22 "\{"} + this.Quaver + {\cf22 "\}"};\par
00066                 {\cf20 //result += "\{" + this.Quaver+"_"+this.Tick + "\}";}\par
00067             \}\par
00068             {\cf19 return} result;\par
00069         \}\par
00070 \par
00071         {\cf17 public} {\cf17 override} Note NewInstance()\par
00072         \{\par
00073             Note result = {\cf17 new} MeasureChange({\cf17 this});\par
00074             {\cf19 return} result;\par
00075         \}\par
00076 \par
00077         {\cf17 public} {\cf17 override} {\cf18 string} NoteGenre => {\cf22 "MEASURE"};\par
00078 \par
00079         {\cf17 public} {\cf17 override} {\cf18 bool} IsNote => {\cf17 false};\par
00080 \par
00081         {\cf17 public} {\cf17 override} {\cf18 string} NoteSpecificGenre => {\cf22 "MEASURE"};\par
00082     \}\par
00083 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/MeasureChanges.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/MeasureChanges.cs}
{\xe \v Neskol/MaiLib/MeasureChanges.cs}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.MeasureChanges}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store measure change notes in a chart. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MeasureChanges.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/MeasureChanges.cs}
{\xe \v Neskol/MaiLib/MeasureChanges.cs}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }MeasureChanges\par
00007     \{\par
00008         {\cf17 private} List<int> bar;\par
00009         {\cf17 private} List<int> tick;\par
00010         {\cf17 private} List<int> quavers;\par
00011         {\cf17 private} List<int> beats;\par
00012         {\cf17 private} List<MeasureChange> changeNotes;\par
00013         {\cf17 private} {\cf18 int} initialQuaver;\par
00014         {\cf17 private} {\cf18 int} initialBeat;\par
00015 \par
00019         {\cf17 public} MeasureChanges()\par
00020         \{\par
00021             bar = {\cf17 new} List<int>();\par
00022             tick = {\cf17 new} List<int>();\par
00023             quavers = {\cf17 new} List<int>();\par
00024             beats = {\cf17 new} List<int>();\par
00025             changeNotes = {\cf17 new} List<MeasureChange>();\par
00026         \}\par
00027 \par
00031         {\cf17 public} MeasureChanges(MeasureChanges takeIn)\par
00032         \{\par
00033             bar = {\cf17 new} List<int>(takeIn.Bar);\par
00034             tick = {\cf17 new} List<int>(takeIn.Tick);\par
00035             quavers = {\cf17 new} List<int>(takeIn.Quavers);\par
00036             beats = {\cf17 new} List<int>(takeIn.Beats);\par
00037             changeNotes = {\cf17 new} List<MeasureChange>(takeIn.ChangeNotes);\par
00038         \}\par
00039 \par
00045         {\cf17 public} MeasureChanges({\cf18 int} initialQuaver, {\cf18 int} initialBeat)\par
00046         \{\par
00047             bar = {\cf17 new} List<int>();\par
00048             tick = {\cf17 new} List<int>();\par
00049             quavers = {\cf17 new} List<int>();\par
00050             beats = {\cf17 new} List<int>();\par
00051             changeNotes = {\cf17 new} List<MeasureChange>();\par
00052             this.initialQuaver = initialQuaver;\par
00053             this.initialBeat = initialBeat;\par
00054         \}\par
00055 \par
00063         {\cf17 public} MeasureChanges(List<int> bar, List<int> tick, List<int> quavers, List<int> beats)\par
00064         \{\par
00065             this.bar = bar;\par
00066             this.tick = tick;\par
00067             this.quavers = quavers;\par
00068             this.initialQuaver = quavers[0];\par
00069             this.beats = beats;\par
00070             this.initialBeat = beats[0];\par
00071             changeNotes = {\cf17 new} List<MeasureChange>();\par
00072         \}\par
00073 \par
00077         {\cf17 public} List<int> Bar\par
00078         \{\par
00079             {\cf17 get} \{ {\cf19 return} bar; \}\par
00080         \}\par
00081 \par
00085         {\cf17 public} List<int> Tick\par
00086         \{\par
00087             {\cf17 get} \{ {\cf19 return} tick; \}\par
00088         \}\par
00089 \par
00093         {\cf17 public} List<int> Quavers\par
00094         \{\par
00095             {\cf17 get} \{ {\cf19 return} quavers; \}\par
00096         \}\par
00097 \par
00101         {\cf17 public} List<int> Beats\par
00102         \{\par
00103             {\cf17 get} \{ {\cf19 return} beats; \}\par
00104         \}\par
00105 \par
00106         {\cf17 public} List<MeasureChange> ChangeNotes\par
00107         \{\par
00108             {\cf17 get} \{ {\cf19 return} changeNotes; \}\par
00109         \}\par
00110 \par
00111         \par
00112 \par
00120         {\cf17 public} {\cf18 void} Add({\cf18 int} bar, {\cf18 int} tick, {\cf18 int} quavers, {\cf18 int} beats)\par
00121         \{\par
00122             this.bar.Add(bar);\par
00123             this.tick.Add(tick);\par
00124             this.quavers.Add(quavers);\par
00125             this.beats.Add(beats);\par
00126         \}\par
00127 \par
00131         {\cf17 public} {\cf18 string} InitialChange\par
00132         \{\par
00133             {\cf17 get}\par
00134             \{\par
00135                 {\cf19 return} {\cf22 "MET_DEF"} + {\cf22 "\\t"} + this.initialQuaver + {\cf22 "\\t"} + this.initialBeat + {\cf22 "\\n"};\par
00136             \}\par
00137         \}\par
00138 \par
00139         {\cf17 public} {\cf18 bool} CheckValidity()\par
00140         \{\par
00141             {\cf18 bool} result = bar.IndexOf(0) == 0;\par
00142             result = result && tick.IndexOf(0) == 0;\par
00143             result = result && !quavers[0].Equals({\cf17 null});\par
00144             result = result && !beats[0].Equals({\cf17 null});\par
00145             {\cf19 return} result;\par
00146         \}\par
00147 \par
00148         {\cf17 public} {\cf18 string} Compose()\par
00149         \{\par
00150             {\cf18 string} result = {\cf22 ""};\par
00151             {\cf19 if} (bar.Count == 0)\par
00152             \{\par
00153                 result += {\cf22 "MET"} + {\cf22 "\\t"} + 0 + {\cf22 "\\t"} + 0 + {\cf22 "\\t"} + 4 + {\cf22 "\\t"} + 4 + {\cf22 "\\n"};\par
00154             \}\par
00155             {\cf19 else}\par
00156             \{\par
00157                 {\cf19 for} ({\cf18 int} i = 0; i < bar.Count; i++)\par
00158                 \{\par
00159                     result += {\cf22 "MET"} + {\cf22 "\\t"} + bar[i] + {\cf22 "\\t"} + tick[i] + {\cf22 "\\t"} + quavers[i] + {\cf22 "\\t"} + beats[i] + {\cf22 "\\n"};\par
00160                 \}\par
00161             \}\par
00162             {\cf19 return} result;\par
00163         \}\par
00164 \par
00165         {\cf17 public} {\cf18 void} Update()\par
00166         \{\par
00167         \}\par
00168     \}\par
00169 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Note.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Note.cs}
{\xe \v Neskol/MaiLib/Note.cs}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Note}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Basic note. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Note.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Note.cs}
{\xe \v Neskol/MaiLib/Note.cs}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Numerics;\par
00002 {\cf17 using }System.Reflection;\par
00003 {\cf17 using }System.Reflection.Emit;\par
00004 {\cf17 using }System.Resources;\par
00005 \par
00006 {\cf17 namespace }MaiLib\par
00007 \{\par
00011     {\cf17 public} {\cf17 abstract} {\cf17 class }Note : IEquatable<Note>, INote, IComparable\par
00012     \{\par
00016         {\cf17 private} {\cf18 string} noteType;\par
00017 \par
00021         {\cf17 private} {\cf18 string} key;\par
00022 \par
00026         {\cf17 private} {\cf18 string} endKey;\par
00027 \par
00031         {\cf17 private} {\cf18 int} bar;\par
00032 \par
00036         {\cf17 private} {\cf18 int} tick;\par
00037 \par
00041         {\cf17 private} {\cf18 int} fixedTick;\par
00042 \par
00046         {\cf17 private} {\cf18 int} tickStamp;\par
00047 \par
00051         {\cf17 private} {\cf18 double} tickTimeStamp;\par
00052 \par
00056         {\cf17 private} {\cf18 int} waitLength;\par
00057 \par
00061         {\cf17 private} {\cf18 int} waitTickStamp;\par
00062 \par
00066         {\cf17 private} {\cf18 double} waitTimeStamp;\par
00067 \par
00071         {\cf17 private} {\cf18 double} calculatedWaitTime;\par
00072 \par
00076         {\cf17 private} {\cf18 int} lastLength;\par
00077 \par
00081         {\cf17 private} {\cf18 int} fixedLastLength;\par
00082 \par
00086         {\cf17 private} {\cf18 int} lastTickStamp;\par
00087 \par
00091         {\cf17 private} {\cf18 double} lastTimeStamp;\par
00092 \par
00096         {\cf17 private} {\cf18 double} calculatedLastTime;\par
00097 \par
00101         {\cf17 private} {\cf18 bool} tickBPMDisagree;\par
00102 \par
00106         {\cf17 private} {\cf18 bool} delayed;\par
00107 \par
00111         {\cf17 private} {\cf18 double} bpm;\par
00112 \par
00116         {\cf17 private} Note? prev;\par
00117 \par
00121         {\cf17 private} Note? next;\par
00122 \par
00126         {\cf17 private} Note? slideStart;\par
00127 \par
00131         {\cf17 private} Note? consecutiveSlide;\par
00132 \par
00136         {\cf17 private} List<BPMChange> bpmChangeNotes;\par
00137 \par
00141         {\cf17 public} Note()\par
00142         \{\par
00143             noteType = {\cf22 ""};\par
00144             key = {\cf22 ""};\par
00145             endKey = {\cf22 ""};\par
00146             bar = 0;\par
00147             tick = 0;\par
00148             fixedTick = 0;\par
00149             tickStamp = 0;\par
00150             tickTimeStamp = 0.0;\par
00151             lastLength = 0;\par
00152             lastTickStamp = 0;\par
00153             lastTimeStamp = 0.0;\par
00154             waitLength = 0;\par
00155             waitTickStamp = 0;\par
00156             waitTimeStamp = 0.0;\par
00157             calculatedLastTime = 0.0;\par
00158             calculatedWaitTime = 0.0;\par
00159             tickBPMDisagree = {\cf17 false};\par
00160             bpm = 0;\par
00161             bpmChangeNotes = {\cf17 new} List<BPMChange>();\par
00162         \}\par
00163 \par
00168         {\cf17 public} Note(Note inTake)\par
00169         \{\par
00170             this.noteType = inTake.NoteType;\par
00171             this.key = inTake.Key;\par
00172             this.endKey = inTake.EndKey;\par
00173             this.bar = inTake.Bar;\par
00174             this.tick = inTake.Tick;\par
00175             this.tickStamp = inTake.TickStamp;\par
00176             this.tickTimeStamp = inTake.TickTimeStamp;\par
00177             this.lastLength = inTake.LastLength;\par
00178             this.lastTickStamp = inTake.LastTickStamp;\par
00179             this.lastTimeStamp = inTake.LastTimeStamp;\par
00180             this.waitLength = inTake.WaitLength;\par
00181             this.waitTickStamp = inTake.WaitTickStamp;\par
00182             this.waitTimeStamp = inTake.WaitTimeStamp;\par
00183             this.calculatedLastTime = inTake.CalculatedLastTime;\par
00184             this.calculatedLastTime = inTake.CalculatedLastTime;\par
00185             this.tickBPMDisagree = inTake.TickBPMDisagree;\par
00186             this.bpm = inTake.BPM;\par
00187             this.bpmChangeNotes = inTake.bpmChangeNotes;\par
00188         \}\par
00189 \par
00193         {\cf17 public} {\cf18 string} NoteType\par
00194         \{\par
00195             {\cf17 get}\par
00196             \{\par
00197                 {\cf19 return} this.noteType;\par
00198             \}\par
00199             {\cf17 set}\par
00200             \{\par
00201                 this.noteType = value;\par
00202             \}\par
00203         \}\par
00204 \par
00208         {\cf17 public} {\cf18 string} Key\par
00209         \{\par
00210             {\cf17 get}\par
00211             \{\par
00212                 {\cf19 return} this.key;\par
00213             \}\par
00214             {\cf17 set}\par
00215             \{\par
00216                 this.key = value;\par
00217             \}\par
00218         \}\par
00219 \par
00224         {\cf17 public} {\cf18 int} KeyNum\par
00225         \{\par
00226             {\cf17 get} => {\cf18 int}.Parse(this.key.ToCharArray()[0].ToString());\par
00227         \}\par
00228 \par
00233         {\cf17 public} {\cf18 string} KeyGroup\par
00234         \{\par
00235             {\cf17 get}\par
00236             \{\par
00237                 {\cf18 string} result = {\cf22 ""};\par
00238                 {\cf19 if} (this.key.ToCharArray().Count() > 1)\par
00239                 \{\par
00240                     result = this.key.ToCharArray()[1].ToString();\par
00241                 \}\par
00242                 {\cf19 return} result;\par
00243             \}\par
00244         \}\par
00245 \par
00249         {\cf17 public} {\cf18 int} Bar\par
00250         \{\par
00251             {\cf17 get}\par
00252             \{\par
00253                 {\cf19 return} this.bar;\par
00254             \}\par
00255             {\cf17 set}\par
00256             \{\par
00257                 this.bar = value;\par
00258             \}\par
00259         \}\par
00260 \par
00264         {\cf17 public} {\cf18 int} Tick\par
00265         \{\par
00266             {\cf17 get}\par
00267             \{\par
00268                 {\cf19 return} this.tick;\par
00269             \}\par
00270             {\cf17 set}\par
00271             \{\par
00272                 this.tick = value;\par
00273             \}\par
00274         \}\par
00275 \par
00279         {\cf17 public} {\cf18 int} FixedTick\par
00280         \{\par
00281             {\cf17 get}\par
00282             \{\par
00283                 {\cf19 return} this.fixedTick;\par
00284             \}\par
00285             {\cf17 set}\par
00286             \{\par
00287                 this.fixedTick = value;\par
00288             \}\par
00289         \}\par
00290 \par
00294         {\cf17 public} {\cf18 int} TickStamp\par
00295         \{\par
00296             {\cf17 get}\par
00297             \{\par
00298                 this.tickStamp = this.tick + this.bar * 384;\par
00299                 {\cf19 return} this.tickStamp;\par
00300             \}\par
00301             {\cf17 set}\par
00302             \{\par
00303                 this.bar = value / 384;\par
00304                 this.tick = value % 384;\par
00305             \}\par
00306         \}\par
00307 \par
00311         {\cf17 public} {\cf18 double} TickTimeStamp\par
00312         \{\par
00313             {\cf17 get} \{ {\cf19 return} this.tickTimeStamp; \}\par
00314             {\cf17 set} \{ this.tickTimeStamp = value; \}\par
00315         \}\par
00316 \par
00320         {\cf17 public} {\cf18 int} WaitLength\par
00321         \{\par
00322             {\cf17 get}\par
00323             \{\par
00324                 {\cf19 return} this.waitLength;\par
00325             \}\par
00326             {\cf17 set}\par
00327             \{\par
00328                 this.waitLength = value;\par
00329             \}\par
00330         \}\par
00331 \par
00336         {\cf17 public} {\cf18 int} WaitTickStamp\par
00337         \{\par
00338             {\cf17 get} \{ {\cf19 return} this.waitTickStamp; \}\par
00339             {\cf17 set} \{ this.waitTickStamp = value; \}\par
00340         \}\par
00341 \par
00346         {\cf17 public} {\cf18 double} WaitTimeStamp\par
00347         \{\par
00348             {\cf17 get} \{ {\cf19 return} this.waitTimeStamp; \}\par
00349             {\cf17 set} \{ this.waitTimeStamp = value; \}\par
00350         \}\par
00351 \par
00358         {\cf17 public} {\cf18 double} CalculatedWaitTime\par
00359         \{\par
00360             {\cf17 get} \{ {\cf19 return} this.calculatedWaitTime; \}\par
00361             {\cf17 set} \{ this.calculatedWaitTime = value; \}\par
00362         \}\par
00363 \par
00367         {\cf17 public} {\cf18 int} LastLength\par
00368         \{\par
00369             {\cf17 get}\par
00370             \{\par
00371                 {\cf19 return} this.lastLength;\par
00372             \}\par
00373             {\cf17 set}\par
00374             \{\par
00375                 this.lastLength = value;\par
00376             \}\par
00377         \}\par
00378 \par
00382         {\cf17 public} {\cf18 int} FixedLastLength\par
00383         \{\par
00384             {\cf17 get}\par
00385             \{\par
00386                 {\cf19 return} this.fixedLastLength;\par
00387             \}\par
00388             {\cf17 set}\par
00389             \{\par
00390                 this.fixedLastLength = value;\par
00391             \}\par
00392         \}\par
00393 \par
00397         {\cf17 public} {\cf18 int} LastTickStamp\par
00398         \{\par
00399             {\cf17 get}\par
00400             \{\par
00401                 {\cf19 return} this.lastTickStamp;\par
00402             \}\par
00403             {\cf17 set}\par
00404             \{\par
00405                 this.lastTickStamp = value;\par
00406             \}\par
00407         \}\par
00408 \par
00412         {\cf17 public} {\cf18 double} LastTimeStamp\par
00413         \{\par
00414             {\cf17 get}\par
00415             \{\par
00416                 {\cf19 return} this.lastTimeStamp;\par
00417             \}\par
00418             {\cf17 set}\par
00419             \{\par
00420                 this.lastTimeStamp = value;\par
00421             \}\par
00422         \}\par
00423 \par
00430         {\cf17 public} {\cf18 double} CalculatedLastTime\par
00431         \{\par
00432             {\cf17 get} => this.calculatedLastTime;\par
00433             {\cf17 set} \{ this.calculatedLastTime = value; \}\par
00434         \}\par
00435 \par
00440         {\cf17 public} {\cf18 bool} TickBPMDisagree\par
00441         \{\par
00442             {\cf17 get} => this.tickBPMDisagree;\par
00443             {\cf17 set} \{ this.tickBPMDisagree = value; \}\par
00444         \}\par
00445 \par
00449         {\cf17 public} {\cf18 string} EndKey\par
00450         \{\par
00451             {\cf17 get}\par
00452             \{\par
00453                 {\cf19 return} this.endKey;\par
00454             \}\par
00455             {\cf17 set}\par
00456             \{\par
00457                 this.endKey = value;\par
00458             \}\par
00459         \}\par
00460 \par
00465         {\cf17 public} {\cf18 int} EndKeyNum\par
00466         \{\par
00467             {\cf17 get}\par
00468             \{\par
00469                 {\cf18 int} result = 0;\par
00470                 {\cf19 if} (!this.endKey.Equals({\cf22 ""}))\par
00471                 \{\par
00472                     result = {\cf18 int}.Parse(this.endKey.ToCharArray()[0].ToString());\par
00473                 \}\par
00474                 {\cf19 return} result;\par
00475             \}\par
00476         \}\par
00477 \par
00481         {\cf17 public} {\cf18 bool} Delayed\par
00482         \{\par
00483             {\cf17 get} \{ {\cf19 return} this.delayed; \}\par
00484             {\cf17 set} \{ this.delayed = value; \}\par
00485         \}\par
00486 \par
00490         {\cf17 public} {\cf18 double} BPM\par
00491         \{\par
00492             {\cf17 get} \{ {\cf19 return} this.bpm; \}\par
00493             {\cf17 set} \{ this.bpm = value; \}\par
00494         \}\par
00495 \par
00499         {\cf17 public} Note? Prev\par
00500         \{\par
00501             {\cf17 get} \{ {\cf19 return} this.prev; \}\par
00502             {\cf17 set} \{ this.prev = value; \}\par
00503         \}\par
00504 \par
00508         {\cf17 public} Note? Next\par
00509         \{\par
00510             {\cf17 get} \{ {\cf19 return} this.next; \}\par
00511             {\cf17 set} \{ this.next = value; \}\par
00512         \}\par
00513 \par
00517         {\cf17 public} Note? SlideStart\par
00518         \{\par
00519             {\cf17 get} \{ {\cf19 return} this.slideStart; \}\par
00520             {\cf17 set} \{ this.slideStart = value; \}\par
00521         \}\par
00522 \par
00526         {\cf17 public} Note? ConsecutiveSlide\par
00527         \{\par
00528             {\cf17 get} \{ {\cf19 return} this.consecutiveSlide; \}\par
00529             {\cf17 set} \{ this.consecutiveSlide = value; \}\par
00530         \}\par
00531 \par
00532         {\cf17 public} List<BPMChange> BPMChangeNotes\par
00533         \{\par
00534             {\cf17 get}\par
00535             \{\par
00536                 {\cf19 return} this.bpmChangeNotes;\par
00537             \}\par
00538             {\cf17 set}\par
00539             \{\par
00540                 this.bpmChangeNotes = value;\par
00541             \}\par
00542         \}\par
00543 \par
00548         {\cf17 public} {\cf17 abstract} {\cf18 string} NoteSpecificGenre \{ {\cf17 get}; \}\par
00549 \par
00554         {\cf17 public} {\cf17 abstract} {\cf18 string} NoteGenre \{ {\cf17 get}; \}\par
00555 \par
00560         {\cf17 public} {\cf17 abstract} {\cf18 bool} IsNote \{ {\cf17 get}; \}\par
00561 \par
00562         {\cf17 public} {\cf17 abstract} {\cf18 bool} CheckValidity();\par
00563 \par
00564         {\cf17 public} {\cf17 abstract} {\cf18 string} Compose({\cf18 int} format);\par
00565 \par
00566         {\cf17 public} {\cf17 abstract} Note NewInstance();\par
00567 \par
00568         {\cf17 public} {\cf18 int} CompareTo(Object? obj)\par
00569         \{\par
00570             {\cf18 int} result = 0;\par
00571 \par
00572             Note another = obj as Note ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Note is not defined"});\par
00573 \par
00574             {\cf20 //else if (this.NoteSpecificType().Equals("SLIDE")&&(this.NoteSpecificType().Equals("TAP")|| this.NoteSpecificType().Equals("HOLD")) && this.tick == another.Tick && this.bar == another.Bar)}\par
00575             {\cf20 //\{}\par
00576             {\cf20 //    result = -1;}\par
00577             {\cf20 //\}}\par
00578             {\cf20 //else if (this.NoteSpecificType().Equals("SLIDE_START") && (another.NoteSpecificType().Equals("TAP") || another.NoteSpecificType().Equals("HOLD")) && this.tick == another.Tick && this.bar == another.Bar)}\par
00579             {\cf20 //\{}\par
00580             {\cf20 //    Console.WriteLine("STAR AND TAP");}\par
00581             {\cf20 //    result = 1;}\par
00582             {\cf20 //    Console.WriteLine(this.NoteSpecificType() + ".compareTo(" + another.NoteSpecificType() + ") is" + result);}\par
00583             {\cf20 //    //Console.ReadKey();}\par
00584             {\cf20 //\}}\par
00585             {\cf20 //if (this.Bar==another.Bar&&this.Tick==another.Tick)}\par
00586             {\cf20 //\{}\par
00587             {\cf20 //    if (this.NoteGenre().Equals("BPM"))}\par
00588             {\cf20 //    \{}\par
00589             {\cf20 //        result = -1;}\par
00590             {\cf20 //    \}}\par
00591             {\cf20 //    else if (this.NoteGenre().Equals("MEASURE"))}\par
00592             {\cf20 //    \{}\par
00593             {\cf20 //        result = 1;}\par
00594             {\cf20 //    \}}\par
00595             {\cf20 //    else if ((this.NoteSpecificType().Equals("TAP")|| this.NoteSpecificType().Equals("HOLD"))&&another.NoteSpecificType().Equals("SLIDE_START"))}\par
00596             {\cf20 //    \{}\par
00597             {\cf20 //        result= -1;}\par
00598             {\cf20 //    \}}\par
00599             {\cf20 //\}}\par
00600             {\cf20 //else}\par
00601             {\cf20 //\{}\par
00602             {\cf20 //    if (this.bar != another.Bar)}\par
00603             {\cf20 //    \{}\par
00604             {\cf20 //        result = this.bar.CompareTo(another.Bar);}\par
00605             {\cf20 //        //Console.WriteLine("this.compareTo(another) is" + result);}\par
00606             {\cf20 //        //Console.ReadKey();}\par
00607             {\cf20 //    \}}\par
00608             {\cf20 //    else result = this.tick.CompareTo(another.Tick);}\par
00609             {\cf20 //\}}\par
00610             {\cf19 if} (this.Bar != another.Bar)\par
00611             \{\par
00612                 result = this.Bar.CompareTo(another.Bar);\par
00613             \}\par
00614             {\cf19 else} {\cf19 if} (this.Bar == another.Bar && ({\cf17 this}.Tick != another.Tick))\par
00615             \{\par
00616                 result = this.Tick.CompareTo(another.Tick);\par
00617             \}\par
00618             {\cf19 else}\par
00619             \{\par
00620                 {\cf19 if} (this.NoteSpecificGenre.Equals({\cf22 "BPM"}))\par
00621                 \{\par
00622                     result = -1;\par
00623                 \}\par
00624                 {\cf20 //else if (this.NoteSpecificType().Equals("SLIDE")&&another.NoteSpecificType().Equals("SLIDE_START")&&this.Key.Equals(another.Key))}\par
00625                 {\cf20 //\{}\par
00626                 {\cf20 //    result = 1;}\par
00627                 {\cf20 //\}}\par
00628                 {\cf19 else} result = 0;\par
00629             \}\par
00630             {\cf19 return} result;\par
00631         \}\par
00632 \par
00633         {\cf17 public} {\cf18 bool} Equals(Note? other)\par
00634         \{\par
00635             {\cf18 bool} result = {\cf17 false};\par
00636             {\cf19 if} (other != {\cf17 null} &&\par
00637             this.NoteType.Equals(other.NoteType) &&\par
00638             {\cf17 this}.Key.Equals(other.Key) &&\par
00639             {\cf17 this}.EndKey.Equals(other.EndKey) &&\par
00640             {\cf17 this}.Bar == other.Bar &&\par
00641             {\cf17 this}.Tick == other.Tick &&\par
00642             {\cf17 this}.LastLength == other.LastLength &&\par
00643             {\cf17 this}.BPM == other.BPM)\par
00644             \{\par
00645                 result = {\cf17 true};\par
00646             \}\par
00647             {\cf19 return} result;\par
00648         \}\par
00649 \par
00650         {\cf17 public} {\cf17 virtual} {\cf18 void} Flip({\cf18 string} method)\par
00651         \{\par
00652             {\cf19 if} (this.Key != {\cf17 null} && !this.Key.Equals({\cf22 ""}) && !({\cf17 this}.Key.Count() > 1 && {\cf17 this}.Key.ToCharArray()[1] == {\cf23 'C'}))\par
00653             \{\par
00654                 {\cf19 switch} (method)\par
00655                 \{\par
00656                     {\cf19 case} {\cf22 "Clockwise90"}:\par
00657                         {\cf19 switch} (this.KeyNum)\par
00658                         \{\par
00659                             {\cf19 case} 0:\par
00660                                 this.Key = {\cf22 "2"} + this.KeyGroup;\par
00661                                 {\cf19 break};\par
00662                             {\cf19 case} 1:\par
00663                                 this.Key = {\cf22 "3"} + this.KeyGroup;\par
00664                                 {\cf19 break};\par
00665                             {\cf19 case} 2:\par
00666                                 this.Key = {\cf22 "4"} + this.KeyGroup;\par
00667                                 {\cf19 break};\par
00668                             {\cf19 case} 3:\par
00669                                 this.Key = {\cf22 "5"} + this.KeyGroup;\par
00670                                 {\cf19 break};\par
00671                             {\cf19 case} 4:\par
00672                                 this.Key = {\cf22 "6"} + this.KeyGroup;\par
00673                                 {\cf19 break};\par
00674                             {\cf19 case} 5:\par
00675                                 this.Key = {\cf22 "7"} + this.KeyGroup;\par
00676                                 {\cf19 break};\par
00677                             {\cf19 case} 6:\par
00678                                 this.Key = {\cf22 "0"} + this.KeyGroup;\par
00679                                 {\cf19 break};\par
00680                             {\cf19 case} 7:\par
00681                                 this.Key = {\cf22 "1"} + this.KeyGroup;\par
00682                                 {\cf19 break};\par
00683                         \}\par
00684                         {\cf19 switch} (this.EndKeyNum)\par
00685                         \{\par
00686                             {\cf19 case} 0:\par
00687                                 this.EndKey = {\cf22 "2"};\par
00688                                 {\cf19 break};\par
00689                             {\cf19 case} 1:\par
00690                                 this.EndKey = {\cf22 "3"};\par
00691                                 {\cf19 break};\par
00692                             {\cf19 case} 2:\par
00693                                 this.EndKey = {\cf22 "4"};\par
00694                                 {\cf19 break};\par
00695                             {\cf19 case} 3:\par
00696                                 this.EndKey = {\cf22 "5"};\par
00697                                 {\cf19 break};\par
00698                             {\cf19 case} 4:\par
00699                                 this.EndKey = {\cf22 "6"};\par
00700                                 {\cf19 break};\par
00701                             {\cf19 case} 5:\par
00702                                 this.EndKey = {\cf22 "7"};\par
00703                                 {\cf19 break};\par
00704                             {\cf19 case} 6:\par
00705                                 this.EndKey = {\cf22 "0"};\par
00706                                 {\cf19 break};\par
00707                             {\cf19 case} 7:\par
00708                                 this.EndKey = {\cf22 "1"};\par
00709                                 {\cf19 break};\par
00710                             {\cf19 default}:\par
00711                                 {\cf19 break};\par
00712                         \}\par
00713                         {\cf19 break};\par
00714                     {\cf19 case} {\cf22 "Clockwise180"}:\par
00715                         {\cf19 switch} (this.KeyNum)\par
00716                         \{\par
00717                             {\cf19 case} 0:\par
00718                                 this.Key = {\cf22 "4"} + this.KeyGroup;\par
00719                                 {\cf19 break};\par
00720                             {\cf19 case} 1:\par
00721                                 this.Key = {\cf22 "5"} + this.KeyGroup;\par
00722                                 {\cf19 break};\par
00723                             {\cf19 case} 2:\par
00724                                 this.Key = {\cf22 "6"} + this.KeyGroup;\par
00725                                 {\cf19 break};\par
00726                             {\cf19 case} 3:\par
00727                                 this.Key = {\cf22 "7"} + this.KeyGroup;\par
00728                                 {\cf19 break};\par
00729                             {\cf19 case} 4:\par
00730                                 this.Key = {\cf22 "0"} + this.KeyGroup;\par
00731                                 {\cf19 break};\par
00732                             {\cf19 case} 5:\par
00733                                 this.Key = {\cf22 "1"} + this.KeyGroup;\par
00734                                 {\cf19 break};\par
00735                             {\cf19 case} 6:\par
00736                                 this.Key = {\cf22 "2"} + this.KeyGroup;\par
00737                                 {\cf19 break};\par
00738                             {\cf19 case} 7:\par
00739                                 this.Key = {\cf22 "3"} + this.KeyGroup;\par
00740                                 {\cf19 break};\par
00741                         \}\par
00742                         {\cf19 switch} (this.EndKeyNum)\par
00743                         \{\par
00744                             {\cf19 case} 0:\par
00745                                 this.EndKey = {\cf22 "4"};\par
00746                                 {\cf19 break};\par
00747                             {\cf19 case} 1:\par
00748                                 this.EndKey = {\cf22 "5"};\par
00749                                 {\cf19 break};\par
00750                             {\cf19 case} 2:\par
00751                                 this.EndKey = {\cf22 "6"};\par
00752                                 {\cf19 break};\par
00753                             {\cf19 case} 3:\par
00754                                 this.EndKey = {\cf22 "7"};\par
00755                                 {\cf19 break};\par
00756                             {\cf19 case} 4:\par
00757                                 this.EndKey = {\cf22 "0"};\par
00758                                 {\cf19 break};\par
00759                             {\cf19 case} 5:\par
00760                                 this.EndKey = {\cf22 "1"};\par
00761                                 {\cf19 break};\par
00762                             {\cf19 case} 6:\par
00763                                 this.EndKey = {\cf22 "2"};\par
00764                                 {\cf19 break};\par
00765                             {\cf19 case} 7:\par
00766                                 this.EndKey = {\cf22 "3"};\par
00767                                 {\cf19 break};\par
00768                             {\cf19 default}:\par
00769                                 {\cf19 break};\par
00770                         \}\par
00771                         {\cf19 break};\par
00772                     {\cf19 case} {\cf22 "Counterclockwise90"}:\par
00773                         {\cf19 switch} (this.KeyNum)\par
00774                         \{\par
00775                             {\cf19 case} 0:\par
00776                                 this.Key = {\cf22 "6"} + this.KeyGroup;\par
00777                                 {\cf19 break};\par
00778                             {\cf19 case} 1:\par
00779                                 this.Key = {\cf22 "7"} + this.KeyGroup;\par
00780                                 {\cf19 break};\par
00781                             {\cf19 case} 2:\par
00782                                 this.Key = {\cf22 "0"} + this.KeyGroup;\par
00783                                 {\cf19 break};\par
00784                             {\cf19 case} 3:\par
00785                                 this.Key = {\cf22 "1"} + this.KeyGroup;\par
00786                                 {\cf19 break};\par
00787                             {\cf19 case} 4:\par
00788                                 this.Key = {\cf22 "2"} + this.KeyGroup;\par
00789                                 {\cf19 break};\par
00790                             {\cf19 case} 5:\par
00791                                 this.Key = {\cf22 "3"} + this.KeyGroup;\par
00792                                 {\cf19 break};\par
00793                             {\cf19 case} 6:\par
00794                                 this.Key = {\cf22 "4"} + this.KeyGroup;\par
00795                                 {\cf19 break};\par
00796                             {\cf19 case} 7:\par
00797                                 this.Key = {\cf22 "5"} + this.KeyGroup;\par
00798                                 {\cf19 break};\par
00799                         \}\par
00800                         {\cf19 switch} (this.EndKeyNum)\par
00801                         \{\par
00802                             {\cf19 case} 0:\par
00803                                 this.EndKey = {\cf22 "6"};\par
00804                                 {\cf19 break};\par
00805                             {\cf19 case} 1:\par
00806                                 this.EndKey = {\cf22 "7"};\par
00807                                 {\cf19 break};\par
00808                             {\cf19 case} 2:\par
00809                                 this.EndKey = {\cf22 "0"};\par
00810                                 {\cf19 break};\par
00811                             {\cf19 case} 3:\par
00812                                 this.EndKey = {\cf22 "1"};\par
00813                                 {\cf19 break};\par
00814                             {\cf19 case} 4:\par
00815                                 this.EndKey = {\cf22 "2"};\par
00816                                 {\cf19 break};\par
00817                             {\cf19 case} 5:\par
00818                                 this.EndKey = {\cf22 "3"};\par
00819                                 {\cf19 break};\par
00820                             {\cf19 case} 6:\par
00821                                 this.EndKey = {\cf22 "4"};\par
00822                                 {\cf19 break};\par
00823                             {\cf19 case} 7:\par
00824                                 this.EndKey = {\cf22 "5"};\par
00825                                 {\cf19 break};\par
00826                             {\cf19 default}:\par
00827                                 {\cf19 break};\par
00828                         \}\par
00829                         {\cf19 break};\par
00830                     {\cf19 case} {\cf22 "Counterclockwise180"}:\par
00831                         {\cf19 switch} (this.KeyNum)\par
00832                         \{\par
00833                             {\cf19 case} 0:\par
00834                                 this.Key = {\cf22 "4"} + this.KeyGroup;\par
00835                                 {\cf19 break};\par
00836                             {\cf19 case} 1:\par
00837                                 this.Key = {\cf22 "5"} + this.KeyGroup;\par
00838                                 {\cf19 break};\par
00839                             {\cf19 case} 2:\par
00840                                 this.Key = {\cf22 "6"} + this.KeyGroup;\par
00841                                 {\cf19 break};\par
00842                             {\cf19 case} 3:\par
00843                                 this.Key = {\cf22 "7"} + this.KeyGroup;\par
00844                                 {\cf19 break};\par
00845                             {\cf19 case} 4:\par
00846                                 this.Key = {\cf22 "0"} + this.KeyGroup;\par
00847                                 {\cf19 break};\par
00848                             {\cf19 case} 5:\par
00849                                 this.Key = {\cf22 "1"} + this.KeyGroup;\par
00850                                 {\cf19 break};\par
00851                             {\cf19 case} 6:\par
00852                                 this.Key = {\cf22 "2"} + this.KeyGroup;\par
00853                                 {\cf19 break};\par
00854                             {\cf19 case} 7:\par
00855                                 this.Key = {\cf22 "3"} + this.KeyGroup;\par
00856                                 {\cf19 break};\par
00857                         \}\par
00858                         {\cf19 switch} (this.EndKeyNum)\par
00859                         \{\par
00860                             {\cf19 case} 0:\par
00861                                 this.EndKey = {\cf22 "4"};\par
00862                                 {\cf19 break};\par
00863                             {\cf19 case} 1:\par
00864                                 this.EndKey = {\cf22 "5"};\par
00865                                 {\cf19 break};\par
00866                             {\cf19 case} 2:\par
00867                                 this.EndKey = {\cf22 "6"};\par
00868                                 {\cf19 break};\par
00869                             {\cf19 case} 3:\par
00870                                 this.EndKey = {\cf22 "7"};\par
00871                                 {\cf19 break};\par
00872                             {\cf19 case} 4:\par
00873                                 this.EndKey = {\cf22 "0"};\par
00874                                 {\cf19 break};\par
00875                             {\cf19 case} 5:\par
00876                                 this.EndKey = {\cf22 "1"};\par
00877                                 {\cf19 break};\par
00878                             {\cf19 case} 6:\par
00879                                 this.EndKey = {\cf22 "2"};\par
00880                                 {\cf19 break};\par
00881                             {\cf19 case} 7:\par
00882                                 this.EndKey = {\cf22 "3"};\par
00883                                 {\cf19 break};\par
00884                             {\cf19 default}:\par
00885                                 {\cf19 break};\par
00886                         \}\par
00887                         {\cf19 break};\par
00888                     {\cf19 case} {\cf22 "UpSideDown"}:\par
00889                         {\cf19 if} (this.NoteType.Equals({\cf22 "TTP"}) && ({\cf17 this}.KeyGroup.Equals({\cf22 "E"}) || {\cf17 this}.KeyGroup.Equals({\cf22 "D"})))\par
00890                         \{\par
00891                             {\cf19 switch} (this.KeyNum)\par
00892                             \{\par
00893                                 {\cf19 case} 0:\par
00894                                     this.Key = {\cf22 "4"} + this.KeyGroup;\par
00895                                     {\cf19 break};\par
00896                                 {\cf19 case} 1:\par
00897                                     this.Key = {\cf22 "3"} + this.KeyGroup;\par
00898                                     {\cf19 break};\par
00899                                 {\cf19 case} 2:\par
00900                                     {\cf19 break};\par
00901                                 {\cf19 case} 3:\par
00902                                     this.Key = {\cf22 "1"} + this.KeyGroup;\par
00903                                     {\cf19 break};\par
00904                                 {\cf19 case} 4:\par
00905                                     this.Key = {\cf22 "0"} + this.KeyGroup;\par
00906                                     {\cf19 break};\par
00907                                 {\cf19 case} 5:\par
00908                                     this.Key = {\cf22 "7"} + this.KeyGroup;\par
00909                                     {\cf19 break};\par
00910                                 {\cf19 case} 6:\par
00911                                     {\cf19 break};\par
00912                                 {\cf19 case} 7:\par
00913                                     this.Key = {\cf22 "5"} + this.KeyGroup;\par
00914                                     {\cf19 break};\par
00915                             \}\par
00916                         \}\par
00917                         {\cf19 else}\par
00918                         \{\par
00919                             {\cf19 switch} (this.KeyNum)\par
00920                             \{\par
00921                                 {\cf19 case} 0:\par
00922                                     this.Key = {\cf22 "3"} + this.KeyGroup;\par
00923                                     {\cf19 break};\par
00924                                 {\cf19 case} 1:\par
00925                                     this.Key = {\cf22 "2"} + this.KeyGroup;\par
00926                                     {\cf19 break};\par
00927                                 {\cf19 case} 2:\par
00928                                     this.Key = {\cf22 "1"} + this.KeyGroup;\par
00929                                     {\cf19 break};\par
00930                                 {\cf19 case} 3:\par
00931                                     this.Key = {\cf22 "0"} + this.KeyGroup;\par
00932                                     {\cf19 break};\par
00933                                 {\cf19 case} 4:\par
00934                                     this.Key = {\cf22 "7"} + this.KeyGroup;\par
00935                                     {\cf19 break};\par
00936                                 {\cf19 case} 5:\par
00937                                     this.Key = {\cf22 "6"} + this.KeyGroup;\par
00938                                     {\cf19 break};\par
00939                                 {\cf19 case} 6:\par
00940                                     this.Key = {\cf22 "5"} + this.KeyGroup;\par
00941                                     {\cf19 break};\par
00942                                 {\cf19 case} 7:\par
00943                                     this.Key = {\cf22 "4"} + this.KeyGroup;\par
00944                                     {\cf19 break};\par
00945                             \}\par
00946                         \}\par
00947                         {\cf19 switch} (this.EndKeyNum)\par
00948                         \{\par
00949                             {\cf19 case} 0:\par
00950                                 this.EndKey = {\cf22 "3"};\par
00951                                 {\cf19 break};\par
00952                             {\cf19 case} 1:\par
00953                                 this.EndKey = {\cf22 "2"};\par
00954                                 {\cf19 break};\par
00955                             {\cf19 case} 2:\par
00956                                 this.EndKey = {\cf22 "1"};\par
00957                                 {\cf19 break};\par
00958                             {\cf19 case} 3:\par
00959                                 this.EndKey = {\cf22 "0"};\par
00960                                 {\cf19 break};\par
00961                             {\cf19 case} 4:\par
00962                                 this.EndKey = {\cf22 "7"};\par
00963                                 {\cf19 break};\par
00964                             {\cf19 case} 5:\par
00965                                 this.EndKey = {\cf22 "6"};\par
00966                                 {\cf19 break};\par
00967                             {\cf19 case} 6:\par
00968                                 this.EndKey = {\cf22 "5"};\par
00969                                 {\cf19 break};\par
00970                             {\cf19 case} 7:\par
00971                                 this.EndKey = {\cf22 "4"};\par
00972                                 {\cf19 break};\par
00973                             {\cf19 default}:\par
00974                                 {\cf19 break};\par
00975                         \}\par
00976                         {\cf19 if} (this.NoteGenre.Equals({\cf22 "SLIDE"}))\par
00977                         \{\par
00978                             {\cf19 switch} (this.NoteType)\par
00979                             \{\par
00980                                 {\cf19 case} {\cf22 "SCL"}:\par
00981                                     this.NoteType = {\cf22 "SCR"};\par
00982                                     {\cf19 break};\par
00983                                 {\cf19 case} {\cf22 "SCR"}:\par
00984                                     this.NoteType = {\cf22 "SCL"};\par
00985                                     {\cf19 break};\par
00986                                 {\cf19 case} {\cf22 "SUL"}:\par
00987                                     this.NoteType = {\cf22 "SUR"};\par
00988                                     {\cf19 break};\par
00989                                 {\cf19 case} {\cf22 "SUR"}:\par
00990                                     this.NoteType = {\cf22 "SUL"};\par
00991                                     {\cf19 break};\par
00992                                 {\cf19 case} {\cf22 "SLL"}:\par
00993                                     this.NoteType = {\cf22 "SLR"};\par
00994                                     {\cf19 break};\par
00995                                 {\cf19 case} {\cf22 "SLR"}:\par
00996                                     this.NoteType = {\cf22 "SLL"};\par
00997                                     {\cf19 break};\par
00998                                 {\cf19 case} {\cf22 "SXL"}:\par
00999                                     this.NoteType = {\cf22 "SXR"};\par
01000                                     {\cf19 break};\par
01001                                 {\cf19 case} {\cf22 "SXR"}:\par
01002                                     this.NoteType = {\cf22 "SXL"};\par
01003                                     {\cf19 break};\par
01004                                 {\cf19 case} {\cf22 "SSL"}:\par
01005                                     this.NoteType = {\cf22 "SSR"};\par
01006                                     {\cf19 break};\par
01007                                 {\cf19 case} {\cf22 "SSR"}:\par
01008                                     this.NoteType = {\cf22 "SSL"};\par
01009                                     {\cf19 break};\par
01010                             \}\par
01011                         \}\par
01012                         {\cf19 break};\par
01013                     {\cf19 case} {\cf22 "LeftToRight"}:\par
01014                         {\cf19 if} (this.NoteType.Equals({\cf22 "TTP"}) && ({\cf17 this}.KeyGroup.Equals({\cf22 "E"}) || {\cf17 this}.KeyGroup.Equals({\cf22 "D"})))\par
01015                         \{\par
01016                             {\cf19 switch} (this.KeyNum)\par
01017                             \{\par
01018                                 {\cf19 case} 0:\par
01019                                     {\cf19 break};\par
01020                                 {\cf19 case} 1:\par
01021                                     this.Key = {\cf22 "7"} + this.KeyGroup;\par
01022                                     {\cf19 break};\par
01023                                 {\cf19 case} 2:\par
01024                                     this.Key = {\cf22 "6"} + this.KeyGroup;\par
01025                                     {\cf19 break};\par
01026                                 {\cf19 case} 3:\par
01027                                     this.Key = {\cf22 "5"} + this.KeyGroup;\par
01028                                     {\cf19 break};\par
01029                                 {\cf19 case} 4:\par
01030                                     {\cf19 break};\par
01031                                 {\cf19 case} 5:\par
01032                                     this.Key = {\cf22 "3"} + this.KeyGroup;\par
01033                                     {\cf19 break};\par
01034                                 {\cf19 case} 6:\par
01035                                     this.Key = {\cf22 "2"} + this.KeyGroup;\par
01036                                     {\cf19 break};\par
01037                                 {\cf19 case} 7:\par
01038                                     this.Key = {\cf22 "1"} + this.KeyGroup;\par
01039                                     {\cf19 break};\par
01040                             \}\par
01041                         \}\par
01042                         {\cf19 else}\par
01043                         \{\par
01044                             {\cf19 switch} (this.KeyNum)\par
01045                             \{\par
01046                                 {\cf19 case} 0:\par
01047                                     this.Key = {\cf22 "7"} + this.KeyGroup;\par
01048                                     {\cf19 break};\par
01049                                 {\cf19 case} 1:\par
01050                                     this.Key = {\cf22 "6"} + this.KeyGroup;\par
01051                                     {\cf19 break};\par
01052                                 {\cf19 case} 2:\par
01053                                     this.Key = {\cf22 "5"} + this.KeyGroup;\par
01054                                     {\cf19 break};\par
01055                                 {\cf19 case} 3:\par
01056                                     this.Key = {\cf22 "4"} + this.KeyGroup;\par
01057                                     {\cf19 break};\par
01058                                 {\cf19 case} 4:\par
01059                                     this.Key = {\cf22 "3"} + this.KeyGroup;\par
01060                                     {\cf19 break};\par
01061                                 {\cf19 case} 5:\par
01062                                     this.Key = {\cf22 "2"} + this.KeyGroup;\par
01063                                     {\cf19 break};\par
01064                                 {\cf19 case} 6:\par
01065                                     this.Key = {\cf22 "1"} + this.KeyGroup;\par
01066                                     {\cf19 break};\par
01067                                 {\cf19 case} 7:\par
01068                                     this.Key = {\cf22 "0"} + this.KeyGroup;\par
01069                                     {\cf19 break};\par
01070                             \}\par
01071                         \}\par
01072                         {\cf19 switch} (this.EndKeyNum)\par
01073                         \{\par
01074                             {\cf19 case} 0:\par
01075                                 this.EndKey = {\cf22 "7"};\par
01076                                 {\cf19 break};\par
01077                             {\cf19 case} 1:\par
01078                                 this.EndKey = {\cf22 "6"};\par
01079                                 {\cf19 break};\par
01080                             {\cf19 case} 2:\par
01081                                 this.EndKey = {\cf22 "5"};\par
01082                                 {\cf19 break};\par
01083                             {\cf19 case} 3:\par
01084                                 this.EndKey = {\cf22 "4"};\par
01085                                 {\cf19 break};\par
01086                             {\cf19 case} 4:\par
01087                                 this.EndKey = {\cf22 "3"};\par
01088                                 {\cf19 break};\par
01089                             {\cf19 case} 5:\par
01090                                 this.EndKey = {\cf22 "2"};\par
01091                                 {\cf19 break};\par
01092                             {\cf19 case} 6:\par
01093                                 this.EndKey = {\cf22 "1"};\par
01094                                 {\cf19 break};\par
01095                             {\cf19 case} 7:\par
01096                                 this.EndKey = {\cf22 "0"};\par
01097                                 {\cf19 break};\par
01098                             {\cf19 default}:\par
01099                                 {\cf19 break};\par
01100                         \}\par
01101                         {\cf19 if} (this.NoteGenre.Equals({\cf22 "SLIDE"}))\par
01102                         \{\par
01103                             {\cf19 switch} (this.NoteType)\par
01104                             \{\par
01105                                 {\cf19 case} {\cf22 "SCL"}:\par
01106                                     this.NoteType = {\cf22 "SCR"};\par
01107                                     {\cf19 break};\par
01108                                 {\cf19 case} {\cf22 "SCR"}:\par
01109                                     this.NoteType = {\cf22 "SCL"};\par
01110                                     {\cf19 break};\par
01111                                 {\cf19 case} {\cf22 "SUL"}:\par
01112                                     this.NoteType = {\cf22 "SUR"};\par
01113                                     {\cf19 break};\par
01114                                 {\cf19 case} {\cf22 "SUR"}:\par
01115                                     this.NoteType = {\cf22 "SUL"};\par
01116                                     {\cf19 break};\par
01117                                 {\cf19 case} {\cf22 "SLL"}:\par
01118                                     this.NoteType = {\cf22 "SLR"};\par
01119                                     {\cf19 break};\par
01120                                 {\cf19 case} {\cf22 "SLR"}:\par
01121                                     this.NoteType = {\cf22 "SLL"};\par
01122                                     {\cf19 break};\par
01123                                 {\cf19 case} {\cf22 "SXL"}:\par
01124                                     this.NoteType = {\cf22 "SXR"};\par
01125                                     {\cf19 break};\par
01126                                 {\cf19 case} {\cf22 "SXR"}:\par
01127                                     this.NoteType = {\cf22 "SXL"};\par
01128                                     {\cf19 break};\par
01129                                 {\cf19 case} {\cf22 "SSL"}:\par
01130                                     this.NoteType = {\cf22 "SSR"};\par
01131                                     {\cf19 break};\par
01132                                 {\cf19 case} {\cf22 "SSR"}:\par
01133                                     this.NoteType = {\cf22 "SSL"};\par
01134                                     {\cf19 break};\par
01135                             \}\par
01136                         \}\par
01137                         {\cf19 break};\par
01138                     {\cf19 default}:\par
01139                         {\cf19 throw} {\cf17 new} NotImplementedException({\cf22 "METHOD SPECIFIED INVALID. EXPECT: Clockwise90, Clockwise180, Counterclockwise90, Counterclockwise180, UpSideDown, LeftToRight"});\par
01140                 \}\par
01141             \}\par
01142             this.Update();\par
01143         \}\par
01144 \par
01145         {\cf17 public} {\cf18 bool} Update()\par
01146         \{\par
01147             {\cf20 // Console.WriteLine("This note has bpm note number of " + this.BPMChangeNotes.Count());}\par
01148             {\cf18 bool} result = {\cf17 false};\par
01149             this.tickStamp = this.bar * 384 + this.tick;\par
01150             {\cf19 while} (this.tick >= 384)\par
01151             \{\par
01152                 this.tick -= 384;\par
01153                 this.bar++;\par
01154             \}\par
01155             {\cf20 // string noteInformation = "This note is "+this.NoteType+", in tick "+ this.tickStamp+", ";}\par
01156             {\cf20 //this.tickTimeStamp = this.GetTimeStamp(this.tickStamp);}\par
01157             this.waitTickStamp = this.tickStamp + this.waitLength;\par
01158             {\cf20 //this.waitTimeStamp = this.GetTimeStamp(this.waitTickStamp);}\par
01159             this.lastTickStamp = this.waitTickStamp + this.lastLength;\par
01160             {\cf20 //this.lastTimeStamp = this.GetTimeStamp(this.lastTickStamp);}\par
01161             {\cf19 if} (!(this.NoteType.Equals({\cf22 "SLIDE"}) || {\cf17 this}.NoteType.Equals({\cf22 "HOLD"})))\par
01162             \{\par
01163                 result = {\cf17 true};\par
01164             \}\par
01165             {\cf19 else} {\cf19 if} (this.calculatedLastTime > 0 && this.calculatedWaitTime > 0)\par
01166             \{\par
01167                 result = {\cf17 true};\par
01168             \}\par
01169             {\cf19 return} result;\par
01170         \}\par
01171 \par
01176         {\cf17 public} {\cf18 void} ReplaceBPMChanges(BPMChanges changeTable)\par
01177         \{\par
01178             this.bpmChangeNotes = {\cf17 new} List<BPMChange>();\par
01179             this.bpmChangeNotes.AddRange(changeTable.ChangeNotes);\par
01180         \}\par
01181 \par
01186         {\cf17 public} {\cf18 void} ReplaceBPMChanges(List<BPMChange> changeTable)\par
01187         \{\par
01188             this.bpmChangeNotes = {\cf17 new} List<BPMChange>();\par
01189             this.bpmChangeNotes.AddRange(changeTable);\par
01190         \}\par
01191 \par
01197         {\cf17 public} {\cf18 string} GenerateAppropriateLength({\cf18 int} length)\par
01198         \{\par
01199             {\cf18 string} result = {\cf22 ""};\par
01200             {\cf17 const} {\cf18 int} definition = 384;\par
01201             {\cf18 int} divisor = GCD(definition, length);\par
01202             {\cf18 int} quaver = definition / divisor, beat = length / divisor;\par
01203             result = {\cf22 "["} + quaver.ToString() + {\cf22 ":"} + beat.ToString() + {\cf22 "]"};\par
01204             {\cf19 return} result;\par
01205         \}\par
01206 \par
01213         {\cf17 static} {\cf18 int} GCD({\cf18 int} a, {\cf18 int} b)\par
01214         \{\par
01215             {\cf19 return} b == 0 ? a : GCD(b, a % b);\par
01216         \}\par
01217 \par
01224         {\cf17 public} {\cf18 string} GenerateAppropriateLength({\cf18 int} length, {\cf18 double} bpm)\par
01225         \{\par
01226             {\cf18 string} result = {\cf22 ""};\par
01227             {\cf19 switch} (this.NoteGenre)\par
01228             \{\par
01229                 {\cf19 case} {\cf22 "SLIDE"}:\par
01230                     {\cf18 double} sustain = this.WaitTimeStamp - this.TickTimeStamp;\par
01231                     {\cf18 double} duration = this.LastTimeStamp - this.WaitTimeStamp;\par
01232                     result = {\cf22 "["} + sustain + {\cf22 "##"} + duration + {\cf22 "]"};\par
01233                     {\cf19 break};\par
01234                 {\cf19 case} {\cf22 "HOLD"}:\par
01235                     {\cf18 double} startTime = this.TickTimeStamp;\par
01236                     duration = this.LastTimeStamp - this.TickTimeStamp;\par
01237                     result = {\cf22 "["} + startTime + {\cf22 "##"} + duration + {\cf22 "]"};\par
01238                     {\cf19 break};\par
01239             \}\par
01240             {\cf19 return} result;\par
01241         \}\par
01242 \par
01248         {\cf17 public} {\cf17 static} {\cf18 double} GetBPMTimeUnit({\cf18 double} bpm)\par
01249         \{\par
01250             {\cf18 double} result = 60 / bpm * 4 / 384;\par
01251             {\cf19 return} result;\par
01252         \}\par
01253 \par
01254         {\cf17 public} {\cf18 double} GetTimeStamp({\cf18 int} overallTick)\par
01255         \{\par
01256             {\cf18 double} result = 0.0;\par
01257             {\cf19 if} (overallTick != 0)\par
01258             \{\par
01259                 {\cf18 int} maximumBPMIndex = 0;\par
01260                 {\cf19 for} ({\cf18 int} i = 0; i < this.bpmChangeNotes.Count; i++)\par
01261                 \{\par
01262                     {\cf19 if} (this.bpmChangeNotes[i].TickStamp <= overallTick)\par
01263                     \{\par
01264                         maximumBPMIndex = i;\par
01265                     \}\par
01266                 \}\par
01267                 {\cf19 if} (maximumBPMIndex == 0)\par
01268                 \{\par
01269                     result = GetBPMTimeUnit(this.bpmChangeNotes[0].BPM) * overallTick;\par
01270                 \}\par
01271                 {\cf19 else}\par
01272                 \{\par
01273                     {\cf19 for} ({\cf18 int} i = 1; i <= maximumBPMIndex; i++)\par
01274                     \{\par
01275                         {\cf18 double} previousTickTimeUnit = GetBPMTimeUnit(this.bpmChangeNotes[i - 1].BPM);\par
01276                         result += (this.bpmChangeNotes[i].TickStamp - this.bpmChangeNotes[i - 1].TickStamp) * previousTickTimeUnit;\par
01277                     \}\par
01278                     {\cf18 double} tickTimeUnit = GetBPMTimeUnit(this.bpmChangeNotes[maximumBPMIndex].BPM);\par
01279                     result += (overallTick - this.bpmChangeNotes[maximumBPMIndex].TickStamp) * tickTimeUnit;\par
01280                 \}\par
01281             \} {\cf20 //A serious improvement is needed for this method}\par
01282             {\cf19 return} result;\par
01283         \}\par
01284     \}\par
01285 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs}
{\xe \v Neskol/MaiLib/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
.NETCoreApp,Version=v6.0.AssemblyAttributes.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs}
{\xe \v Neskol/MaiLib/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // <autogenerated />}\par
00002 {\cf17 using }System;\par
00003 {\cf17 using }System.Reflection;\par
00004 [assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute({\cf22 ".NETCoreApp,Version=v6.0"}, FrameworkDisplayName = {\cf22 ".NET 6.0"})]\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/obj/Debug/net6.0/MaiLib.AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/obj/Debug/net6.0/MaiLib.AssemblyInfo.cs}
{\xe \v Neskol/MaiLib/obj/Debug/net6.0/MaiLib.AssemblyInfo.cs}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.AssemblyInfo.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/obj/Debug/net6.0/MaiLib.AssemblyInfo.cs}
{\xe \v Neskol/MaiLib/obj/Debug/net6.0/MaiLib.AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //------------------------------------------------------------------------------}\par
00002 {\cf20 // <auto-generated>}\par
00003 {\cf20 //     This code was generated by a tool.}\par
00004 {\cf20 //}\par
00005 {\cf20 //     Changes to this file may cause incorrect behavior and will be lost if}\par
00006 {\cf20 //     the code is regenerated.}\par
00007 {\cf20 // </auto-generated>}\par
00008 {\cf20 //------------------------------------------------------------------------------}\par
00009 \par
00010 {\cf17 using }System;\par
00011 {\cf17 using }System.Reflection;\par
00012 \par
00013 [assembly: System.Reflection.AssemblyCompanyAttribute({\cf22 "MaiLib"})]\par
00014 [assembly: System.Reflection.AssemblyConfigurationAttribute({\cf22 "Debug"})]\par
00015 [assembly: System.Reflection.AssemblyFileVersionAttribute({\cf22 "1.0.0.0"})]\par
00016 [assembly: System.Reflection.AssemblyInformationalVersionAttribute({\cf22 "1.0.0"})]\par
00017 [assembly: System.Reflection.AssemblyProductAttribute({\cf22 "MaiLib"})]\par
00018 [assembly: System.Reflection.AssemblyTitleAttribute({\cf22 "MaiLib"})]\par
00019 [assembly: System.Reflection.AssemblyVersionAttribute({\cf22 "1.0.0.0"})]\par
00020 \par
00021 {\cf20 // Generated by the MSBuild WriteCodeFragment class.}\par
00022 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/obj/Debug/net6.0/MaiLib.GlobalUsings.g.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/obj/Debug/net6.0/MaiLib.GlobalUsings.g.cs}
{\xe \v Neskol/MaiLib/obj/Debug/net6.0/MaiLib.GlobalUsings.g.cs}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaiLib.GlobalUsings.g.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/obj/Debug/net6.0/MaiLib.GlobalUsings.g.cs}
{\xe \v Neskol/MaiLib/obj/Debug/net6.0/MaiLib.GlobalUsings.g.cs}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // <auto-generated/>}\par
00002 global {\cf17 using }global::System;\par
00003 global {\cf17 using }global::System.Collections.Generic;\par
00004 global {\cf17 using }global::System.IO;\par
00005 global {\cf17 using }global::System.Linq;\par
00006 global {\cf17 using }global::System.Net.Http;\par
00007 global {\cf17 using }global::System.Threading;\par
00008 global {\cf17 using }global::System.Threading.Tasks;\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/README.md}
{\xe \v Neskol/MaiLib/README.md}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Rest.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Rest.cs}
{\xe \v Neskol/MaiLib/Rest.cs}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Rest}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct Rest Note solely for Simai. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Rest.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Rest.cs}
{\xe \v Neskol/MaiLib/Rest.cs}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 internal} {\cf17 class }Rest : Note\par
00007     \{\par
00008 \par
00012         {\cf17 public} Rest()\par
00013         \{\par
00014             this.NoteType = {\cf22 "RST"};\par
00015             this.Bar = 0;\par
00016             this.Tick = 0;\par
00017             this.Update();\par
00018         \}\par
00019 \par
00026         {\cf17 public} Rest({\cf18 string} noteType, {\cf18 int} bar, {\cf18 int} startTime)\par
00027         \{\par
00028             this.NoteType = noteType;\par
00029             this.Bar = bar;\par
00030             this.Tick = startTime;\par
00031             this.Update();\par
00032         \}\par
00033 \par
00038         {\cf17 public} Rest(Note n)\par
00039         \{\par
00040             this.NoteType = {\cf22 "RST"};\par
00041             this.Bar = n.Bar;\par
00042             this.Tick = n.Tick;\par
00043             this.BPMChangeNotes = n.BPMChangeNotes;\par
00044             this.Update();\par
00045         \}\par
00046         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00047         \{\par
00048             {\cf19 throw} {\cf17 new} NotImplementedException();\par
00049         \}\par
00050 \par
00051         {\cf17 public} {\cf17 override} {\cf18 string} Compose({\cf18 int} format)\par
00052         \{\par
00053             {\cf20 // return "r_" + this.Tick;}\par
00054             {\cf19 return} {\cf22 ""};\par
00055         \}\par
00056 \par
00057         {\cf17 public} {\cf17 override} Note NewInstance()\par
00058         \{\par
00059             Note result = {\cf17 new} Rest({\cf17 this});\par
00060             {\cf19 return} result;\par
00061         \}\par
00062 \par
00063         {\cf17 public} {\cf17 override} {\cf18 string} NoteGenre => {\cf22 "REST"};\par
00064 \par
00065         {\cf17 public} {\cf17 override} {\cf18 bool} IsNote => {\cf17 false};\par
00066 \par
00067         {\cf17 public} {\cf17 override} {\cf18 string} NoteSpecificGenre => {\cf22 "REST"};\par
00068     \}\par
00069 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Simai.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Simai.cs}
{\xe \v Neskol/MaiLib/Simai.cs}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Simai}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Simai.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Simai.cs}
{\xe \v Neskol/MaiLib/Simai.cs}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Net.Http.Headers;\par
00002 \par
00003 {\cf17 namespace }MaiLib\par
00004 \{\par
00005     {\cf17 public} {\cf17 class }Simai : Chart\par
00006     \{\par
00010         {\cf17 public} Simai()\par
00011         \{\par
00012             this.Notes = {\cf17 new} List<Note>();\par
00013             this.BPMChanges = {\cf17 new} BPMChanges();\par
00014             this.MeasureChanges = {\cf17 new} MeasureChanges();\par
00015             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00016             this.Information = {\cf17 new} Dictionary<string, string>();\par
00017         \}\par
00018 \par
00023         {\cf17 public} Simai({\cf18 string} location)\par
00024         \{\par
00025             {\cf18 string}[] tokens = {\cf17 new} SimaiTokenizer().Tokens(location);\par
00026             Chart chart = {\cf17 new} SimaiParser().ChartOfToken(tokens);\par
00027             this.Notes = {\cf17 new} List<Note>(chart.Notes);\par
00028             this.BPMChanges = {\cf17 new} BPMChanges(chart.BPMChanges);\par
00029             this.MeasureChanges = {\cf17 new} MeasureChanges(chart.MeasureChanges);\par
00030             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00031             this.Information = {\cf17 new} Dictionary<string, string>(chart.Information);\par
00032             this.Update();\par
00033         \}\par
00034 \par
00041         {\cf17 public} Simai(List<Note> notes, BPMChanges bpmChanges, MeasureChanges measureChanges)\par
00042         \{\par
00043             this.Notes = notes;\par
00044             this.BPMChanges = bpmChanges;\par
00045             this.MeasureChanges = measureChanges;\par
00046             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00047             this.Information = {\cf17 new} Dictionary<string, string>();\par
00048             this.Update();\par
00049         \}\par
00050 \par
00051         {\cf17 public} Simai(Chart takenIn)\par
00052         \{\par
00053             this.Notes = takenIn.Notes;\par
00054             this.BPMChanges = takenIn.BPMChanges;\par
00055             this.MeasureChanges = takenIn.MeasureChanges;\par
00056             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00057             this.Information = {\cf17 new} Dictionary<string, string>();\par
00058             this.Update();\par
00059         \}\par
00060 \par
00061         {\cf17 public} {\cf17 override} {\cf18 string} Compose()\par
00062         \{\par
00063             {\cf18 string} result = {\cf22 ""};\par
00064             {\cf18 int} delayBar = (this.TotalDelay) / 384 + 2;\par
00065             {\cf20 //Console.WriteLine(chart.Compose());}\par
00066             {\cf20 //foreach (BPMChange x in chart.BPMChanges.ChangeNotes)}\par
00067             {\cf20 //\{}\par
00068             {\cf20 //    Console.WriteLine("BPM Change verified in " + x.Bar + " " + x.Tick + " of BPM" + x.BPM);}\par
00069             {\cf20 //\}}\par
00070             List<Note> firstBpm = {\cf17 new} List<Note>();\par
00071             {\cf19 foreach} (Note bpm {\cf19 in} this.Notes)\par
00072             \{\par
00073                 {\cf19 if} (bpm.NoteSpecificGenre.Equals({\cf22 "BPM"}))\par
00074                 \{\par
00075                     firstBpm.Add(bpm);\par
00076                 \}\par
00077             \}\par
00078             {\cf20 // if (firstBpm.Count > 1)}\par
00079             {\cf20 // \{}\par
00080             {\cf20 //     chart.Chart[0][0] = firstBpm[1];}\par
00081             {\cf20 // \}}\par
00082             {\cf19 foreach} (List<Note> bar {\cf19 in} this.StoredChart)\par
00083             \{\par
00084                 Note lastNote = {\cf17 new} MeasureChange();\par
00085                 {\cf18 int} currentQuaver = 0;\par
00086                 {\cf18 int} commaCompiled = 0;\par
00087                 {\cf20 //result += bar[1].Bar;}\par
00088                 {\cf19 foreach} (Note x {\cf19 in} bar)\par
00089                 \{\par
00090                     {\cf19 switch} (lastNote.NoteSpecificGenre)\par
00091                     \{\par
00092                         {\cf19 case} {\cf22 "MEASURE"}:\par
00093                             currentQuaver = (lastNote as MeasureChange ?? {\cf19 throw} {\cf17 new} Exception({\cf22 "This note is not measure change"})).Quaver;\par
00094                             {\cf19 break};\par
00095                         {\cf19 case} {\cf22 "BPM"}:\par
00096                             {\cf19 break};\par
00097                         {\cf19 case} {\cf22 "TAP"}:\par
00098                             {\cf19 if} (x.IsNote && ((!x.NoteSpecificGenre.Equals({\cf22 "SLIDE"})) && x.Tick == lastNote.Tick && !x.NoteGenre.Equals({\cf22 "BPM"})))\par
00099                             \{\par
00100                                 result += {\cf22 "/"};\par
00101                             \}\par
00102                             {\cf19 else}\par
00103                             \{\par
00104                                 result += {\cf22 ","};\par
00105                                 commaCompiled++;\par
00106                             \}\par
00107                             {\cf19 break};\par
00108                         {\cf19 case} {\cf22 "HOLD"}:\par
00109                             {\cf19 if} (x.IsNote && (!x.NoteSpecificGenre.Equals({\cf22 "SLIDE"})) && x.Tick == lastNote.Tick && !x.NoteGenre.Equals({\cf22 "BPM"}))\par
00110                             \{\par
00111                                 result += {\cf22 "/"};\par
00112                             \}\par
00113                             {\cf19 else}\par
00114                             \{\par
00115                                 result += {\cf22 ","};\par
00116                                 commaCompiled++;\par
00117                             \}\par
00118                             {\cf19 break};\par
00119                         {\cf19 case} {\cf22 "SLIDE_START"}:\par
00120                             {\cf20 // if (lastNote.ConsecutiveSlide == null)}\par
00121                             {\cf20 // \{}\par
00122                             {\cf20 //     result += "$";}\par
00123                             {\cf20 // \}}\par
00124                             {\cf20 // if (x.IsNote && (!x.NoteGenre.Equals("SLIDE")) && x.Tick == lastNote.Tick && !x.NoteGenre.Equals("BPM"))}\par
00125                             {\cf20 // \{}\par
00126                             {\cf20 //     result += "/";}\par
00127                             {\cf20 // \}}\par
00128                             {\cf20 // else if (x.NoteGenre != "SLIDE"||lastNote.Bar!=x.Bar || lastNote.Tick!=x.Tick)}\par
00129                             {\cf20 // \{}\par
00130                             {\cf20 //     result += ",";}\par
00131                             {\cf20 // \}}\par
00132                             {\cf19 if} (x.IsNote && ((!x.NoteSpecificGenre.Equals({\cf22 "SLIDE"})) && x.Tick == lastNote.Tick && !x.NoteGenre.Equals({\cf22 "BPM"})))\par
00133                             \{\par
00134                                 result += {\cf22 "/"};\par
00135                             \}\par
00136                             {\cf19 else} {\cf19 if} (x.IsNote && !x.NoteSpecificGenre.Equals({\cf22 "SLIDE"}) && !x.NoteGenre.Equals({\cf22 "BPM"}))\par
00137                             \{\par
00138                                 result += {\cf22 ","};\par
00139                                 commaCompiled++;\par
00140                             \}\par
00141                             {\cf19 else} {\cf19 if} (x.NoteGenre.Equals({\cf22 "REST"}))\par
00142                             \{\par
00143                                 result += {\cf22 ","};\par
00144                                 commaCompiled++;\par
00145                             \}\par
00146                             {\cf19 break};\par
00147                         {\cf19 case} {\cf22 "SLIDE"}:\par
00148                             {\cf19 if} (x.IsNote && (!x.NoteSpecificGenre.Equals({\cf22 "SLIDE"})) && x.Tick == lastNote.Tick && !x.NoteGenre.Equals({\cf22 "BPM"}))\par
00149                             \{\par
00150                                 result += {\cf22 "/"};\par
00151                             \}\par
00152                             {\cf19 else} {\cf19 if} (x.IsNote && x.NoteSpecificGenre.Equals({\cf22 "SLIDE"}) && x.Tick == lastNote.Tick && !x.NoteGenre.Equals({\cf22 "BPM"}))\par
00153                             \{\par
00154                                 result += {\cf22 "*"};\par
00155                             \}\par
00156                             {\cf20 // else if (x.IsNote && !lastNote.NoteSpecificType.Equals("SLIDE_START")&& x.Bar!=lastNote.Bar && x.Tick!=lastNote.Tick&& !x.NoteGenre.Equals("BPM"))}\par
00157                             {\cf20 // \{}\par
00158                             {\cf20 //     result += ",";}\par
00159                             {\cf20 // \}}\par
00160                             {\cf19 else}\par
00161                             \{\par
00162                                 result += {\cf22 ","};\par
00163                                 commaCompiled++;\par
00164                             \}\par
00165                             {\cf19 break};\par
00166                         {\cf19 default}:\par
00167                             result += {\cf22 ","};\par
00168                             commaCompiled++;\par
00169                             {\cf19 break};\par
00170                     \}\par
00171                     {\cf20 // if (x.NoteGenre.Equals("SLIDE"))}\par
00172                     {\cf20 // \{}\par
00173                     {\cf20 //     if (x.SlideStart==null)}\par
00174                     {\cf20 //     \{}\par
00175                     {\cf20 //         x.SlideStart = new Tap("NST",x.Bar,x.Tick,x.Key);}\par
00176                     {\cf20 //     \}}\par
00177                     {\cf20 // \}}\par
00178                     {\cf20 // if (x.SlideStart!=null&&x.SlideStart.NoteType.Equals("NST")&&(!lastNote.NoteGenre.Equals("SLIDE")||lastNote.NoteGenre.Equals("SLIDE")&&lastNote.TickStamp!=x.TickStamp&&!lastNote.Key.Equals(x)))}\par
00179                     {\cf20 // \{}\par
00180                     {\cf20 //     result += x.SlideStart.Compose(0);}\par
00181                     {\cf20 // \}}\par
00182                     result += x.Compose(0);\par
00183                     lastNote = x;\par
00184                     {\cf20 //if (x.NoteGenre().Equals("BPM"))}\par
00185                     {\cf20 //\{}\par
00186                     {\cf20 //    result+="("+ x.Bar + "_" + x.Tick + ")";}\par
00187                     {\cf20 //\}}\par
00188                 \}\par
00189                 result += {\cf22 ",\\n"};\par
00190                 commaCompiled++;\par
00191                 {\cf19 if} (commaCompiled != currentQuaver)\par
00192                 \{\par
00193                     Console.WriteLine({\cf22 "Notes in bar: "} + bar[0].Bar);\par
00194                     {\cf19 foreach} (Note x {\cf19 in} bar)\par
00195                     \{\par
00196                         Console.WriteLine(x.Compose(1));\par
00197                     \}\par
00198                     Console.WriteLine(result);\par
00199                     Console.WriteLine({\cf22 "Expected comma number: "} + currentQuaver);\par
00200                     Console.WriteLine({\cf22 "Actual comma number: "} + commaCompiled);\par
00201                     {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "COMMA COMPILED MISMATCH IN BAR "} + bar[0].Bar);\par
00202                 \}\par
00203             \}\par
00204             {\cf20 //if (delayBar>0)}\par
00205             {\cf20 //\{}\par
00206             {\cf20 //    Console.WriteLine("TOTAL DELAYED BAR: "+delayBar);}\par
00207             {\cf20 //\}}\par
00208             {\cf19 for} ({\cf18 int} i = 0; i < delayBar + 1; i++)\par
00209             \{\par
00210                 result += {\cf22 "\{1\},\\n"};\par
00211             \}\par
00212             result += {\cf22 "E\\n"};\par
00213             {\cf19 return} result;\par
00214         \}\par
00215 \par
00216         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00217         \{\par
00218             {\cf18 bool} result = {\cf17 this} == {\cf17 null};\par
00219             {\cf20 // Not yet implemented}\par
00220             {\cf19 return} result;\par
00221         \}\par
00222 \par
00229         {\cf17 public} {\cf17 override} {\cf18 string} Compose(BPMChanges bpm, MeasureChanges measure)\par
00230         \{\par
00231             BPMChanges sourceBPM = this.BPMChanges;\par
00232             MeasureChanges sourceMeasures = this.MeasureChanges;\par
00233             this.BPMChanges = bpm;\par
00234             this.MeasureChanges = measure;\par
00235             this.Update();\par
00236 \par
00237             {\cf18 string} result = this.Compose();\par
00238             this.BPMChanges = sourceBPM;\par
00239             this.MeasureChanges = sourceMeasures;\par
00240             this.Update();\par
00241             {\cf19 return} result;\par
00242         \}\par
00243     \}\par
00244 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/SimaiCompiler.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/SimaiCompiler.cs}
{\xe \v Neskol/MaiLib/SimaiCompiler.cs}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.SimaiCompiler}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compile various Ma2 Charts. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SimaiCompiler.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/SimaiCompiler.cs}
{\xe \v Neskol/MaiLib/SimaiCompiler.cs}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Collections.Immutable;\par
00002 {\cf17 using }System.ComponentModel;\par
00003 {\cf17 using }System.Runtime.InteropServices;\par
00004 {\cf17 using }System.Xml;\par
00005 \par
00006 {\cf17 namespace }MaiLib\par
00007 \{\par
00011     {\cf17 public} {\cf17 class }SimaiCompiler : Compiler\par
00012     \{\par
00018         {\cf17 public} SimaiCompiler({\cf18 string} location, {\cf18 string} targetLocation)\par
00019         \{\par
00020             {\cf19 for} ({\cf18 int} i = 0; i < 7; i++)\par
00021             \{\par
00022                 this.Charts.Add({\cf17 new} Simai());\par
00023             \}\par
00024             this.MusicXml = {\cf17 new} XmlInformation(location);\par
00025             this.Information = MusicXml.Information;\par
00026             {\cf20 //Construct Charts}\par
00027             \{\par
00028                 {\cf19 if} (!this.Information[{\cf22 "Easy"}].Equals({\cf22 ""}))\par
00029                 \{\par
00030                     Charts[0] = {\cf17 new} Ma2(location + this.Information.GetValueOrDefault({\cf22 "Easy Chart Path"}));\par
00031                 \}\par
00032                 {\cf19 if} (!this.Information[{\cf22 "Basic"}].Equals({\cf22 ""}))\par
00033                 \{\par
00034                     {\cf20 //Console.WriteLine("Have basic: "+ location + this.Information.GetValueOrDefault("Basic Chart Path"));}\par
00035                     Charts[1] = {\cf17 new} Ma2(location + this.Information.GetValueOrDefault({\cf22 "Basic Chart Path"}));\par
00036                 \}\par
00037                 {\cf19 if} (!this.Information[{\cf22 "Advanced"}].Equals({\cf22 ""}))\par
00038                 \{\par
00039                     Charts[2] = {\cf17 new} Ma2(location + this.Information.GetValueOrDefault({\cf22 "Advanced Chart Path"}));\par
00040                 \}\par
00041                 {\cf19 if} (!this.Information[{\cf22 "Expert"}].Equals({\cf22 ""}))\par
00042                 \{\par
00043                     Charts[3] = {\cf17 new} Ma2(location + this.Information.GetValueOrDefault({\cf22 "Expert Chart Path"}));\par
00044                 \}\par
00045                 {\cf19 if} (!this.Information[{\cf22 "Master"}].Equals({\cf22 ""}))\par
00046                 \{\par
00047                     Charts[4] = {\cf17 new} Ma2(location + this.Information.GetValueOrDefault({\cf22 "Master Chart Path"}));\par
00048                 \}\par
00049                 {\cf19 if} (!this.Information[{\cf22 "Remaster"}].Equals({\cf22 ""}))\par
00050                 \{\par
00051                     Charts[5] = {\cf17 new} Ma2(location + this.Information.GetValueOrDefault({\cf22 "Remaster Chart Path"}));\par
00052                 \}\par
00053                 {\cf19 if} (!this.Information[{\cf22 "Utage"}].Equals({\cf22 ""}))\par
00054                 \{\par
00055                     Charts[6] = {\cf17 new} Ma2(location + this.Information.GetValueOrDefault({\cf22 "Utage Chart Path"}));\par
00056                 \}\par
00057             \}\par
00058 \par
00059             {\cf18 string} result = this.Compose();\par
00060             {\cf20 //Console.WriteLine(result);}\par
00061             StreamWriter sw = {\cf17 new} StreamWriter(targetLocation + GlobalSep + {\cf22 "maidata.txt"}, {\cf17 false});\par
00062             \{\par
00063                 sw.WriteLine(result);\par
00064             \}\par
00065             sw.Close();\par
00066         \}\par
00067 \par
00074         {\cf17 public} SimaiCompiler({\cf18 string} location, {\cf18 string} targetLocation, {\cf18 bool} forUtage)\par
00075         \{\par
00076             {\cf18 string}[] ma2files = Directory.GetFiles(location, {\cf22 "*.ma2"});\par
00077             Charts = {\cf17 new} List<Chart>();\par
00078             this.MusicXml = {\cf17 new} XmlInformation(location);\par
00079             this.Information = MusicXml.Information;\par
00080             {\cf18 bool} rotate = {\cf17 false};\par
00081             {\cf18 string} rotateParameter = {\cf22 ""};\par
00082             {\cf19 foreach} (KeyValuePair<string,string> pair {\cf19 in} this.RotateDictionary)\par
00083             \{\par
00084                 {\cf19 if} (this.MusicXml.TrackID.Equals(pair.Key))\par
00085                 \{\par
00086                     rotateParameter = pair.Value;\par
00087                     rotate = {\cf17 true};\par
00088                 \}\par
00089             \}\par
00090             {\cf19 foreach} ({\cf18 string} ma2file {\cf19 in} ma2files)\par
00091             \{\par
00092                 Ma2 chartCandidate = {\cf17 new} Ma2(ma2file);\par
00093                 {\cf19 if} (rotate)\par
00094                 \{\par
00095                     chartCandidate.RotateNotes(rotateParameter);\par
00096                 \}\par
00097                 Charts.Add(chartCandidate);\par
00098             \}\par
00099 \par
00100             List<string> ma2List = {\cf17 new} List<string>();\par
00101             ma2List.AddRange(ma2files);\par
00102 \par
00103             {\cf18 string} result = this.Compose({\cf17 true}, ma2List);\par
00104             {\cf20 //Console.WriteLine(result);}\par
00105             StreamWriter sw = {\cf17 new} StreamWriter(targetLocation + GlobalSep + {\cf22 "maidata.txt"}, {\cf17 false});\par
00106             \{\par
00107                 sw.WriteLine(result);\par
00108             \}\par
00109             sw.Close();\par
00110         \}\par
00111 \par
00115         {\cf17 public} SimaiCompiler()\par
00116         \{\par
00117             {\cf19 for} ({\cf18 int} i = 0; i < 7; i++)\par
00118             \{\par
00119                 this.Charts.Add({\cf17 new} Simai());\par
00120             \}\par
00121             Charts = {\cf17 new} List<Chart>();\par
00122             Information = {\cf17 new} Dictionary<string, string>();\par
00123             this.MusicXml = {\cf17 new} XmlInformation();\par
00124         \}\par
00125 \par
00126         {\cf17 public} {\cf17 override} {\cf18 string} Compose()\par
00127         \{\par
00128             {\cf18 string} result = {\cf22 ""};\par
00129             {\cf20 //Add Information}\par
00130             \{\par
00131                 {\cf18 string} beginning = {\cf22 ""};\par
00132                 beginning += {\cf22 "&title="} + this.Information.GetValueOrDefault({\cf22 "Name"}) + this.Information.GetValueOrDefault({\cf22 "SDDX Suffix"}) + {\cf22 "\\n"};\par
00133                 beginning += {\cf22 "&wholebpm="} + this.Information.GetValueOrDefault({\cf22 "BPM"}) + {\cf22 "\\n"};\par
00134                 beginning += {\cf22 "&artist="} + this.Information.GetValueOrDefault({\cf22 "Composer"}) + {\cf22 "\\n"};\par
00135                 beginning += {\cf22 "&des="} + this.Information.GetValueOrDefault({\cf22 "Master Chart Maker"}) + {\cf22 "\\n"};\par
00136                 beginning += {\cf22 "&shortid="} + this.Information.GetValueOrDefault({\cf22 "Music ID"}) + {\cf22 "\\n"};\par
00137                 beginning += {\cf22 "&genre="} + this.Information.GetValueOrDefault({\cf22 "Genre"}) + {\cf22 "\\n"};\par
00138                 beginning += {\cf22 "&cabinet="};\par
00139                 {\cf19 if} (this.MusicXml.IsDXChart)\par
00140                 \{\par
00141                     beginning += {\cf22 "DX\\n"};\par
00142                 \}\par
00143                 {\cf19 else}\par
00144                 \{\par
00145                     beginning += {\cf22 "SD\\n"};\par
00146                 \}\par
00147                 beginning += {\cf22 "&version="} + this.MusicXml.TrackVersion + {\cf22 "\\n"};\par
00148                 beginning += {\cf22 "&ChartConverter=Neskol\\n"};\par
00149                 beginning += {\cf22 "&ChartConvertTool=MaichartConverter\\n"};\par
00150                 beginning += {\cf22 "&ChartConvertToolVersion=1.0.4.0\\n"};\par
00151                 beginning += {\cf22 "&smsg=See https://github.com/Neskol/MaichartConverter for updates\\n"};\par
00152                 beginning += {\cf22 "\\n"};\par
00153 \par
00154                 {\cf19 if} (this.Information.TryGetValue({\cf22 "Easy"}, out {\cf18 string}? easy) && {\cf17 this}.Information.TryGetValue({\cf22 "Easy Chart Maker"}, out {\cf18 string}? easyMaker))\par
00155                 \{\par
00156                     beginning += {\cf22 "&lv_1="} + easy + {\cf22 "\\n"};\par
00157                     beginning += {\cf22 "&des_1="} + easyMaker + {\cf22 "\\n"};\par
00158                     beginning += {\cf22 "\\n"};\par
00159                 \}\par
00160 \par
00161                 {\cf19 if} (this.Information.TryGetValue({\cf22 "Basic"}, out {\cf18 string}? basic) && {\cf17 this}.Information.TryGetValue({\cf22 "Basic Chart Maker"}, out {\cf18 string}? basicMaker))\par
00162                 \{\par
00163                     beginning += {\cf22 "&lv_2="} + basic + {\cf22 "\\n"};\par
00164                     beginning += {\cf22 "&des_2="} + basicMaker + {\cf22 "\\n"};\par
00165                     beginning += {\cf22 "\\n"};\par
00166                 \}\par
00167 \par
00168 \par
00169                 {\cf19 if} (this.Information.TryGetValue({\cf22 "Advanced"}, out {\cf18 string}? advance) && {\cf17 this}.Information.TryGetValue({\cf22 "Advanced Chart Maker"}, out {\cf18 string}? advanceMaker))\par
00170                 \{\par
00171                     beginning += {\cf22 "&lv_3="} + advance + {\cf22 "\\n"};\par
00172                     beginning += {\cf22 "&des_3="} + advanceMaker + {\cf22 "\\n"};\par
00173                     beginning += {\cf22 "\\n"};\par
00174                 \}\par
00175 \par
00176 \par
00177                 {\cf19 if} (this.Information.TryGetValue({\cf22 "Expert"}, out {\cf18 string}? expert) && {\cf17 this}.Information.TryGetValue({\cf22 "Expert Chart Maker"}, out {\cf18 string}? expertMaker))\par
00178                 \{\par
00179                     beginning += {\cf22 "&lv_4="} + expert + {\cf22 "\\n"};\par
00180                     beginning += {\cf22 "&des_4="} + expertMaker + {\cf22 "\\n"};\par
00181                     beginning += {\cf22 "\\n"};\par
00182                 \}\par
00183 \par
00184 \par
00185                 {\cf19 if} (this.Information.TryGetValue({\cf22 "Master"}, out {\cf18 string}? master) && {\cf17 this}.Information.TryGetValue({\cf22 "Master Chart Maker"}, out {\cf18 string}? masterMaker))\par
00186                 \{\par
00187                     beginning += {\cf22 "&lv_5="} + master + {\cf22 "\\n"};\par
00188                     beginning += {\cf22 "&des_5="} + masterMaker + {\cf22 "\\n"};\par
00189                     beginning += {\cf22 "\\n"};\par
00190                 \}\par
00191 \par
00192 \par
00193                 {\cf19 if} (this.Information.TryGetValue({\cf22 "Remaster"}, out {\cf18 string}? remaster) && {\cf17 this}.Information.TryGetValue({\cf22 "Remaster Chart Maker"}, out {\cf18 string}? remasterMaker))\par
00194                 \{\par
00195                     beginning += {\cf22 "&lv_6="} + remaster + {\cf22 "\\n"};\par
00196                     beginning += {\cf22 "&des_6="} + remasterMaker; beginning += {\cf22 "\\n"};\par
00197                     beginning += {\cf22 "\\n"};\par
00198                 \}\par
00199                 result += beginning;\par
00200             \}\par
00201             Console.WriteLine({\cf22 "Finished writing header of "} + this.Information.GetValueOrDefault({\cf22 "Name"}));\par
00202 \par
00203             {\cf20 //Compose Charts}\par
00204             \{\par
00205                 {\cf19 for} ({\cf18 int} i = 0; i < this.Charts.Count; i++)\par
00206                 \{\par
00207                     {\cf20 // Console.WriteLine("Processing chart: " + i);}\par
00208                     {\cf19 if} (!this.Information[this.Difficulty[i]].Equals({\cf22 ""}))\par
00209                     \{\par
00210                         {\cf18 string}? isDxChart = this.Information.GetValueOrDefault({\cf22 "SDDX Suffix"});\par
00211                         {\cf19 if} (!Charts[i].IsDXChart)\par
00212                         \{\par
00213                             isDxChart = {\cf22 ""};\par
00214                         \}\par
00215                         result += {\cf22 "&inote_"} + (i + 1) + {\cf22 "=\\n"};\par
00216                         result += this.Compose(Charts[i]);\par
00217                         this.CompiledChart.Add(this.Information.GetValueOrDefault({\cf22 "Name"}) + isDxChart + {\cf22 " ["} + {\cf17 this}.Difficulty[i] + {\cf22 "]"});\par
00218                     \}\par
00219                     result += {\cf22 "\\n"};\par
00220                 \}\par
00221             \}\par
00222             Console.WriteLine({\cf22 "Finished composing."});\par
00223             {\cf19 return} result;\par
00224         \}\par
00225 \par
00231         {\cf17 public} {\cf17 override} {\cf18 string} Compose(Chart chart)\par
00232         \{\par
00233             {\cf19 return} {\cf17 new} Simai(chart).Compose();\par
00234         \}\par
00235 \par
00241         {\cf17 public} {\cf17 override} {\cf18 string} Compose({\cf18 bool} isUtage, List<string> ma2files)\par
00242         \{\par
00243             {\cf18 string} result = {\cf22 ""};\par
00244             {\cf20 //Add Information}\par
00245 \par
00246             {\cf18 string} beginning = {\cf22 ""};\par
00247             beginning += {\cf22 "&title="} + this.Information.GetValueOrDefault({\cf22 "Name"}) + {\cf22 "[\'E5\'AE\'B4]"} + {\cf22 "\\n"};\par
00248             beginning += {\cf22 "&wholebpm="} + this.Information.GetValueOrDefault({\cf22 "BPM"}) + {\cf22 "\\n"};\par
00249             beginning += {\cf22 "&artist="} + this.Information.GetValueOrDefault({\cf22 "Composer"}) + {\cf22 "\\n"};\par
00250             beginning += {\cf22 "&des="} + this.Information.GetValueOrDefault({\cf22 "Master Chart Maker"}) + {\cf22 "\\n"};\par
00251             beginning += {\cf22 "&shortid="} + this.Information.GetValueOrDefault({\cf22 "Music ID"}) + {\cf22 "\\n"};\par
00252             beginning += {\cf22 "&genre="} + this.Information.GetValueOrDefault({\cf22 "Genre"}) + {\cf22 "\\n"};\par
00253             beginning += {\cf22 "&cabinet=SD"};\par
00254             beginning += {\cf22 "&version="} + this.MusicXml.TrackVersion + {\cf22 "\\n"};\par
00255             beginning += {\cf22 "&ChartConverter=Neskol\\n"};\par
00256             beginning += {\cf22 "&ChartConvertTool=MaichartConverter\\n"};\par
00257             beginning += {\cf22 "&ChartConvertToolVersion=1.0.4.0\\n"};\par
00258             beginning += {\cf22 "&smsg=See https://github.com/Neskol/MaichartConverter for updates\\n"};\par
00259             beginning += {\cf22 "\\n"};\par
00260 \par
00261             {\cf18 int} defaultChartIndex = 7;\par
00262             {\cf19 if} (ma2files.Count > 1)\par
00263             \{\par
00264                 defaultChartIndex = 2;\par
00265                 {\cf19 foreach} ({\cf18 string} ma2file {\cf19 in} ma2files)\par
00266                 \{\par
00267                     beginning += {\cf22 "&lv_"} + defaultChartIndex + {\cf22 "="} + {\cf22 "\'E5\'AE\'B4"} + {\cf22 "\\n"};\par
00268                     beginning += {\cf22 "\\n"};\par
00269                     defaultChartIndex++;\par
00270                 \}\par
00271                 defaultChartIndex = 0;\par
00272             \}\par
00273             {\cf19 else}\par
00274             \{\par
00275                 beginning += {\cf22 "&lv_"} + defaultChartIndex + {\cf22 "="} + {\cf22 "\'E5\'AE\'B4"} + {\cf22 "\\n"};\par
00276                 beginning += {\cf22 "\\n"};\par
00277             \}\par
00278 \par
00279 \par
00280 \par
00281             result += beginning;\par
00282             Console.WriteLine({\cf22 "Finished writing header of "} + this.Information.GetValueOrDefault({\cf22 "Name"}));\par
00283 \par
00284             {\cf20 //Compose Charts}\par
00285 \par
00286             {\cf19 if} (defaultChartIndex < 7)\par
00287             \{\par
00288                 {\cf19 for} ({\cf18 int} i = 0; i < this.Charts.Count; i++)\par
00289                 \{\par
00290                     {\cf20 // Console.WriteLine("Processing chart: " + i);}\par
00291                     {\cf18 string}? isDxChart = {\cf22 "Utage"};\par
00292                     result += {\cf22 "&inote_"} + (i + 2) + {\cf22 "=\\n"};\par
00293                     result += this.Compose(Charts[i]);\par
00294                     this.CompiledChart.Add(this.Information.GetValueOrDefault({\cf22 "Name"}) + isDxChart + {\cf22 " [\'E5\'AE\'B4]"});\par
00295                     result += {\cf22 "\\n"};\par
00296                 \}\par
00297             \}\par
00298             {\cf19 else}\par
00299             \{\par
00300                 result += {\cf22 "&inote_7=\\n"};\par
00301                 result += this.Compose(Charts[0]);\par
00302                 this.CompiledChart.Add(this.Information.GetValueOrDefault({\cf22 "Name"}) + {\cf22 "Utage"} + {\cf22 " [\'E5\'AE\'B4]"});\par
00303             \}\par
00304 \par
00305             Console.WriteLine({\cf22 "Finished composing."});\par
00306             {\cf19 return} result;\par
00307         \}\par
00308     \}\par
00309 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Simaiparser.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Simaiparser.cs}
{\xe \v Neskol/MaiLib/Simaiparser.cs}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.SimaiParser}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse charts in Simai format. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Simaiparser.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Simaiparser.cs}
{\xe \v Neskol/MaiLib/Simaiparser.cs}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Collections.Generic;\par
00002 {\cf17 using }System.Runtime.CompilerServices;\par
00003 \par
00004 {\cf17 namespace }MaiLib;\par
00005 \par
00009 {\cf17 public} {\cf17 class }SimaiParser : IParser\par
00010 \{\par
00014     {\cf17 public} {\cf17 static} {\cf18 int} MaximumDefinition = 384;\par
00015 \par
00016     {\cf17 private} Tap PreviousSlideStart;\par
00017 \par
00021     {\cf17 public} SimaiParser()\par
00022     \{\par
00023         PreviousSlideStart = {\cf17 new} Tap();\par
00024     \}\par
00025 \par
00031     {\cf17 public} BPMChanges BPMChangesOfToken({\cf18 string} token)\par
00032     \{\par
00033         {\cf19 throw} {\cf17 new} NotImplementedException({\cf22 "Simai does not have this component"});\par
00034     \}\par
00035 \par
00036     {\cf17 public} Chart ChartOfToken({\cf18 string}[] tokens)\par
00037     {\cf20 // Note: here chart will only return syntax after &inote_x= and each token is separated by ","}\par
00038     \{\par
00039         List<Note> notes = {\cf17 new} List<Note>();\par
00040         BPMChanges bpmChanges = {\cf17 new} BPMChanges();\par
00041         MeasureChanges measureChanges = {\cf17 new} MeasureChanges(4, 4);\par
00042         {\cf18 int} bar = 0;\par
00043         {\cf18 int} tick = 0;\par
00044         {\cf18 double} currentBPM = 0.0;\par
00045         {\cf18 int} tickStep = 0;\par
00046         {\cf19 for} ({\cf18 int} i = 0; i < tokens.Length; i++)\par
00047         \{\par
00048             List<string> eachPairCandidates = EachGroupOfToken(tokens[i]);\par
00049             {\cf19 foreach} ({\cf18 string} eachNote {\cf19 in} eachPairCandidates)\par
00050             \{\par
00051                 Note noteCandidate = NoteOfToken(eachNote, bar, tick, currentBPM);\par
00052                 {\cf18 bool} containsBPM = noteCandidate.NoteSpecificGenre.Equals({\cf22 "BPM"});\par
00053                 {\cf18 bool} containsMeasure = noteCandidate.NoteSpecificGenre.Equals({\cf22 "MEASURE"});\par
00054 \par
00055                 {\cf19 if} (containsBPM)\par
00056                 \{\par
00057                     {\cf20 // string bpmCandidate = eachNote.Replace("(", "").Replace(")", "");}\par
00058                     {\cf20 // noteCandidate = new BPMChange(bar, tick, Double.Parse(bpmCandidate));}\par
00059                     noteCandidate.Bar = bar;\par
00060                     noteCandidate.Tick = tick;\par
00061                     {\cf20 //notes.Add(changeNote);}\par
00062                     currentBPM = noteCandidate.BPM;\par
00063                     bpmChanges.Add((BPMChange)noteCandidate);\par
00064                 \}\par
00065                 {\cf19 else} {\cf19 if} (containsMeasure)\par
00066                 \{\par
00067                     \par
00068                     {\cf18 string} quaverCandidate = eachNote.Replace({\cf22 "\{"}, {\cf22 ""}).Replace({\cf22 "\}"}, {\cf22 ""});\par
00069                     tickStep = MaximumDefinition / Int32.Parse(quaverCandidate);\par
00070                     {\cf20 // MeasureChange changeNote = new MeasureChange(bar, tick, tickStep);}\par
00071                     {\cf20 //notes.Add(changeNote);}\par
00072                 \}\par
00073 \par
00074                 {\cf19 else} {\cf20 /*if (currentBPM > 0.0)*/}\par
00075                 \{\par
00076                     notes.Add(noteCandidate);\par
00077                 \}\par
00078             \}\par
00079 \par
00080 \par
00081             tick += tickStep;\par
00082             {\cf19 while} (tick >= MaximumDefinition)\par
00083             \{\par
00084                 tick -= MaximumDefinition;\par
00085                 bar++;\par
00086             \}\par
00087         \}\par
00088         Chart result = {\cf17 new} Simai(notes, bpmChanges, measureChanges);\par
00089         {\cf19 return} result;\par
00090     \}\par
00091 \par
00092     {\cf17 public} Hold HoldOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick, {\cf18 double} bpm)\par
00093     \{\par
00094         {\cf18 int} sustainSymbol = token.IndexOf({\cf22 "["});\par
00095         {\cf18 string} keyCandidate = token.Substring(0, sustainSymbol); {\cf20 //key candidate is like tap grammar}\par
00096         {\cf20 //Console.WriteLine(keyCandidate);}\par
00097         {\cf18 string} sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00098         {\cf20 //Console.WriteLine(sustainCandidate);}\par
00099         {\cf18 string} key = {\cf22 ""};\par
00100         {\cf18 string} holdType = {\cf22 ""};\par
00101         {\cf18 int} specialEffect = 0;\par
00102         {\cf20 // bool sustainIsSecond = sustainCandidate.Contains("##");}\par
00103         {\cf20 // if (sustainIsSecond)}\par
00104         {\cf20 // \{}\par
00105         {\cf20 //     string[] secondCandidates = sustainCandidate.Split("##");}\par
00106 \par
00107         {\cf20 // \}}\par
00108         {\cf19 if} (keyCandidate.Contains({\cf22 "C"}))\par
00109         \{\par
00110             holdType = {\cf22 "THO"};\par
00111             key = {\cf22 "0C"};\par
00112             {\cf19 if} (keyCandidate.Contains({\cf22 "f"}))\par
00113             \{\par
00114                 specialEffect = 1;\par
00115             \}\par
00116         \}\par
00117         {\cf19 else} {\cf19 if} (keyCandidate.Contains({\cf22 "x"}))\par
00118         \{\par
00119             key = keyCandidate.Replace({\cf22 "h"}, {\cf22 ""});\par
00120             key = key.Replace({\cf22 "x"}, {\cf22 ""});\par
00121             Console.WriteLine(key);\par
00122             key = ({\cf18 int}.Parse(key) - 1).ToString();\par
00123             holdType = {\cf22 "XHO"};\par
00124         \}\par
00125         {\cf19 else}\par
00126         \{\par
00127             key = keyCandidate.Replace({\cf22 "h"}, {\cf22 ""});\par
00128             {\cf20 //Console.WriteLine(key);}\par
00129             key = ({\cf18 int}.Parse(key) - 1).ToString();\par
00130             holdType = {\cf22 "HLD"};\par
00131         \}\par
00132         {\cf18 string}[] lastTimeCandidates = sustainCandidate.Split({\cf22 ":"});\par
00133         {\cf18 int} quaver = {\cf18 int}.Parse(lastTimeCandidates[0]);\par
00134         {\cf18 int} lastTick = 384 / quaver;\par
00135         {\cf18 int} times = {\cf18 int}.Parse(lastTimeCandidates[1]);\par
00136         lastTick *= times;\par
00137         Hold candidate;\par
00138         key.Replace({\cf22 "h"}, {\cf22 ""});\par
00139         {\cf20 //Console.WriteLine(key);}\par
00140         {\cf19 if} (holdType.Equals({\cf22 "THO"}))\par
00141         \{\par
00142             candidate = {\cf17 new} Hold(holdType, bar, tick, key, lastTick, specialEffect, {\cf22 "M1"});\par
00143         \}\par
00144         {\cf19 else}\par
00145         \{\par
00146             candidate = {\cf17 new} Hold(holdType, bar, tick, key, lastTick);\par
00147         \}\par
00148         candidate.BPM = bpm;\par
00149         {\cf19 return} candidate;\par
00150     \}\par
00151 \par
00152     {\cf17 public} Hold HoldOfToken({\cf18 string} token)\par
00153     \{\par
00154         {\cf19 throw} {\cf17 new} NotImplementedException();\par
00155     \}\par
00156 \par
00157     {\cf17 public} MeasureChanges MeasureChangesOfToken({\cf18 string} token)\par
00158     \{\par
00159         {\cf19 throw} {\cf17 new} NotImplementedException();\par
00160     \}\par
00161 \par
00162     {\cf17 public} Note NoteOfToken({\cf18 string} token)\par
00163     \{\par
00164         Note result = {\cf17 new} Rest();\par
00165         {\cf18 bool} isRest = token.Equals({\cf22 ""});\par
00166         {\cf18 bool} isBPM = token.Contains({\cf22 ")"});\par
00167         {\cf18 bool} isMeasure = token.Contains({\cf22 "\}"});\par
00168         {\cf18 bool} isSlide = token.Contains({\cf22 "-"}) ||\par
00169         token.Contains({\cf22 "v"}) ||\par
00170         token.Contains({\cf22 "w"}) ||\par
00171         token.Contains({\cf22 "<"}) ||\par
00172         token.Contains({\cf22 ">"}) ||\par
00173         token.Contains({\cf22 "p"}) ||\par
00174         token.Contains({\cf22 "q"}) ||\par
00175         token.Contains({\cf22 "s"}) ||\par
00176         token.Contains({\cf22 "z"}) ||\par
00177         token.Contains({\cf22 "V"});\par
00178         {\cf18 bool} isHold = !isSlide && token.Contains({\cf22 "["});\par
00179         {\cf19 if} (isSlide)\par
00180         \{\par
00181             result = SlideOfToken(token);\par
00182         \}\par
00183         {\cf19 else} {\cf19 if} (isHold)\par
00184         \{\par
00185             result = HoldOfToken(token);\par
00186         \}\par
00187         {\cf19 else} {\cf19 if} (isBPM)\par
00188         \{\par
00189             {\cf20 //throw new NotImplementedException("IsBPM is not supported in simai");}\par
00190             {\cf20 // string bpmCandidate = token;}\par
00191             {\cf20 // bpmCandidate.Replace("(", "");}\par
00192             {\cf20 // bpmCandidate.Replace(")", "");}\par
00193             {\cf20 //result = new BPMChange(bar, tick, Double.Parse(bpmCandidate));}\par
00194         \}\par
00195         {\cf19 else} {\cf19 if} (isMeasure)\par
00196         \{\par
00197             {\cf19 throw} {\cf17 new} NotImplementedException({\cf22 "IsMeasure is not supported in simai"});\par
00198             {\cf20 // string quaverCandidate = token;}\par
00199             {\cf20 // quaverCandidate.Replace("\{", "");}\par
00200             {\cf20 // quaverCandidate.Replace("\}", "");}\par
00201             {\cf20 //result = new MeasureChange(bar, tick, Int32.Parse(quaverCandidate));}\par
00202         \}\par
00203         {\cf19 else}\par
00204         \{\par
00205             result = TapOfToken(token);\par
00206         \}\par
00207         {\cf19 return} result;\par
00208     \}\par
00209 \par
00210     {\cf17 public} Note NoteOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick, {\cf18 double} bpm)\par
00211     \{\par
00212         Note result = {\cf17 new} Rest({\cf22 "RST"}, bar, tick);\par
00213         {\cf18 bool} isRest = token.Equals({\cf22 ""});\par
00214         {\cf18 bool} isBPM = token.Contains({\cf22 ")"});\par
00215         {\cf18 bool} isMeasure = token.Contains({\cf22 "\}"});\par
00216         {\cf18 bool} isSlide = token.Contains({\cf22 "-"}) ||\par
00217         token.Contains({\cf22 "v"}) ||\par
00218         token.Contains({\cf22 "w"}) ||\par
00219         token.Contains({\cf22 "<"}) ||\par
00220         token.Contains({\cf22 ">"}) ||\par
00221         token.Contains({\cf22 "p"}) ||\par
00222         token.Contains({\cf22 "q"}) ||\par
00223         token.Contains({\cf22 "s"}) ||\par
00224         token.Contains({\cf22 "z"}) ||\par
00225         token.Contains({\cf22 "V"});\par
00226         {\cf18 bool} isHold = !isSlide && token.Contains({\cf22 "["});\par
00227 \par
00228         {\cf19 if} (!isRest)\par
00229         \{\par
00230             {\cf19 if} (isSlide)\par
00231             \{\par
00232                 result = SlideOfToken(token, bar, tick, PreviousSlideStart, bpm);\par
00233             \}\par
00234             {\cf19 else} {\cf19 if} (isHold)\par
00235             \{\par
00236                 result = HoldOfToken(token, bar, tick, bpm);\par
00237             \}\par
00238             {\cf19 else} {\cf19 if} (isBPM)\par
00239             \{\par
00240                 {\cf18 string} bpmCandidate = token.Replace({\cf22 "("}, {\cf22 ""}).Replace({\cf22 ")"}, {\cf22 ""});\par
00241                 result = {\cf17 new} BPMChange(bar, tick, Double.Parse(bpmCandidate));\par
00242             \}\par
00243             {\cf19 else} {\cf19 if} (isMeasure)\par
00244             \{\par
00245                 {\cf18 string} quaverCandidate = token.Replace({\cf22 "\{"}, {\cf22 ""}).Replace({\cf22 "\}"}, {\cf22 ""});\par
00246                 result = {\cf17 new} MeasureChange(bar, tick, Int32.Parse(quaverCandidate));\par
00247             \}\par
00248             {\cf19 else} {\cf19 if} (!token.Equals({\cf22 "E"}) && !token.Equals({\cf22 ""}))\par
00249             \{\par
00250                 result = TapOfToken(token, bar, tick, bpm);\par
00251                 {\cf19 if} (result.NoteSpecificGenre.Equals({\cf22 "SLIDE_START"}))\par
00252                 \{\par
00253                     PreviousSlideStart = (Tap)result;\par
00254                 \}\par
00255             \}\par
00256         \}\par
00257 \par
00258         {\cf19 return} result;\par
00259     \}\par
00260 \par
00261     {\cf17 public} Slide SlideOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick, Note slideStart, {\cf18 double} bpm)\par
00262     \{\par
00263         Note slideStartCandidate = {\cf17 new} Tap(slideStart);\par
00264         Note result;\par
00265         {\cf18 string} endKeyCandidate = {\cf22 ""};\par
00266         {\cf18 int} sustainSymbol = 0;\par
00267         {\cf18 string} sustainCandidate = {\cf22 ""};\par
00268         {\cf18 string} noteType = {\cf22 ""};\par
00269         {\cf20 //Parse first section}\par
00270         {\cf19 if} (token.Contains({\cf22 "qq"}))\par
00271         \{\par
00272             endKeyCandidate = token.Substring(2, 1);\par
00273             sustainSymbol = token.IndexOf({\cf22 "["});\par
00274             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00275             noteType = {\cf22 "SXR"};\par
00276         \}\par
00277         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "q"}))\par
00278         \{\par
00279             endKeyCandidate = token.Substring(1, 1);\par
00280             sustainSymbol = token.IndexOf({\cf22 "["});\par
00281             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00282             noteType = {\cf22 "SUR"};\par
00283         \}\par
00284         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "pp"}))\par
00285         \{\par
00286             endKeyCandidate = token.Substring(2, 1);\par
00287             sustainSymbol = token.IndexOf({\cf22 "["});\par
00288             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00289             noteType = {\cf22 "SXL"};\par
00290         \}\par
00291         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "p"}))\par
00292         \{\par
00293             endKeyCandidate = token.Substring(1, 1);\par
00294             sustainSymbol = token.IndexOf({\cf22 "["});\par
00295             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00296             noteType = {\cf22 "SUL"};\par
00297         \}\par
00298         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "v"}))\par
00299         \{\par
00300             endKeyCandidate = token.Substring(1, 1);\par
00301             sustainSymbol = token.IndexOf({\cf22 "["});\par
00302             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00303             noteType = {\cf22 "SV_"};\par
00304         \}\par
00305         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "w"}))\par
00306         \{\par
00307             endKeyCandidate = token.Substring(1, 1);\par
00308             sustainSymbol = token.IndexOf({\cf22 "["});\par
00309             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00310             noteType = {\cf22 "SF_"};\par
00311         \}\par
00312         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "<"}))\par
00313         \{\par
00314             endKeyCandidate = token.Substring(1, 1);\par
00315             sustainSymbol = token.IndexOf({\cf22 "["});\par
00316             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00317             {\cf19 if} (PreviousSlideStart.Key.Equals({\cf22 "0"}) ||\par
00318                 PreviousSlideStart.Key.Equals({\cf22 "1"}) ||\par
00319                 PreviousSlideStart.Key.Equals({\cf22 "6"}) ||\par
00320                 PreviousSlideStart.Key.Equals({\cf22 "7"}))\par
00321             \{\par
00322                 noteType = {\cf22 "SCL"};\par
00323             \}\par
00324             {\cf19 else} noteType = {\cf22 "SCR"};\par
00325 \par
00326         \}\par
00327         {\cf19 else} {\cf19 if} (token.Contains({\cf22 ">"}))\par
00328         \{\par
00329             endKeyCandidate = token.Substring(1, 1);\par
00330             sustainSymbol = token.IndexOf({\cf22 "["});\par
00331             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00332             {\cf19 if} (PreviousSlideStart.Key.Equals({\cf22 "0"}) ||\par
00333                 PreviousSlideStart.Key.Equals({\cf22 "1"}) ||\par
00334                 PreviousSlideStart.Key.Equals({\cf22 "6"}) ||\par
00335                 PreviousSlideStart.Key.Equals({\cf22 "7"}))\par
00336             \{\par
00337                 noteType = {\cf22 "SCR"};\par
00338             \}\par
00339             {\cf19 else} noteType = {\cf22 "SCL"};\par
00340 \par
00341         \}\par
00342         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "s"}))\par
00343         \{\par
00344             endKeyCandidate = token.Substring(1, 1);\par
00345             sustainSymbol = token.IndexOf({\cf22 "["});\par
00346             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00347             noteType = {\cf22 "SSL"};\par
00348         \}\par
00349         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "z"}))\par
00350         \{\par
00351             endKeyCandidate = token.Substring(1, 1);\par
00352             sustainSymbol = token.IndexOf({\cf22 "["});\par
00353             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00354             noteType = {\cf22 "SSR"};\par
00355         \}\par
00356         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "V"}))\par
00357         \{\par
00358             endKeyCandidate = token.Substring(2, 1);\par
00359             {\cf18 int} sllCandidate = {\cf18 int}.Parse(slideStartCandidate.Key) + 2;\par
00360             {\cf18 int} slrCandidate = {\cf18 int}.Parse(slideStartCandidate.Key) - 2;\par
00361             {\cf18 int} inflectionCandidate = {\cf18 int}.Parse(token.Substring(1, 1)) - 1;\par
00363             {\cf20 //if (inflectionCandidate < 0)}\par
00364             {\cf20 //\{}\par
00365             {\cf20 //    inflectionCandidate += 8;}\par
00366             {\cf20 //\}}\par
00367             {\cf20 //else if (inflectionCandidate > 7)}\par
00368             {\cf20 //\{}\par
00369             {\cf20 //    inflectionCandidate -= 8;}\par
00370             {\cf20 //\}}\par
00371 \par
00372             {\cf20 //Revalue SLL and SLR candidate}\par
00373             {\cf19 if} (sllCandidate < 0)\par
00374             \{\par
00375                 sllCandidate += 8;\par
00376             \}\par
00377             {\cf19 else} {\cf19 if} (sllCandidate > 7)\par
00378             \{\par
00379                 sllCandidate -= 8;\par
00380             \}\par
00381             {\cf19 if} (slrCandidate < 0)\par
00382             \{\par
00383                 slrCandidate += 8;\par
00384             \}\par
00385             {\cf19 else} {\cf19 if} (slrCandidate > 7)\par
00386             \{\par
00387                 slrCandidate -= 8;\par
00388             \}\par
00389 \par
00390             {\cf18 bool} isSLL = sllCandidate == inflectionCandidate;\par
00391             {\cf18 bool} isSLR = slrCandidate == inflectionCandidate;\par
00392             sustainSymbol = token.IndexOf({\cf22 "["});\par
00393             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00394             {\cf19 if} (isSLL)\par
00395             \{\par
00396                 noteType = {\cf22 "SLL"};\par
00397             \}\par
00398             {\cf19 else} {\cf19 if} (isSLR)\par
00399             \{\par
00400                 noteType = {\cf22 "SLR"};\par
00401             \}\par
00402             {\cf19 if} (!(isSLL || isSLR))\par
00403             \{\par
00404                 Console.WriteLine({\cf22 "Start Key:"} + slideStartCandidate.Key);\par
00405                 Console.WriteLine({\cf22 "Expected inflection point: SLL for "} + sllCandidate + {\cf22 " and SLR for "} + slrCandidate);\par
00406                 Console.WriteLine({\cf22 "Actual: "} + inflectionCandidate);\par
00407                 {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "THE INFLECTION POINT GIVEN IS NOT MATCHING!"});\par
00408             \}\par
00409         \}\par
00410 \par
00411         {\cf19 else} {\cf19 if} (token.Contains({\cf22 "-"}))\par
00412         \{\par
00413             endKeyCandidate = token.Substring(1, 1);\par
00414             sustainSymbol = token.IndexOf({\cf22 "["});\par
00415             sustainCandidate = token.Substring(sustainSymbol + 1).Split({\cf22 "]"})[0]; {\cf20 //sustain candidate is like 1:2}\par
00416             noteType = {\cf22 "SI_"};\par
00417         \}\par
00418 \par
00419         {\cf20 //Console.WriteLine("Key Candidate: "+keyCandidate);}\par
00420         {\cf18 int} fixedKeyCandidate = {\cf18 int}.Parse(endKeyCandidate) - 1;\par
00421         {\cf19 if} (fixedKeyCandidate < 0)\par
00422         \{\par
00423             endKeyCandidate += 8;\par
00424         \}\par
00425         {\cf18 bool} isSecond = sustainCandidate.Contains({\cf22 "##"});\par
00426         {\cf19 if} (!isSecond)\par
00427         \{\par
00428             {\cf18 string}[] lastTimeCandidates = sustainCandidate.Split({\cf22 ":"});\par
00429             {\cf18 int} quaver = {\cf18 int}.Parse(lastTimeCandidates[0]);\par
00430             {\cf18 int} lastTick = 384 / quaver;\par
00431             {\cf18 int} times = {\cf18 int}.Parse(lastTimeCandidates[1]);\par
00432             lastTick *= times;\par
00433             result = {\cf17 new} Slide(noteType, bar, tick, slideStartCandidate.Key, 96, lastTick, fixedKeyCandidate.ToString());\par
00434             result.SlideStart = slideStartCandidate;\par
00435         \}\par
00436         {\cf19 else}\par
00437         \{\par
00438             {\cf18 string}[] timeCandidates = sustainCandidate.Split({\cf22 "##"});\par
00439             {\cf18 double} waitLengthCandidate = {\cf18 double}.Parse(timeCandidates[0]);\par
00440             {\cf18 double} lastLengthCandidate = {\cf18 double}.Parse(timeCandidates[1]);\par
00441             {\cf18 double} tickUnit = Chart.GetBPMTimeUnit(bpm);\par
00442             {\cf18 int} waitLength = (int)(waitLengthCandidate / tickUnit);\par
00443             {\cf18 int} lastLength = (int)(lastLengthCandidate / tickUnit);\par
00444             result = {\cf17 new} Slide(noteType, bar, tick, slideStartCandidate.Key, waitLength, lastLength, fixedKeyCandidate.ToString());\par
00445             result.CalculatedWaitTime = waitLengthCandidate;\par
00446             result.CalculatedLastTime = lastLengthCandidate;\par
00447             result.SlideStart = slideStartCandidate;\par
00448         \}\par
00449 \par
00450         result.BPM = bpm;\par
00451         {\cf19 return} (Slide)result;\par
00452     \}\par
00453 \par
00454     {\cf17 public} Slide SlideOfToken({\cf18 string} token)\par
00455     \{\par
00456         {\cf19 throw} {\cf17 new} NotImplementedException();\par
00457     \}\par
00458 \par
00459     {\cf17 public} Tap TapOfToken({\cf18 string} token, {\cf18 int} bar, {\cf18 int} tick, {\cf18 double} bpm)\par
00460     \{\par
00461         {\cf18 bool} isBreak = token.Contains({\cf22 "b"});\par
00462         {\cf18 bool} isEXTap = token.Contains({\cf22 "x"});\par
00463         {\cf18 bool} isTouch = token.Contains({\cf22 "A"}) || \par
00464         token.Contains({\cf22 "B"}) ||\par
00465         token.Contains({\cf22 "C"}) ||\par
00466         token.Contains({\cf22 "D"}) ||\par
00467         token.Contains({\cf22 "E"}) ||\par
00468         token.Contains({\cf22 "F"});\par
00469         Tap result = {\cf17 new} Tap();\par
00470         {\cf19 if} (isTouch)\par
00471         \{\par
00472             {\cf18 bool} hasSpecialEffect = token.Contains({\cf22 "f"});\par
00473             {\cf18 int} keyCandidate = Int32.Parse(token.Substring(1, 1)) - 1;\par
00474             {\cf19 if} (hasSpecialEffect)\par
00475             \{\par
00476                 result = {\cf17 new} Tap({\cf22 "TTP"}, bar, tick, token.Substring(0, 1) + keyCandidate.ToString(), 1, {\cf22 "M1"});\par
00477             \}\par
00478             {\cf19 else} result = {\cf17 new} Tap({\cf22 "TTP"}, bar, tick, token.Substring(0, 1) + keyCandidate.ToString(), 0, {\cf22 "M1"});\par
00479         \}\par
00480         {\cf19 else} {\cf19 if} (isEXTap)\par
00481         \{\par
00482             {\cf18 int} keyCandidate = Int32.Parse(token.Substring(0, 1)) - 1;\par
00483             {\cf19 if} (token.Contains({\cf22 "_"}))\par
00484             \{\par
00485                 result = {\cf17 new} Tap({\cf22 "XST"}, bar, tick, keyCandidate.ToString());\par
00486             \}\par
00487             {\cf19 else}\par
00488                 result = {\cf17 new} Tap({\cf22 "XTP"}, bar, tick, keyCandidate.ToString());\par
00489         \}\par
00490         {\cf19 else} {\cf19 if} (isBreak)\par
00491         \{\par
00492             {\cf18 int} keyCandidate = Int32.Parse(token.Substring(0, 1)) - 1;\par
00493             {\cf19 if} (token.Contains({\cf22 "_"}))\par
00494             \{\par
00495                 result = {\cf17 new} Tap({\cf22 "BST"}, bar, tick, keyCandidate.ToString());\par
00496             \}\par
00497             {\cf19 else}\par
00498                 result = {\cf17 new} Tap({\cf22 "BRK"}, bar, tick, keyCandidate.ToString());\par
00499         \}\par
00500         {\cf19 else}\par
00501         \{\par
00502             {\cf18 int} keyCandidate = Int32.Parse(token.Substring(0, 1)) - 1;\par
00503             {\cf19 if} (token.Contains({\cf22 "_"}))\par
00504             \{\par
00505                 result = {\cf17 new} Tap({\cf22 "STR"}, bar, tick, keyCandidate.ToString());\par
00506             \}\par
00507             {\cf19 else} {\cf19 if} (!token.Equals({\cf22 ""}))\par
00508             \{\par
00509                 result = {\cf17 new} Tap({\cf22 "TAP"}, bar, tick, keyCandidate.ToString());\par
00510             \}\par
00511 \par
00512         \}\par
00513         result.BPM = bpm;\par
00514         {\cf19 return} result;\par
00515     \}\par
00516 \par
00517     {\cf17 public} Tap TapOfToken({\cf18 string} token)\par
00518     \{\par
00519         {\cf19 throw} {\cf17 new} NotImplementedException();\par
00520     \}\par
00521 \par
00527     {\cf17 public} {\cf17 static} List<string> EachGroupOfToken({\cf18 string} token)\par
00528     \{\par
00529         List<string> result = {\cf17 new} List<string>();\par
00530         {\cf18 bool} isSlide = token.Contains({\cf22 "-"}) ||\par
00531         token.Contains({\cf22 "v"}) ||\par
00532         token.Contains({\cf22 "w"}) ||\par
00533         token.Contains({\cf22 "<"}) ||\par
00534         token.Contains({\cf22 ">"}) ||\par
00535         token.Contains({\cf22 "p"}) ||\par
00536         token.Contains({\cf22 "q"}) ||\par
00537         token.Contains({\cf22 "s"}) ||\par
00538         token.Contains({\cf22 "z"}) ||\par
00539         token.Contains({\cf22 "V"});\par
00540         {\cf19 if} (token.Contains({\cf22 "/"}))\par
00541         \{\par
00542             {\cf18 string}[] candidate = token.Split({\cf22 "/"});\par
00543             {\cf19 foreach} ({\cf18 string} tokenCandidate {\cf19 in} candidate)\par
00544             \{\par
00545                 result.AddRange(EachGroupOfToken(tokenCandidate));\par
00546             \}\par
00547         \}\par
00548         {\cf19 else} {\cf19 if} (token.Contains({\cf22 ")"}) || token.Contains({\cf22 "\}"}))\par
00549         \{\par
00550             List<string> resultCandidate = ExtractParentheses(token);\par
00551             List<string> fixedCandidate = {\cf17 new}();\par
00552             {\cf19 foreach} ({\cf18 string} candidate {\cf19 in} resultCandidate)\par
00553             \{\par
00554                 fixedCandidate.AddRange(ExtractParentheses(candidate));\par
00555             \}\par
00556             {\cf19 foreach} ({\cf18 string} candidate {\cf19 in} fixedCandidate)\par
00557             \{\par
00558                 result.AddRange(ExtractEachSlides(candidate));\par
00559             \}\par
00560         \} {\cf20 //lol this is the most stupid code I have ever wrote}\par
00561         {\cf19 else} {\cf19 if} (Int32.TryParse(token, out {\cf18 int} eachPair))\par
00562         \{\par
00563             {\cf18 char}[] eachPairs = token.ToCharArray();\par
00564             {\cf19 foreach} ({\cf18 char} x {\cf19 in} eachPairs)\par
00565             \{\par
00566                 result.Add(x.ToString());\par
00567             \}\par
00568         \}\par
00569         {\cf19 else} {\cf19 if} (isSlide)\par
00570         \{\par
00571             {\cf20 //List<string> candidate = EachGroupOfToken(token);}\par
00572             {\cf20 //foreach (string item in candidate)}\par
00573             {\cf20 //\{}\par
00574             {\cf20 //    result.AddRange(ExtractEachSlides(item));}\par
00575             {\cf20 //\}}\par
00576             result.AddRange(ExtractEachSlides(token));\par
00577         \}\par
00578         {\cf19 else} result.Add(token);\par
00579         {\cf19 return} result;\par
00580     \}\par
00581 \par
00587     {\cf17 public} {\cf17 static} List<string> ExtractParentheses({\cf18 string} token)\par
00588     \{\par
00589         List<string> result = {\cf17 new} List<string>();\par
00590         {\cf18 bool} containsBPM = token.Contains({\cf22 ")"});\par
00591         {\cf18 bool} containsMeasure = token.Contains({\cf22 "\}"});\par
00592 \par
00593         {\cf19 if} (containsBPM)\par
00594         \{\par
00595             {\cf18 string}[] tokenCandidate = token.Split({\cf22 ")"});\par
00596             List<string> tokenResult = {\cf17 new}();\par
00597             {\cf19 for} ({\cf18 int} i = 0; i < tokenCandidate.Length; i++)\par
00598             \{\par
00599                 {\cf18 string} x = tokenCandidate[i];\par
00600                 {\cf19 if} (x.Contains({\cf22 "("}))\par
00601                 \{\par
00602                     x += {\cf22 ")"};\par
00603                 \}\par
00604                 {\cf19 if} (!x.Equals({\cf22 ""}))\par
00605                 \{\par
00606                     tokenResult.Add(x);\par
00607                 \}\par
00608             \}\par
00609             result.AddRange(tokenResult);\par
00610         \}\par
00611         {\cf19 else} {\cf19 if} (containsMeasure)\par
00612         \{\par
00613             {\cf18 string}[] tokenCandidate = token.Split({\cf22 "\}"});\par
00614             List<string> tokenResult = {\cf17 new}();\par
00615             {\cf19 for} ({\cf18 int} i = 0; i < tokenCandidate.Length; i++)\par
00616             \{\par
00617                 {\cf18 string} x = tokenCandidate[i];\par
00618                 {\cf19 if} (x.Contains({\cf22 "\{"}))\par
00619                 \{\par
00620                     x += {\cf22 "\}"};\par
00621                 \}\par
00622                 {\cf19 if} (!x.Equals({\cf22 ""}))\par
00623                 \{\par
00624                     tokenResult.Add(x);\par
00625                 \}\par
00626             \}\par
00627             result.AddRange(tokenResult);\par
00628         \}\par
00629         {\cf19 else}\par
00630         \{\par
00631             result.Add(token);\par
00632         \}\par
00633         {\cf19 return} result;\par
00634     \}\par
00635 \par
00641     {\cf17 public} {\cf17 static} List<string> ExtractEachSlides({\cf18 string} token)\par
00642     \{\par
00643         {\cf18 bool} isSlide = token.Contains({\cf22 "-"}) ||\par
00644         token.Contains({\cf22 "v"}) ||\par
00645         token.Contains({\cf22 "w"}) ||\par
00646         token.Contains({\cf22 "<"}) ||\par
00647         token.Contains({\cf22 ">"}) ||\par
00648         token.Contains({\cf22 "p"}) ||\par
00649         token.Contains({\cf22 "q"}) ||\par
00650         token.Contains({\cf22 "s"}) ||\par
00651         token.Contains({\cf22 "z"}) ||\par
00652         token.Contains({\cf22 "V"});\par
00653         List<string> result = {\cf17 new} List<string>();\par
00654         {\cf19 if} (!isSlide)\par
00655         \{\par
00656             result.Add(token);\par
00657         \}\par
00658         {\cf19 else}\par
00659         \{\par
00660             {\cf19 if} (!token.Contains({\cf22 "*"}))\par
00661             \{\par
00662                 {\cf18 string} splitCandidate = token;\par
00663                 {\cf20 //Parse first section}\par
00664                 {\cf19 if} (splitCandidate.Contains({\cf22 "qq"}))\par
00665                 \{\par
00666                     result.AddRange(splitCandidate.Split({\cf22 "qq"}));\par
00667                     result[0] = result[0] + {\cf22 "_"};\par
00668                     result[1] = {\cf22 "qq"} + result[1];\par
00669                 \}\par
00670                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "q"}))\par
00671                 \{\par
00672                     result.AddRange(splitCandidate.Split({\cf22 "q"}));\par
00673                     result[0] = result[0] + {\cf22 "_"};\par
00674                     result[1] = {\cf22 "q"} + result[1];\par
00675                 \}\par
00676                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "pp"}))\par
00677                 \{\par
00678                     result.AddRange(splitCandidate.Split({\cf22 "pp"}));\par
00679                     result[0] = result[0] + {\cf22 "_"};\par
00680                     result[1] = {\cf22 "pp"} + result[1];\par
00681                 \}\par
00682                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "p"}))\par
00683                 \{\par
00684                     result.AddRange(splitCandidate.Split({\cf22 "p"}));\par
00685                     result[0] = result[0] + {\cf22 "_"};\par
00686                     result[1] = {\cf22 "p"} + result[1];\par
00687                 \}\par
00688                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "v"}))\par
00689                 \{\par
00690                     result.AddRange(splitCandidate.Split({\cf22 "v"}));\par
00691                     result[0] = result[0] + {\cf22 "_"};\par
00692                     result[1] = {\cf22 "v"} + result[1];\par
00693                 \}\par
00694                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "w"}))\par
00695                 \{\par
00696                     result.AddRange(splitCandidate.Split({\cf22 "w"}));\par
00697                     result[0] = result[0] + {\cf22 "_"};\par
00698                     result[1] = {\cf22 "w"} + result[1];\par
00699                 \}\par
00700                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "<"}))\par
00701                 \{\par
00702                     result.AddRange(splitCandidate.Split({\cf22 "<"}));\par
00703                     result[0] = result[0] + {\cf22 "_"};\par
00704                     result[1] = {\cf22 "<"} + result[1];\par
00705                 \}\par
00706                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 ">"}))\par
00707                 \{\par
00708                     result.AddRange(splitCandidate.Split({\cf22 ">"}));\par
00709                     result[0] = result[0] + {\cf22 "_"};\par
00710                     result[1] = {\cf22 ">"} + result[1];\par
00711                 \}\par
00712                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "s"}))\par
00713                 \{\par
00714                     result.AddRange(splitCandidate.Split({\cf22 "s"}));\par
00715                     result[0] = result[0] + {\cf22 "_"};\par
00716                     result[1] = {\cf22 "s"} + result[1];\par
00717                 \}\par
00718                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "z"}))\par
00719                 \{\par
00720                     result.AddRange(splitCandidate.Split({\cf22 "z"}));\par
00721                     result[0] = result[0] + {\cf22 "_"};\par
00722                     result[1] = {\cf22 "z"} + result[1];\par
00723                 \}\par
00724                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "V"}))\par
00725                 \{\par
00726                     result.AddRange(splitCandidate.Split({\cf22 "V"}));\par
00727                     result[0] = result[0] + {\cf22 "_"};\par
00728                     result[1] = {\cf22 "V"} + result[1];\par
00729                 \}\par
00730                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "-"}))\par
00731                 \{\par
00732                     result.AddRange(splitCandidate.Split({\cf22 "-"}));\par
00733                     result[0] = result[0] + {\cf22 "_"};\par
00734                     result[1] = {\cf22 "-"} + result[1];\par
00735                 \}\par
00736             \}\par
00737             {\cf19 else}\par
00738             \{\par
00739                 {\cf18 string}[] components = token.Split({\cf22 "*"});\par
00740                 {\cf19 if} (components.Length < 1)\par
00741                 \{\par
00742                     {\cf19 throw} {\cf17 new} Exception({\cf22 "SLIDE TOKEN NOT VALID: \\n"} + token);\par
00743                 \}\par
00744                 {\cf18 string} splitCandidate = components[0];\par
00745                 {\cf20 //Parse first section}\par
00746                 {\cf19 if} (splitCandidate.Contains({\cf22 "qq"}))\par
00747                 \{\par
00748                     result.AddRange(splitCandidate.Split({\cf22 "qq"}));\par
00749                     result[0] = result[0] + {\cf22 "_"};\par
00750                     result[1] = {\cf22 "qq"} + result[1];\par
00751                 \}\par
00752                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "q"}))\par
00753                 \{\par
00754                     result.AddRange(splitCandidate.Split({\cf22 "q"}));\par
00755                     result[0] = result[0] + {\cf22 "_"};\par
00756                     result[1] = {\cf22 "q"} + result[1];\par
00757                 \}\par
00758                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "pp"}))\par
00759                 \{\par
00760                     result.AddRange(splitCandidate.Split({\cf22 "pp"}));\par
00761                     result[0] = result[0] + {\cf22 "_"};\par
00762                     result[1] = {\cf22 "pp"} + result[1];\par
00763                 \}\par
00764                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "p"}))\par
00765                 \{\par
00766                     result.AddRange(splitCandidate.Split({\cf22 "p"}));\par
00767                     result[0] = result[0] + {\cf22 "_"};\par
00768                     result[1] = {\cf22 "p"} + result[1];\par
00769                 \}\par
00770                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "v"}))\par
00771                 \{\par
00772                     result.AddRange(splitCandidate.Split({\cf22 "v"}));\par
00773                     result[0] = result[0] + {\cf22 "_"};\par
00774                     result[1] = {\cf22 "v"} + result[1];\par
00775                 \}\par
00776                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "w"}))\par
00777                 \{\par
00778                     result.AddRange(splitCandidate.Split({\cf22 "w"}));\par
00779                     result[0] = result[0] + {\cf22 "_"};\par
00780                     result[1] = {\cf22 "w"} + result[1];\par
00781                 \}\par
00782                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "<"}))\par
00783                 \{\par
00784                     result.AddRange(splitCandidate.Split({\cf22 "<"}));\par
00785                     result[0] = result[0] + {\cf22 "_"};\par
00786                     result[1] = {\cf22 "<"} + result[1];\par
00787                 \}\par
00788                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 ">"}))\par
00789                 \{\par
00790                     result.AddRange(splitCandidate.Split({\cf22 ">"}));\par
00791                     result[0] = result[0] + {\cf22 "_"};\par
00792                     result[1] = {\cf22 ">"} + result[1];\par
00793                 \}\par
00794                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "s"}))\par
00795                 \{\par
00796                     result.AddRange(splitCandidate.Split({\cf22 "s"}));\par
00797                     result[0] = result[0] + {\cf22 "_"};\par
00798                     result[1] = {\cf22 "s"} + result[1];\par
00799                 \}\par
00800                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "z"}))\par
00801                 \{\par
00802                     result.AddRange(splitCandidate.Split({\cf22 "z"}));\par
00803                     result[0] = result[0] + {\cf22 "_"};\par
00804                     result[1] = {\cf22 "z"} + result[1];\par
00805                 \}\par
00806                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "V"}))\par
00807                 \{\par
00808                     result.AddRange(splitCandidate.Split({\cf22 "V"}));\par
00809                     result[0] = result[0] + {\cf22 "_"};\par
00810                     result[1] = {\cf22 "V"} + result[1];\par
00811                 \}\par
00812                 {\cf19 else} {\cf19 if} (splitCandidate.Contains({\cf22 "-"}))\par
00813                 \{\par
00814                     result.AddRange(splitCandidate.Split({\cf22 "-"}));\par
00815                     result[0] = result[0] + {\cf22 "_"};\par
00816                     result[1] = {\cf22 "-"} + result[1];\par
00817                 \}\par
00818                 {\cf20 //Add rest of slide: components after * is always }\par
00819                 {\cf19 if} (components.Length > 1)\par
00820                 \{\par
00821                     {\cf19 for} ({\cf18 int} i = 1; i < components.Length; i++)\par
00822                     \{\par
00823                         result.Add(components[i]);\par
00824                     \}\par
00825                 \}\par
00826             \}\par
00827         \}\par
00828         {\cf19 return} result;\par
00829     \}\par
00830 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/SimaiTokenizer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/SimaiTokenizer.cs}
{\xe \v Neskol/MaiLib/SimaiTokenizer.cs}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.SimaiTokenizer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tokenize input file into tokens that parser can read. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SimaiTokenizer.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/SimaiTokenizer.cs}
{\xe \v Neskol/MaiLib/SimaiTokenizer.cs}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.IO;\par
00003 {\cf17 using }System.Runtime.CompilerServices;\par
00004 {\cf17 using }System.Xml.Serialization;\par
00005 \par
00006 {\cf17 namespace }MaiLib\par
00007 \{\par
00011     {\cf17 public} {\cf17 class }SimaiTokenizer : ITokenizer\par
00012     \{\par
00016         {\cf17 private} Dictionary<string,string[]> chartCandidates;\par
00017 \par
00021         {\cf17 private} TrackInformation simaiTrackInformation;\par
00022 \par
00026         {\cf17 public} SimaiTokenizer()\par
00027         \{\par
00028             this.simaiTrackInformation = {\cf17 new} XmlInformation();\par
00029             this.chartCandidates = {\cf17 new} Dictionary<string,string[]>();\par
00030         \}\par
00031 \par
00035         {\cf17 public} Dictionary<string, string[]> ChartCandidates\par
00036         \{\par
00037             {\cf17 get} \{ {\cf19 return} this.chartCandidates; \}\par
00038         \}\par
00039 \par
00040 \par
00045         {\cf17 public} {\cf18 void} UpdateFromText({\cf18 string} input)\par
00046         \{\par
00047             {\cf18 string} storage = input;\par
00048             {\cf18 string}[] result = storage.Split({\cf22 "&"});\par
00049             {\cf18 string} titleCandidate = {\cf22 ""};\par
00050             {\cf18 string} bpmCandidate = {\cf22 ""};\par
00051             {\cf18 string} artistCandidate = {\cf22 ""};\par
00052             {\cf18 string} chartDesigner = {\cf22 ""};\par
00053             {\cf18 string} shortIdCandidate = {\cf22 ""};\par
00054             {\cf18 string} genreCandidate = {\cf22 ""};\par
00055             {\cf18 string} versionCandidate = {\cf22 ""};\par
00056 \par
00057             {\cf19 foreach} ({\cf18 string} item {\cf19 in} result)\par
00058             \{\par
00059                 {\cf19 if} (item.Contains({\cf22 "title"}))\par
00060                 \{\par
00061                     titleCandidate = item.Replace({\cf22 "title="},{\cf22 ""}).Replace({\cf22 "[SD]"},{\cf22 ""}).Replace({\cf22 "[DX]"},{\cf22 ""});\par
00062                     this.simaiTrackInformation.Information[{\cf22 "Name"}] = titleCandidate;\par
00063                 \}\par
00064                 {\cf19 else} {\cf19 if}(item.Contains({\cf22 "wholebpm"}))\par
00065                 \{\par
00066                     bpmCandidate = item.Replace({\cf22 "wholebpm="}, {\cf22 ""});\par
00067                     this.simaiTrackInformation.Information[{\cf22 "BPM"}] = bpmCandidate;\par
00068                 \}\par
00069                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "artist"}))\par
00070                 \{\par
00071                     artistCandidate = item.Replace({\cf22 "artist="}, {\cf22 ""});\par
00072                     this.simaiTrackInformation.Information[{\cf22 "Composer"}] = artistCandidate;\par
00073                 \}\par
00074                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "des="}))\par
00075                 \{\par
00076                     chartDesigner = item.Replace({\cf22 "des="}, {\cf22 ""});\par
00077                 \}\par
00078                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "shortid"}))\par
00079                 \{\par
00080                     shortIdCandidate = item.Replace({\cf22 "shortid="}, {\cf22 ""});\par
00081                     this.simaiTrackInformation.Information[{\cf22 "Music ID"}] = shortIdCandidate;\par
00082                     {\cf19 if} (shortIdCandidate.Length<=6 && {\cf18 int}.TryParse(shortIdCandidate,out {\cf18 int} {\cf18 id}))\par
00083                     \{\par
00084                         {\cf19 if} (shortIdCandidate.Length>4)\par
00085                         \{\par
00086                             this.simaiTrackInformation.Information[{\cf22 "SDDX Suffix"}] = {\cf22 "DX"};\par
00087                         \}\par
00088                         {\cf19 else} this.simaiTrackInformation.Information[{\cf22 "SDDX Suffix"}] = {\cf22 "SD"};\par
00089                     \}\par
00090                 \}\par
00091                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "genre"}))\par
00092                 \{\par
00093                     genreCandidate = item.Replace({\cf22 "genre="}, {\cf22 ""});\par
00094                     this.simaiTrackInformation.Information[{\cf22 "Genre"}] = genreCandidate;\par
00095                 \}\par
00096                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "version"}))\par
00097                 \{\par
00098                     versionCandidate = item.Replace({\cf22 "version="}, {\cf22 ""});\par
00099                     this.simaiTrackInformation.Information[{\cf22 "Version"}] = versionCandidate;\par
00100                 \}\par
00101                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "lv_1"}))\par
00102                 \{\par
00103                     {\cf18 string} easyCandidate = item.Replace({\cf22 "lv_1="}, {\cf22 ""});\par
00104                     this.simaiTrackInformation.Information[{\cf22 "Easy"}] = easyCandidate;\par
00105                 \}\par
00106                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "des_1"}))\par
00107                 \{\par
00108                     {\cf18 string} easyChartCandidate = item.Replace({\cf22 "des_1="}, {\cf22 ""});\par
00109                     this.simaiTrackInformation.Information[{\cf22 "Easy Chart Maker"}] = easyChartCandidate;\par
00110                 \}\par
00111                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "lv_2"}))\par
00112                 \{\par
00113                     {\cf18 string} basicCandidate = item.Replace({\cf22 "lv_2="}, {\cf22 ""});\par
00114                     this.simaiTrackInformation.Information[{\cf22 "Basic"}] = basicCandidate;\par
00115                 \}\par
00116                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "des_2"}))\par
00117                 \{\par
00118                     {\cf18 string} basicChartCandidate = item.Replace({\cf22 "des_2="}, {\cf22 ""});\par
00119                     this.simaiTrackInformation.Information[{\cf22 "Basic Chart Maker"}] = basicChartCandidate;\par
00120                 \}\par
00121                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "lv_3"}))\par
00122                 \{\par
00123                     {\cf18 string} advancedCandidate = item.Replace({\cf22 "lv_3="}, {\cf22 ""});\par
00124                     this.simaiTrackInformation.Information[{\cf22 "Advanced"}] = advancedCandidate;\par
00125                 \}\par
00126                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "des_3"}))\par
00127                 \{\par
00128                     {\cf18 string} advancedChartCandidate = item.Replace({\cf22 "des_3="}, {\cf22 ""});\par
00129                     this.simaiTrackInformation.Information[{\cf22 "Advanced Chart Maker"}] = advancedChartCandidate;\par
00130                 \}\par
00131                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "lv_4"}))\par
00132                 \{\par
00133                     {\cf18 string} expertCandidate = item.Replace({\cf22 "lv_4="}, {\cf22 ""});\par
00134                     this.simaiTrackInformation.Information[{\cf22 "Expert"}] = expertCandidate;\par
00135                 \}\par
00136                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "des_4"}))\par
00137                 \{\par
00138                     {\cf18 string} expertChartCandidate = item.Replace({\cf22 "des_4="}, {\cf22 ""});\par
00139                     this.simaiTrackInformation.Information[{\cf22 "Expert Chart Maker"}] = expertChartCandidate;\par
00140                 \}\par
00141                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "lv_5"}))\par
00142                 \{\par
00143                     {\cf18 string} masterCandidate = item.Replace({\cf22 "lv_5="}, {\cf22 ""});\par
00144                     this.simaiTrackInformation.Information[{\cf22 "Master"}] = masterCandidate;\par
00145                 \}\par
00146                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "des_5"}))\par
00147                 \{\par
00148                     {\cf18 string} masterChartCandidate = item.Replace({\cf22 "des_5="}, {\cf22 ""});\par
00149                     this.simaiTrackInformation.Information[{\cf22 "Master Chart Maker"}] = masterChartCandidate;\par
00150                 \}\par
00151                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "lv_6"}))\par
00152                 \{\par
00153                     {\cf18 string} remasterCandidate = item.Replace({\cf22 "lv_6="}, {\cf22 ""});\par
00154                     this.simaiTrackInformation.Information[{\cf22 "Remaster"}] = remasterCandidate;\par
00155                 \}\par
00156                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "des_6"}))\par
00157                 \{\par
00158                     {\cf18 string} remasterChartCandidate = item.Replace({\cf22 "des_6="}, {\cf22 ""});\par
00159                     this.simaiTrackInformation.Information[{\cf22 "Remaster Chart Maker"}] = remasterChartCandidate;\par
00160                 \}\par
00161                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "lv_7"}))\par
00162                 \{\par
00163                     {\cf18 string} utageCandidate = item.Replace({\cf22 "lv_7="}, {\cf22 ""});\par
00164                     this.simaiTrackInformation.Information[{\cf22 "Utage"}] = utageCandidate;\par
00165                 \}\par
00166                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "des_7"}))\par
00167                 \{\par
00168                     {\cf18 string} utageChartCandidate = item.Replace({\cf22 "des_7="}, {\cf22 ""});\par
00169                     this.simaiTrackInformation.Information[{\cf22 "Utage Chart Maker"}] = utageChartCandidate;\par
00170                 \}\par
00171                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "inote_2"}))\par
00172                 \{\par
00173                     {\cf18 string} noteCandidate = item.Replace({\cf22 "inote_2="}, {\cf22 ""});\par
00174                     this.chartCandidates.Add({\cf22 "2"}, this.TokensFromText(noteCandidate));\par
00175                 \}\par
00176                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "inote_3"}))\par
00177                 \{\par
00178                     {\cf18 string} noteCandidate = item.Replace({\cf22 "inote_3="}, {\cf22 ""});\par
00179                     this.chartCandidates.Add({\cf22 "3"}, this.TokensFromText(noteCandidate));\par
00180                 \}\par
00181                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "inote_4"}))\par
00182                 \{\par
00183                     {\cf18 string} noteCandidate = item.Replace({\cf22 "inote_4="}, {\cf22 ""});\par
00184                     this.chartCandidates.Add({\cf22 "4"}, this.TokensFromText(noteCandidate));\par
00185                 \}\par
00186                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "inote_5"}))\par
00187                 \{\par
00188                     {\cf18 string} noteCandidate = item.Replace({\cf22 "inote_5="}, {\cf22 ""});\par
00189                     this.chartCandidates.Add({\cf22 "5"}, this.TokensFromText(noteCandidate));\par
00190                 \}\par
00191                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "inote_6"}))\par
00192                 \{\par
00193                     {\cf18 string} noteCandidate = item.Replace({\cf22 "inote_6="}, {\cf22 ""});\par
00194                     this.chartCandidates.Add({\cf22 "6"}, this.TokensFromText(noteCandidate));\par
00195                 \}\par
00196                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "inote_7"}))\par
00197                 \{\par
00198                     {\cf18 string} noteCandidate = item.Replace({\cf22 "inote_7="}, {\cf22 ""});\par
00199                     this.chartCandidates.Add({\cf22 "7"}, this.TokensFromText(noteCandidate));\par
00200                 \}\par
00201                 {\cf19 else} {\cf19 if} (item.Contains({\cf22 "inote_"}))\par
00202                 \{\par
00203                     {\cf18 string} noteCandidate = item.Replace({\cf22 "inote_="}, {\cf22 ""});\par
00204                     this.chartCandidates.Add({\cf22 "Default"}, this.TokensFromText(noteCandidate));\par
00205                 \}\par
00206             \}\par
00207         \}\par
00208 \par
00213         {\cf17 public} {\cf18 void} UpdateFromPath({\cf18 string} path)\par
00214         \{\par
00215             {\cf18 string}[] takeIn = File.ReadAllLines(path);\par
00216             {\cf18 string} storage = {\cf22 ""};\par
00217             {\cf19 foreach} ({\cf18 string} line {\cf19 in} takeIn)\par
00218             \{\par
00219                 storage += line;\par
00220             \}\par
00221             this.UpdateFromText(storage);\par
00222         \}\par
00223 \par
00224         {\cf17 public} {\cf18 string}[] Tokens({\cf18 string} location)\par
00225         \{\par
00226 \par
00227             {\cf18 string}[] takeIn = File.ReadAllLines(location);\par
00228             {\cf18 string} storage = {\cf22 ""};\par
00229             {\cf19 foreach} ({\cf18 string} line {\cf19 in} takeIn)\par
00230             \{\par
00231                 storage += line;\par
00232             \}\par
00233             {\cf18 string}[] result = storage.Split({\cf22 ","});\par
00234             {\cf19 return} result;\par
00235         \}\par
00236 \par
00237         {\cf17 public} {\cf18 string}[] TokensFromText({\cf18 string} text)\par
00238         \{\par
00239             {\cf18 string} storage = text;\par
00240             {\cf18 string}[] result = storage.Split({\cf22 ","});\par
00241             {\cf19 return} result;\par
00242         \}\par
00243     \}\par
00244 \}\par
00245 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Slide.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Slide.cs}
{\xe \v Neskol/MaiLib/Slide.cs}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.Slide}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a Slide note (With START!) }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Slide.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Slide.cs}
{\xe \v Neskol/MaiLib/Slide.cs}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }Slide : Note\par
00007     \{\par
00008         {\cf17 private} readonly {\cf18 string}[] allowedType = \{ {\cf22 "SI_"}, {\cf22 "SV_"}, {\cf22 "SF_"}, {\cf22 "SCL"}, {\cf22 "SCR"}, {\cf22 "SUL"}, {\cf22 "SUR"}, {\cf22 "SLL"}, {\cf22 "SLR"}, {\cf22 "SXL"}, {\cf22 "SXR"}, {\cf22 "SSL"}, {\cf22 "SSR"} \};\par
00009 \par
00013         {\cf17 public} Slide()\par
00014         \{\par
00015         \}\par
00016 \par
00026         {\cf17 public} Slide({\cf18 string} noteType, {\cf18 int} bar, {\cf18 int} startTime, {\cf18 string} key, {\cf18 int} waitTime, {\cf18 int} lastTime, {\cf18 string} endKey)\par
00027         \{\par
00028             this.NoteType = noteType;\par
00029             this.Key = key;\par
00030             this.Bar = bar;\par
00031             this.Tick = startTime;\par
00032             this.WaitLength = waitTime;\par
00033             this.LastLength = lastTime;\par
00034             this.EndKey = endKey;\par
00035             this.Delayed = this.WaitLength != 96;\par
00036             this.Update();\par
00037         \}\par
00038 \par
00043         {\cf17 public} Slide(Note inTake)\par
00044         \{\par
00045             this.NoteType = inTake.NoteType;\par
00046             this.Key = inTake.Key;\par
00047             this.EndKey = inTake.EndKey;\par
00048             this.Bar = inTake.Bar;\par
00049             this.Tick = inTake.Tick;\par
00050             this.TickStamp = inTake.TickStamp;\par
00051             this.TickTimeStamp = inTake.TickTimeStamp;\par
00052             this.LastLength = inTake.LastLength;\par
00053             this.LastTickStamp = inTake.LastTickStamp;\par
00054             this.LastTimeStamp = inTake.LastTimeStamp;\par
00055             this.WaitLength = inTake.WaitLength;\par
00056             this.WaitTickStamp = inTake.WaitTickStamp;\par
00057             this.WaitTimeStamp = inTake.WaitTimeStamp;\par
00058             this.CalculatedLastTime = inTake.CalculatedLastTime;\par
00059             this.CalculatedLastTime = inTake.CalculatedLastTime;\par
00060             this.TickBPMDisagree = inTake.TickBPMDisagree;\par
00061             this.BPM = inTake.BPM;\par
00062             this.BPMChangeNotes = inTake.BPMChangeNotes;\par
00063             this.SlideStart = inTake.SlideStart;\par
00064             this.ConsecutiveSlide = inTake.ConsecutiveSlide;\par
00065         \}\par
00066 \par
00067         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00068         \{\par
00069             {\cf18 bool} result = {\cf17 false};\par
00070             {\cf19 foreach} ({\cf18 string} x {\cf19 in} allowedType)\par
00071             \{\par
00072                 result = result || this.NoteType.Equals(x);\par
00073             \}\par
00074             result = result && NoteType.Length == 3;\par
00075             result = result && Key.Length <= 2;\par
00076             {\cf19 return} result;\par
00077         \}\par
00078 \par
00079         {\cf17 public} {\cf17 override} {\cf18 string} Compose({\cf18 int} format)\par
00080         \{\par
00081             {\cf18 string} result = {\cf22 ""};\par
00082             {\cf19 if} (format == 1)\par
00083             \{\par
00084                 result = this.NoteType + {\cf22 "\\t"} + this.Bar + {\cf22 "\\t"} + this.Tick + {\cf22 "\\t"} + this.Key + {\cf22 "\\t"} + this.WaitLength + {\cf22 "\\t"} + this.LastLength + {\cf22 "\\t"} + this.EndKey;\par
00085             \}\par
00086             {\cf19 else} {\cf19 if} (format == 0)\par
00087             \{\par
00088                 {\cf19 switch} (this.NoteType)\par
00089                 \{\par
00090                     {\cf19 case} {\cf22 "SI_"}:\par
00091                         result += {\cf22 "-"};\par
00092                         {\cf19 break};\par
00093                     {\cf19 case} {\cf22 "SV_"}:\par
00094                         result += {\cf22 "v"};\par
00095                         {\cf19 break};\par
00096                     {\cf19 case} {\cf22 "SF_"}:\par
00097                         result += {\cf22 "w"};\par
00098                         {\cf19 break};\par
00099                     {\cf19 case} {\cf22 "SCL"}:\par
00100                         {\cf19 if} (Int32.Parse({\cf17 this}.Key) == 0 || Int32.Parse({\cf17 this}.Key) == 1 || Int32.Parse({\cf17 this}.Key) == 6 || Int32.Parse({\cf17 this}.Key) == 7)\par
00101                         \{\par
00102                             result += {\cf22 "<"};\par
00103                         \}\par
00104                         {\cf19 else}\par
00105                             result += {\cf22 ">"};\par
00106                         {\cf19 break};\par
00107                     {\cf19 case} {\cf22 "SCR"}:\par
00108                         {\cf19 if} (Int32.Parse({\cf17 this}.Key) == 0 || Int32.Parse({\cf17 this}.Key) == 1 || Int32.Parse({\cf17 this}.Key) == 6 || Int32.Parse({\cf17 this}.Key) == 7)\par
00109                         \{\par
00110                             result += {\cf22 ">"};\par
00111                         \}\par
00112                         {\cf19 else}\par
00113                             result += {\cf22 "<"};\par
00114                         {\cf19 break};\par
00115                     {\cf19 case} {\cf22 "SUL"}:\par
00116                         result += {\cf22 "p"};\par
00117                         {\cf19 break};\par
00118                     {\cf19 case} {\cf22 "SUR"}:\par
00119                         result += {\cf22 "q"};\par
00120                         {\cf19 break};\par
00121                     {\cf19 case} {\cf22 "SSL"}:\par
00122                         result += {\cf22 "s"};\par
00123                         {\cf19 break};\par
00124                     {\cf19 case} {\cf22 "SSR"}:\par
00125                         result += {\cf22 "z"};\par
00126                         {\cf19 break};\par
00127                     {\cf19 case} {\cf22 "SLL"}:\par
00128                         result += {\cf22 "V"} + GenerateInflection({\cf17 this});\par
00129                         {\cf19 break};\par
00130                     {\cf19 case} {\cf22 "SLR"}:\par
00131                         result += {\cf22 "V"} + GenerateInflection({\cf17 this});\par
00132                         {\cf19 break};\par
00133                     {\cf19 case} {\cf22 "SXL"}:\par
00134                         result += {\cf22 "pp"};\par
00135                         {\cf19 break};\par
00136                     {\cf19 case} {\cf22 "SXR"}:\par
00137                         result += {\cf22 "qq"};\par
00138                         {\cf19 break};\par
00139                 \}\par
00140                 {\cf19 if} (this.TickBPMDisagree || this.Delayed)\par
00141                 \{\par
00142                     result += ((Convert.ToInt32(this.EndKey) + 1).ToString()) + GenerateAppropriateLength(this.LastLength, this.BPM);\par
00143                 \}\par
00144                 {\cf19 else}\par
00145                 \{\par
00146                     result += ((Convert.ToInt32(this.EndKey) + 1).ToString()) + GenerateAppropriateLength(this.LastLength);\par
00147                 \}\par
00148                 {\cf20 //result += "_" + this.Tick;}\par
00149                 {\cf20 //result += "_" + this.Key;}\par
00150             \}\par
00151             {\cf19 return} result;\par
00152         \}\par
00153 \par
00159         {\cf17 public} {\cf17 static} {\cf18 int} GenerateInflection(Note x)\par
00160         \{\par
00161             {\cf18 int} result = Int32.Parse(x.Key) + 1;\par
00162             {\cf19 if} (x.NoteType.Equals({\cf22 "SLR"}))\par
00163             \{\par
00164                 result += 2;\par
00165             \}\par
00166             {\cf19 else} {\cf19 if} (x.NoteType.Equals({\cf22 "SLL"}))\par
00167             \{\par
00168                 result -= 2;\par
00169             \}\par
00170 \par
00171             {\cf19 if} (result > 8)\par
00172             \{\par
00173                 result -= 8;\par
00174             \}\par
00175             {\cf19 else} {\cf19 if} (result < 1)\par
00176             \{\par
00177                 result += 8;\par
00178             \}\par
00179 \par
00180             {\cf19 if} (result == Int32.Parse(x.Key) + 1 || (result == Int32.Parse(x.EndKey) + 1))\par
00181             \{\par
00182                 {\cf20 //Deal with result;}\par
00183                 {\cf19 if} (result > 4)\par
00184                 \{\par
00185                     result -= 4;\par
00186                 \}\par
00187                 {\cf19 else} {\cf19 if} (result <= 4)\par
00188                 \{\par
00189                     result += 4;\par
00190                 \}\par
00191 \par
00192                 {\cf20 //Deal with note type;}\par
00193                 {\cf19 if} (x.NoteType.Equals({\cf22 "SLL"}))\par
00194                 \{\par
00195                     x.NoteType = {\cf22 "SLR"};\par
00196                 \}\par
00197                 {\cf19 else} {\cf19 if} (x.NoteType.Equals({\cf22 "SLR"}))\par
00198                 \{\par
00199                     x.NoteType = {\cf22 "SLL"};\par
00200                 \}\par
00201                 {\cf19 else}\par
00202                 \{\par
00203                     {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "INFLECTION POINT IS THE SAME WITH ONE OF THE KEY!"});\par
00204                 \}\par
00205             \}\par
00206 \par
00207             {\cf19 return} result;\par
00208         \}\par
00209 \par
00210         {\cf17 public} {\cf17 override} {\cf18 string} NoteGenre => {\cf22 "SLIDE"};\par
00211 \par
00212         {\cf17 public} {\cf17 override} {\cf18 bool} IsNote => {\cf17 true};\par
00213 \par
00214         {\cf17 public} {\cf17 override} {\cf18 string} NoteSpecificGenre => {\cf22 "SLIDE"};\par
00215 \par
00216         {\cf17 public} {\cf17 override} Note NewInstance()\par
00217         \{\par
00218             Note result = {\cf17 new} Slide({\cf17 this});\par
00219             {\cf19 return} result;\par
00220         \}\par
00221     \}\par
00222 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/Tap.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Tap.cs}
{\xe \v Neskol/MaiLib/Tap.cs}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tap.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/Tap.cs}
{\xe \v Neskol/MaiLib/Tap.cs}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }MaiLib\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }Tap : Note\par
00007     \{\par
00011         {\cf17 private} {\cf18 int} specialEffect;\par
00012 \par
00016         {\cf17 private} {\cf18 string} touchSize;\par
00017 \par
00022         {\cf17 private} readonly {\cf18 string}[] allowedType = \{ {\cf22 "TAP"}, {\cf22 "STR"}, {\cf22 "BRK"}, {\cf22 "BST"}, {\cf22 "XTP"}, {\cf22 "XST"}, {\cf22 "TTP"}, {\cf22 "NST"}, {\cf22 "NSS"} \};\par
00023 \par
00027         {\cf17 public} Tap()\par
00028         \{\par
00029             this.touchSize = {\cf22 "M1"};\par
00030             this.Update();\par
00031         \}\par
00032 \par
00040         {\cf17 public} Tap({\cf18 string} noteType, {\cf18 int} bar, {\cf18 int} startTime, {\cf18 string} key)\par
00041         \{\par
00042             this.NoteType = noteType;\par
00043             this.Key = key;\par
00044             this.Bar = bar;\par
00045             this.Tick = startTime;\par
00046             this.specialEffect = 0;\par
00047             this.touchSize = {\cf22 "M1"};\par
00048             this.Update();\par
00049         \}\par
00050 \par
00060         {\cf17 public} Tap({\cf18 string} noteType, {\cf18 int} bar, {\cf18 int} startTime, {\cf18 string} key, {\cf18 int} specialEffect, {\cf18 string} touchSize)\par
00061         \{\par
00062             this.NoteType = noteType;\par
00063             this.Key = key;\par
00064             this.Bar = bar;\par
00065             this.Tick = startTime;\par
00066             this.specialEffect = specialEffect;\par
00067             this.touchSize = touchSize;\par
00068             this.Update();\par
00069         \}\par
00070 \par
00076         {\cf17 public} Tap(Note inTake)\par
00077         \{\par
00078             this.NoteType = inTake.NoteType;\par
00079             this.Key = inTake.Key;\par
00080             this.EndKey = inTake.EndKey;\par
00081             this.Bar = inTake.Bar;\par
00082             this.Tick = inTake.Tick;\par
00083             this.TickStamp = inTake.TickStamp;\par
00084             this.TickTimeStamp = inTake.TickTimeStamp;\par
00085             this.LastLength = inTake.LastLength;\par
00086             this.LastTickStamp = inTake.LastTickStamp;\par
00087             this.LastTimeStamp = inTake.LastTimeStamp;\par
00088             this.WaitLength = inTake.WaitLength;\par
00089             this.WaitTickStamp = inTake.WaitTickStamp;\par
00090             this.WaitTimeStamp = inTake.WaitTimeStamp;\par
00091             this.CalculatedLastTime = inTake.CalculatedLastTime;\par
00092             this.CalculatedLastTime = inTake.CalculatedLastTime;\par
00093             this.TickBPMDisagree = inTake.TickBPMDisagree;\par
00094             this.BPM = inTake.BPM;\par
00095             this.BPMChangeNotes = inTake.BPMChangeNotes;\par
00096             this.ConsecutiveSlide = inTake.ConsecutiveSlide;\par
00097             {\cf19 if} (inTake.NoteGenre == {\cf22 "TAP"})\par
00098             \{\par
00099                 this.touchSize = ((Tap)inTake).TouchSize ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00100                 this.SpecialEffect = ((Tap)inTake).SpecialEffect;\par
00101             \}\par
00102             {\cf19 else}\par
00103             \{\par
00104                 this.touchSize = {\cf22 "M1"};\par
00105                 this.SpecialEffect = 0;\par
00106             \}\par
00107         \}\par
00108 \par
00109 \par
00113         {\cf17 public} {\cf18 int} SpecialEffect\par
00114         \{\par
00115             {\cf17 get} \{ {\cf19 return} this.specialEffect; \}\par
00116             {\cf17 set} \{ this.specialEffect = value; \}\par
00117         \}\par
00118 \par
00122         {\cf17 public} {\cf18 string} TouchSize\par
00123         \{\par
00124             {\cf17 get} \{ {\cf19 return} this.touchSize; \}\par
00125             {\cf17 set} \{ this.touchSize = value; \}\par
00126         \}\par
00127 \par
00128         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00129         \{\par
00130             {\cf18 bool} result = {\cf17 false};\par
00131             {\cf19 foreach} ({\cf18 string} x {\cf19 in} allowedType)\par
00132             \{\par
00133                 result = result || this.NoteType.Equals(x);\par
00134             \}\par
00135             result = result && NoteType.Length == 3;\par
00136             result = result && Key.Length <= 2;\par
00137             {\cf19 return} result;\par
00138         \}\par
00139 \par
00140         {\cf17 public} {\cf17 override} {\cf18 string} Compose({\cf18 int} format)\par
00141         \{\par
00142             {\cf18 string} result = {\cf22 ""};\par
00143             {\cf20 // if (format == 1 && !(this.NoteType.Equals("TTP")) && !((this.NoteType.Equals("NST"))||this.NoteType.Equals("NSS")))}\par
00144             {\cf20 // \{}\par
00145             {\cf20 //     result = this.NoteType + "\\t" + this.Bar + "\\t" + this.Tick + "\\t" + this.Key;}\par
00146             {\cf20 // \}}\par
00147             {\cf20 // else if (format == 1 && (this.NoteType.Equals("NST")||this.NoteType.Equals("NSS")))}\par
00148             {\cf20 // \{}\par
00149             {\cf20 //     result = ""; //NST and NSS is just a place holder for slide}\par
00150             {\cf20 // \}}\par
00151             {\cf19 if} (format == 1 && !this.NoteType.Equals({\cf22 "TTP"}))\par
00152             \{\par
00153                 result = this.NoteType + {\cf22 "\\t"} + this.Bar + {\cf22 "\\t"} + this.Tick + {\cf22 "\\t"} + this.Key;\par
00154             \}\par
00155             {\cf19 else} {\cf19 if} (format == 1 && this.NoteType.Equals({\cf22 "TTP"}))\par
00156             \{\par
00157                 result = this.NoteType + {\cf22 "\\t"} +\par
00158                     this.Bar + {\cf22 "\\t"} +\par
00159                     this.Tick + {\cf22 "\\t"} +\par
00160                     this.Key.ToCharArray()[1] + {\cf22 "\\t"} +\par
00161                     this.Key.ToCharArray()[0] + {\cf22 "\\t"} +\par
00162                     this.specialEffect + {\cf22 "\\t"} +\par
00163                     this.touchSize; {\cf20 //M1 for regular note and L1 for Larger Note}\par
00164             \}\par
00165             {\cf19 else} {\cf19 if} (format == 0)\par
00166             \{\par
00167                 {\cf19 switch} (this.NoteType)\par
00168                 \{\par
00169                     {\cf19 case} {\cf22 "TAP"}:\par
00170                         result += (Int32.Parse(this.Key) + 1).ToString();\par
00171                         {\cf19 break};\par
00172                     {\cf19 case} {\cf22 "STR"}:\par
00173                         result += (Int32.Parse(this.Key) + 1).ToString();\par
00174                         {\cf19 break};\par
00175                     {\cf19 case} {\cf22 "BRK"}:\par
00176                         result += (Int32.Parse(this.Key) + 1).ToString() + {\cf22 "b"};\par
00177                         {\cf19 break};\par
00178                     {\cf19 case} {\cf22 "BST"}:\par
00179                         result += (Int32.Parse(this.Key) + 1).ToString() + {\cf22 "b"};\par
00180                         {\cf19 break};\par
00181                     {\cf19 case} {\cf22 "XTP"}:\par
00182                         result += (Int32.Parse(this.Key) + 1).ToString() + {\cf22 "x"};\par
00183                         {\cf19 break};\par
00184                     {\cf19 case} {\cf22 "XST"}:\par
00185                         result += (Int32.Parse(this.Key) + 1).ToString() + {\cf22 "x"};\par
00186                         {\cf19 break};\par
00187                     {\cf19 case} {\cf22 "NST"}:\par
00188                         result += (Int32.Parse(this.Key) + 1).ToString() + {\cf22 "!"};\par
00189                         {\cf19 break};\par
00190                     {\cf19 case} {\cf22 "TTP"}:\par
00191                         result += this.Key.ToCharArray()[1] + ((Convert.ToInt32(this.Key.Substring(0, 1)) + 1).ToString());\par
00192                         {\cf19 if} (this.SpecialEffect == 1)\par
00193                         \{\par
00194                             result += {\cf22 "f"};\par
00195                         \}\par
00196                         {\cf19 break};\par
00197                 \}\par
00198                 {\cf19 if} (this.NoteSpecificGenre.Equals({\cf22 "SLIDE_START"}) && this.ConsecutiveSlide == {\cf17 null})\par
00199                 \{\par
00200                     result += {\cf22 "$"};\par
00201                 \}\par
00202                 {\cf20 //result += "_" + this.Tick;}\par
00203             \}\par
00204             {\cf19 return} result;\par
00205         \}\par
00206 \par
00207         {\cf17 public} {\cf17 override} {\cf18 string} NoteGenre => {\cf22 "TAP"};\par
00208 \par
00209         {\cf17 public} {\cf17 override} {\cf18 bool} IsNote\par
00210         \{\par
00211             {\cf17 get}\par
00212             \{\par
00213                 {\cf20 // if (this.NoteType.Equals("NST"))}\par
00214                 {\cf20 // \{}\par
00215                 {\cf20 //     return false;}\par
00216                 {\cf20 // \}}\par
00217                 {\cf20 // else return true;}\par
00218                 {\cf19 return} {\cf17 true};\par
00219             \}\par
00220         \}\par
00221 \par
00222         {\cf17 public} {\cf17 override} {\cf18 string} NoteSpecificGenre\par
00223         \{\par
00224             {\cf17 get}\par
00225             \{\par
00226                 {\cf18 string} result = {\cf22 ""};\par
00227                 {\cf19 switch} (this.NoteType)\par
00228                 \{\par
00229                     {\cf19 case} {\cf22 "TAP"}:\par
00230                         result += {\cf22 "TAP"};\par
00231                         {\cf19 break};\par
00232                     {\cf19 case} {\cf22 "STR"}:\par
00233                         result += {\cf22 "SLIDE_START"};\par
00234                         {\cf19 break};\par
00235                     {\cf19 case} {\cf22 "BRK"}:\par
00236                         result += {\cf22 "TAP"};\par
00237                         {\cf19 break};\par
00238                     {\cf19 case} {\cf22 "BST"}:\par
00239                         result += {\cf22 "SLIDE_START"};\par
00240                         {\cf19 break};\par
00241                     {\cf19 case} {\cf22 "XTP"}:\par
00242                         result += {\cf22 "TAP"};\par
00243                         {\cf19 break};\par
00244                     {\cf19 case} {\cf22 "XST"}:\par
00245                         result += {\cf22 "SLIDE_START"};\par
00246                         {\cf19 break};\par
00247                     {\cf19 case} {\cf22 "TTP"}:\par
00248                         result += {\cf22 "TAP"};\par
00249                         {\cf19 break};\par
00250                     {\cf19 case} {\cf22 "NST"}:\par
00251                         result += {\cf22 "SLIDE_START"};\par
00252                         {\cf19 break};\par
00253                     {\cf19 case} {\cf22 "NSS"}:\par
00254                         result += {\cf22 "SLIDE_START"};\par
00255                         {\cf19 break};\par
00256                 \}\par
00257 \par
00258                 {\cf19 return} result;\par
00259             \}\par
00260         \}\par
00261 \par
00262         {\cf17 public} {\cf17 override} Note NewInstance()\par
00263         \{\par
00264             Note result = {\cf17 new} Tap({\cf17 this});\par
00265             {\cf19 return} result;\par
00266         \}\par
00267     \}\par
00268 \}\par
00269 \par
00270 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/TrackInformation.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/TrackInformation.cs}
{\xe \v Neskol/MaiLib/TrackInformation.cs}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.TrackInformation}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use xml to store track information. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TrackInformation.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/TrackInformation.cs}
{\xe \v Neskol/MaiLib/TrackInformation.cs}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Data;\par
00002 {\cf17 using }System.Xml;\par
00003 {\cf17 using }System.Xml.Linq;\par
00004 \par
00005 {\cf17 namespace }MaiLib\par
00006 \{\par
00010     {\cf17 public} {\cf17 abstract} {\cf17 class }TrackInformation : IXmlUtility\par
00011     \{\par
00016         {\cf17 public} {\cf17 static} readonly {\cf18 string}[] level = \{ {\cf22 "1"}, {\cf22 "2"}, {\cf22 "3"}, {\cf22 "4"}, {\cf22 "5"}, {\cf22 "6"}, {\cf22 "7"}, {\cf22 "7+"}, {\cf22 "8"}, {\cf22 "8+"}, {\cf22 "9"}, {\cf22 "9+"}, {\cf22 "10"}, {\cf22 "10+"}, {\cf22 "11"}, {\cf22 "11+"}, {\cf22 "12"}, {\cf22 "12+"}, {\cf22 "13"}, {\cf22 "13+"}, {\cf22 "14"}, {\cf22 "14+"}, {\cf22 "15"}, {\cf22 "15+"} \};\par
00017 \par
00018         {\cf17 public} {\cf17 static} readonly {\cf18 string}[] difficulty = \{ {\cf22 "Basic"}, {\cf22 "Advance"}, {\cf22 "Expert"}, {\cf22 "Master"}, {\cf22 "Remaster"}, {\cf22 "Utage"}, {\cf22 "Easy"} \};\par
00019 \par
00020         {\cf17 public} {\cf17 static} readonly {\cf18 string}[] addVersion = \{ {\cf22 "Ver1.00.00"}\};\par
00021 \par
00026         {\cf17 public} {\cf17 static} readonly {\cf18 string}[] genre = \{ {\cf22 "\'E6\'9D\'B1\'E6\'96\'B9Project"}, {\cf22 "maimai"} \};\par
00027 \par
00032         {\cf17 public} {\cf17 static} readonly {\cf18 string}[] version = \{ {\cf22 "maimai"}, {\cf22 "maimai PLUS"}, {\cf22 "maimai GreeN"}, {\cf22 "maimai GreeN PLUS"}, {\cf22 "maimai ORANGE"}, {\cf22 "maimai ORANGE PLUS"}, {\cf22 "maimai PiNK"}, {\cf22 "maimai PiNK PLUS"}, {\cf22 "maimai MURASAKi"}, {\cf22 "maimai MURASAKi PLUS"}, {\cf22 "maimai MiLK"}, {\cf22 "maimai MiLK PLUS"}, {\cf22 "maimai FiNALE"}, {\cf22 "maimai DX"}, {\cf22 "maimai DX PLUS"}, {\cf22 "maimai DX Splash"}, {\cf22 "maimai DX Splash PLUS"}, {\cf22 "maimai DX UNiVERSE"}, {\cf22 "maimai DX UNiVERSE PLUS"} \};\par
00033 \par
00034         {\cf17 public} {\cf17 static} readonly {\cf18 string}[] shortVersion = \{ {\cf22 "maimai"}, {\cf22 "PLUS"}, {\cf22 "GreeN"}, {\cf22 "GreeN PLUS"}, {\cf22 "ORANGE"}, {\cf22 "ORANGE PLUS"}, {\cf22 "PiNK"}, {\cf22 "PiNK PLUS"}, {\cf22 "MURASAKi"}, {\cf22 "MURASAKi PLUS"}, {\cf22 "MiLK"}, {\cf22 "MiLK PLUS"}, {\cf22 "FiNALE"}, {\cf22 "DX"}, {\cf22 "DX PLUS"}, {\cf22 "DX Splash"}, {\cf22 "DX Splash PLUS"}, {\cf22 "DX UNiVERSE"}, {\cf22 "DX UNiVERSE PLUS"} \};\par
00035 \par
00036         {\cf17 public} {\cf17 static} {\cf18 string}[] versionArray = \{\par
00037 {\cf22 "10000"},\par
00038 {\cf22 "10001"},\par
00039 {\cf22 "10002"},\par
00040 {\cf22 "11000"},\par
00041 {\cf22 "11001"},\par
00042 {\cf22 "11002"},\par
00043 {\cf22 "11003"},\par
00044 {\cf22 "11004"},\par
00045 {\cf22 "11005"},\par
00046 {\cf22 "11006"},\par
00047 {\cf22 "11007"},\par
00048 {\cf22 "12000"},\par
00049 {\cf22 "12001"},\par
00050 {\cf22 "12002"},\par
00051 {\cf22 "12003"},\par
00052 {\cf22 "12004"},\par
00053 {\cf22 "12005"},\par
00054 {\cf22 "12006"},\par
00055 {\cf22 "12007"},\par
00056 {\cf22 "12008"},\par
00057 {\cf22 "12009"},\par
00058 {\cf22 "13000"},\par
00059 {\cf22 "13001"},\par
00060 {\cf22 "13002"},\par
00061 {\cf22 "13003"},\par
00062 {\cf22 "13004"},\par
00063 {\cf22 "13005"},\par
00064 {\cf22 "13006"},\par
00065 {\cf22 "13007"},\par
00066 {\cf22 "13008"},\par
00067 {\cf22 "13009"},\par
00068 {\cf22 "13010"},\par
00069 {\cf22 "13011"},\par
00070 {\cf22 "14000"},\par
00071 {\cf22 "14001"},\par
00072 {\cf22 "14002"},\par
00073 {\cf22 "14003"},\par
00074 {\cf22 "14004"},\par
00075 {\cf22 "14006"},\par
00076 {\cf22 "14007"},\par
00077 {\cf22 "14008"},\par
00078 {\cf22 "14009"},\par
00079 {\cf22 "14010"},\par
00080 {\cf22 "15000"},\par
00081 {\cf22 "15003"},\par
00082 {\cf22 "15004"},\par
00083 {\cf22 "15005"},\par
00084 {\cf22 "15006"},\par
00085 {\cf22 "15007"},\par
00086 {\cf22 "15008"},\par
00087 {\cf22 "15009"},\par
00088 {\cf22 "15010"},\par
00089 {\cf22 "15011"},\par
00090 {\cf22 "15013"},\par
00091 {\cf22 "15014"},\par
00092 {\cf22 "15016"},\par
00093 {\cf22 "15017"},\par
00094 {\cf22 "15018"},\par
00095 {\cf22 "15019"},\par
00096 {\cf22 "16000"},\par
00097 {\cf22 "16001"},\par
00098 {\cf22 "16002"},\par
00099 {\cf22 "16003"},\par
00100 {\cf22 "16004"},\par
00101 {\cf22 "16005"},\par
00102 {\cf22 "16006"},\par
00103 {\cf22 "16007"},\par
00104 {\cf22 "16008"},\par
00105 {\cf22 "16009"},\par
00106 {\cf22 "16011"},\par
00107 {\cf22 "16012"},\par
00108 {\cf22 "16013"},\par
00109 {\cf22 "16014"},\par
00110 {\cf22 "17000"},\par
00111 {\cf22 "17001"},\par
00112 {\cf22 "17002"},\par
00113 {\cf22 "17003"},\par
00114 {\cf22 "17004"},\par
00115 {\cf22 "17005"},\par
00116 {\cf22 "17006"},\par
00117 {\cf22 "17007"},\par
00118 {\cf22 "17008"},\par
00119 {\cf22 "17009"},\par
00120 {\cf22 "17010"},\par
00121 {\cf22 "17011"},\par
00122 {\cf22 "17012"},\par
00123 {\cf22 "17013"},\par
00124 {\cf22 "17015"},\par
00125 {\cf22 "17016"},\par
00126 {\cf22 "17017"},\par
00127 {\cf22 "17018"},\par
00128 {\cf22 "18000"},\par
00129 {\cf22 "18001"},\par
00130 {\cf22 "18002"},\par
00131 {\cf22 "18003"},\par
00132 {\cf22 "18005"},\par
00133 {\cf22 "18006"},\par
00134 {\cf22 "18007"},\par
00135 {\cf22 "18008"},\par
00136 {\cf22 "18009"},\par
00137 {\cf22 "18010"},\par
00138 {\cf22 "18011"},\par
00139 {\cf22 "18012"},\par
00140 {\cf22 "18014"},\par
00141 {\cf22 "18015"},\par
00142 {\cf22 "18017"},\par
00143 {\cf22 "18018"},\par
00144 {\cf22 "18019"},\par
00145 {\cf22 "18020"},\par
00146 {\cf22 "18021"},\par
00147 {\cf22 "18022"},\par
00148 {\cf22 "18023"},\par
00149 {\cf22 "18500"},\par
00150 {\cf22 "18501"},\par
00151 {\cf22 "18502"},\par
00152 {\cf22 "18503"},\par
00153 {\cf22 "18504"},\par
00154 {\cf22 "18505"},\par
00155 {\cf22 "18506"},\par
00156 {\cf22 "18507"},\par
00157 {\cf22 "18508"},\par
00158 {\cf22 "18509"},\par
00159 {\cf22 "18511"},\par
00160 {\cf22 "18512"},\par
00161 {\cf22 "18599"},\par
00162 {\cf22 "19000"},\par
00163 {\cf22 "19001"},\par
00164 {\cf22 "19002"},\par
00165 {\cf22 "19003"},\par
00166 {\cf22 "19004"},\par
00167 {\cf22 "19005"},\par
00168 {\cf22 "19006"},\par
00169 {\cf22 "19007"},\par
00170 {\cf22 "19008"},\par
00171 {\cf22 "19009"},\par
00172 {\cf22 "19010"},\par
00173 {\cf22 "19011"},\par
00174 {\cf22 "19012"},\par
00175 {\cf22 "19013"},\par
00176 {\cf22 "19500"},\par
00177 {\cf22 "19501"},\par
00178 {\cf22 "19502"},\par
00179 {\cf22 "19503"},\par
00180 {\cf22 "19504"},\par
00181 {\cf22 "19505"},\par
00182 {\cf22 "19506"},\par
00183 {\cf22 "19507"},\par
00184 {\cf22 "19508"},\par
00185 {\cf22 "19509"},\par
00186 {\cf22 "19510"},\par
00187 {\cf22 "19511"},\par
00188 {\cf22 "19512"},\par
00189 {\cf22 "19513"},\par
00190 {\cf22 "19514"},\par
00191 {\cf22 "19900"},\par
00192 {\cf22 "19901"},\par
00193 {\cf22 "19902"},\par
00194 {\cf22 "19903"},\par
00195 {\cf22 "19904"},\par
00196 {\cf22 "19905"},\par
00197 {\cf22 "19906"},\par
00198 {\cf22 "19907"},\par
00199 {\cf22 "19908"},\par
00200 {\cf22 "19909"},\par
00201 {\cf22 "19910"},\par
00202 {\cf22 "19911"},\par
00203 {\cf22 "19912"},\par
00204 {\cf22 "19992"},\par
00205 {\cf22 "19993"},\par
00206 {\cf22 "19994"},\par
00207 {\cf22 "19995"},\par
00208 {\cf22 "19996"},\par
00209 {\cf22 "19997"},\par
00210 {\cf22 "19998"},\par
00211 {\cf22 "19999"},\par
00212 {\cf22 "20000"},\par
00213 {\cf22 "20001"},\par
00214 {\cf22 "20002"},\par
00215 {\cf22 "20003"},\par
00216 {\cf22 "20004"},\par
00217 {\cf22 "20005"},\par
00218 {\cf22 "20006"},\par
00219 {\cf22 "20007"},\par
00220 {\cf22 "20008"},\par
00221 {\cf22 "20009"},\par
00222 {\cf22 "20010"},\par
00223 {\cf22 "20011"},\par
00224 {\cf22 "20012"},\par
00225 {\cf22 "20013"},\par
00226 {\cf22 "20014"},\par
00227 {\cf22 "20015"},\par
00228 {\cf22 "20500"},\par
00229 {\cf22 "20501"},\par
00230 {\cf22 "20502"},\par
00231 {\cf22 "20503"},\par
00232 {\cf22 "20504"},\par
00233 {\cf22 "20505"},\par
00234 {\cf22 "20506"},\par
00235 {\cf22 "20507"},\par
00236 {\cf22 "20508"},\par
00237 {\cf22 "20509"},\par
00238 {\cf22 "20510"},\par
00239 {\cf22 "20511"},\par
00240 {\cf22 "20512"},\par
00241 {\cf22 "20513"},\par
00242 {\cf22 "20514"},\par
00243 {\cf22 "21000"},\par
00244 {\cf22 "21001"},\par
00245 {\cf22 "21002"},\par
00246 {\cf22 "21003"},\par
00247 {\cf22 "21004"},\par
00248 {\cf22 "21005"},\par
00249 {\cf22 "21006"},\par
00250 {\cf22 "21007"},\par
00251 {\cf22 "21008"},\par
00252 {\cf22 "21009"},\par
00253 {\cf22 "21010"},\par
00254 {\cf22 "21011"},\par
00255 {\cf22 "21012"},\par
00256 {\cf22 "21500"},\par
00257 {\cf22 "21501"},\par
00258 {\cf22 "21502"},\par
00259 {\cf22 "21503"},\par
00260 {\cf22 "21504"},\par
00261 {\cf22 "21505"},\par
00262 {\cf22 "21506"},\par
00263 {\cf22 "21507"},\par
00264 {\cf22 "21508"},\par
00265 {\cf22 "21509"},\par
00266 {\cf22 "21510"},\par
00267 {\cf22 "21511"},\par
00268 {\cf22 "21512"},\par
00269 {\cf22 "21513"},\par
00270 {\cf22 "22000"},\par
00271 {\cf22 "22001"},\par
00272 {\cf22 "22002"},\par
00273 {\cf22 "22003"},\par
00274 {\cf22 "22004"},\par
00275 {\cf22 "22005"},\par
00276 {\cf22 "22006"},\par
00277 {\cf22 "22007"},\par
00278 {\cf22 "22008"},\par
00279 {\cf22 "22009"},\par
00280 {\cf22 "22010"},\par
00281 {\cf22 "22011"},\par
00282 {\cf22 "22012"},\par
00283 {\cf22 "22013"},\par
00284 {\cf22 "22014"},\par
00285 {\cf22 "22015"},\par
00286 {\cf22 "22501"},\par
00287 {\cf22 "22502"},\par
00288 {\cf22 "22503"},\par
00289 {\cf22 "22504"},\par
00290 {\cf22 "22505"},\par
00291 \};\par
00292         {\cf17 public} {\cf17 static} Dictionary<string, string> netOpenNameDic = {\cf17 new} Dictionary<string, string>\{\par
00293 \{{\cf22 "0"}, {\cf22 "Net190711"}\},\par
00294 \{{\cf22 "1"}, {\cf22 "Net190719"}\},\par
00295 \{{\cf22 "2"}, {\cf22 "Net190726"}\},\par
00296 \{{\cf22 "3"}, {\cf22 "Net190809"}\},\par
00297 \{{\cf22 "4"}, {\cf22 "Net190822"}\},\par
00298 \{{\cf22 "5"}, {\cf22 "Net190906"}\},\par
00299 \{{\cf22 "6"}, {\cf22 "Net190920"}\},\par
00300 \{{\cf22 "7"}, {\cf22 "Net191004"}\},\par
00301 \{{\cf22 "8"}, {\cf22 "Net191018"}\},\par
00302 \{{\cf22 "9"}, {\cf22 "Net191024"}\},\par
00303 \{{\cf22 "10"}, {\cf22 "Net191101"}\},\par
00304 \{{\cf22 "11"}, {\cf22 "Net191115"}\},\par
00305 \{{\cf22 "12"}, {\cf22 "Net191129"}\},\par
00306 \{{\cf22 "13"}, {\cf22 "Net191213"}\},\par
00307 \{{\cf22 "14"}, {\cf22 "Net191220"}\},\par
00308 \{{\cf22 "15"}, {\cf22 "Net200110"}\},\par
00309 \{{\cf22 "200123"}, {\cf22 "Net200123"}\},\par
00310 \{{\cf22 "200207"}, {\cf22 "Net200207"}\},\par
00311 \{{\cf22 "200214"}, {\cf22 "Net200214"}\},\par
00312 \{{\cf22 "200220"}, {\cf22 "Net200220"}\},\par
00313 \{{\cf22 "200306"}, {\cf22 "Net200306"}\},\par
00314 \{{\cf22 "200320"}, {\cf22 "Net200320"}\},\par
00315 \{{\cf22 "200605"}, {\cf22 "Net200605"}\},\par
00316 \{{\cf22 "200612"}, {\cf22 "Net200612"}\},\par
00317 \{{\cf22 "200619"}, {\cf22 "Net200619"}\},\par
00318 \{{\cf22 "200626"}, {\cf22 "Net200626"}\},\par
00319 \{{\cf22 "200710"}, {\cf22 "Net200710"}\},\par
00320 \{{\cf22 "200724"}, {\cf22 "Net200724"}\},\par
00321 \{{\cf22 "200807"}, {\cf22 "Net200807"}\},\par
00322 \{{\cf22 "200821"}, {\cf22 "Net200821"}\},\par
00323 \{{\cf22 "200904"}, {\cf22 "Net200904"}\},\par
00324 \{{\cf22 "200917"}, {\cf22 "Net200917"}\},\par
00325 \{{\cf22 "201001"}, {\cf22 "Net201001"}\},\par
00326 \{{\cf22 "201016"}, {\cf22 "Net201016"}\},\par
00327 \{{\cf22 "201030"}, {\cf22 "Net201030"}\},\par
00328 \{{\cf22 "201113"}, {\cf22 "Net201113"}\},\par
00329 \{{\cf22 "201127"}, {\cf22 "Net201127"}\},\par
00330 \{{\cf22 "201211"}, {\cf22 "Net201211"}\},\par
00331 \{{\cf22 "201225"}, {\cf22 "Net201225"}\},\par
00332 \{{\cf22 "210108"}, {\cf22 "Net210108"}\},\par
00333 \{{\cf22 "210121"}, {\cf22 "Net210121"}\},\par
00334 \{{\cf22 "210205"}, {\cf22 "Net210205"}\},\par
00335 \{{\cf22 "210219"}, {\cf22 "Net210219"}\},\par
00336 \{{\cf22 "210305"}, {\cf22 "Net210305"}\},\par
00337 \{{\cf22 "210318"}, {\cf22 "Net210318"}\},\par
00338 \{{\cf22 "210401"}, {\cf22 "Net210401"}\},\par
00339 \{{\cf22 "210409"}, {\cf22 "Net210409"}\},\par
00340 \{{\cf22 "210416"}, {\cf22 "Net210416"}\},\par
00341 \{{\cf22 "210428"}, {\cf22 "Net210428"}\},\par
00342 \{{\cf22 "210514"}, {\cf22 "Net210514"}\},\par
00343 \{{\cf22 "210528"}, {\cf22 "Net210528"}\},\par
00344 \{{\cf22 "210611"}, {\cf22 "Net210611"}\},\par
00345 \{{\cf22 "210625"}, {\cf22 "Net210625"}\},\par
00346 \{{\cf22 "210709"}, {\cf22 "Net210709"}\},\par
00347 \{{\cf22 "210723"}, {\cf22 "Net210723"}\},\par
00348 \{{\cf22 "210805"}, {\cf22 "Net210805"}\},\par
00349 \{{\cf22 "210820"}, {\cf22 "Net210820"}\},\par
00350 \{{\cf22 "210903"}, {\cf22 "Net210903"}\},\par
00351 \{{\cf22 "210916"}, {\cf22 "Net210916"}\},\par
00352 \{{\cf22 "210922"}, {\cf22 "Net210922"}\},\par
00353 \{{\cf22 "211001"}, {\cf22 "Net211001"}\},\par
00354 \{{\cf22 "211015"}, {\cf22 "Net211015"}\},\par
00355 \{{\cf22 "211029"}, {\cf22 "Net211029"}\},\par
00356 \{{\cf22 "211112"}, {\cf22 "Net211112"}\},\par
00357 \{{\cf22 "211126"}, {\cf22 "Net211126"}\},\par
00358 \{{\cf22 "211210"}, {\cf22 "Net211210"}\},\par
00359 \{{\cf22 "211216"}, {\cf22 "Net211216"}\},\par
00360 \{{\cf22 "211224"}, {\cf22 "Net211224"}\},\par
00361 \{{\cf22 "220107"}, {\cf22 "Net220107"}\},\par
00362 \{{\cf22 "220114"}, {\cf22 "Net220114"}\},\par
00363 \{{\cf22 "220128"}, {\cf22 "Net220128"}\},\par
00364 \{{\cf22 "220210"}, {\cf22 "Net220210"}\},\par
00365 \{{\cf22 "220225"}, {\cf22 "Net220225"}\},\par
00366 \{{\cf22 "220303"}, {\cf22 "Net220303"}\},\par
00367 \{{\cf22 "220311"}, {\cf22 "Net220311"}\},\par
00368 \{{\cf22 "220324"}, {\cf22 "Net220324"}\},\par
00369 \{{\cf22 "220401"}, {\cf22 "Net220401"}\},\par
00370 \{{\cf22 "220408"}, {\cf22 "Net220408"}\},\par
00371 \{{\cf22 "220415"}, {\cf22 "Net220415"}\},\par
00372 \{{\cf22 "220428"}, {\cf22 "Net220428"}\},\par
00373 \};\par
00374         {\cf17 public} {\cf17 static} Dictionary<string, string> releaseTagNameDic = {\cf17 new} Dictionary<string, string>\{\par
00375 \{{\cf22 "1"}, {\cf22 "Ver1.00.00"}\},\par
00376 \{{\cf22 "501"}, {\cf22 "Ver1.05.00"}\},\par
00377 \{{\cf22 "1001"}, {\cf22 "Ver1.10.00"}\},\par
00378 \{{\cf22 "1501"}, {\cf22 "Ver1.15.00"}\},\par
00379 \{{\cf22 "2001"}, {\cf22 "Ver1.20.00"}\},\par
00380 \{{\cf22 "2501"}, {\cf22 "Ver1.25.00"}\},\par
00381 \};\par
00382         {\cf17 public} {\cf17 static} Dictionary<string, string> rightsInfoDic = {\cf17 new} Dictionary<string, string>\{\par
00383 \{{\cf22 "0"}, {\cf22 ""}\},\par
00384 \{{\cf22 "1"}, {\cf22 "? 2016 \'E6\'9A\'81\'E3\'81\'AA\'E3\'81\'A4\'E3\'82\'81?\'E4\'B8\'89\'E5\'B6\'8B\'E3\'81\'8F\'E3\'82\'8D\'E3\'81\'AD\'EF\'BC\'8FKADOKAWA\'EF\'BC\'8F\'E3\'81\'93\'E3\'81\'AE\'E3\'81\'99\'E3\'81\'B0\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00385 \{{\cf22 "2"}, {\cf22 "? 2017 \'E3\'81\'A4\'E3\'81\'8F\'E3\'81\'97\'E3\'81\'82\'E3\'81\'8D\'E3\'81\'B2\'E3\'81\'A8?\'E7\'AB\'B9\'E6\'9B\'B8\'E6\'88\'BF\'EF\'BC\'8F\'E3\'83\'A1\'E3\'82\'A4\'E3\'83\'89\'E3\'82\'A4\'E3\'83\'B3\'E3\'82\'A2\'E3\'83\'93\'E3\'82\'B9\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00386 \{{\cf22 "3"}, {\cf22 "? Crypton Future Media, INC. www.piapro.net (+piapro logo)"}\},\par
00387 \{{\cf22 "4"}, {\cf22 "? Crypton Future Media, INC. www.piapro.net (+piapro logo) ?MTK/INTERNET Co., Ltd."}\},\par
00388 \{{\cf22 "5"}, {\cf22 "? Crypton Future Media, INC. www.piapro.net (+piapro logo) GUMI(Megpoid)?INTERNET Co., LTD."}\},\par
00389 \{{\cf22 "6"}, {\cf22 "? Crypton Future Media, INC. www.piapro.net (+piapro logo) \'E3\'83\'87\'E3\'82\'B6\'E3\'82\'A4\'E3\'83\'B3\'E5\'8D\'94\'E5\'8A\'9B\'EF\'BC\'9A\'E3\'81\'AD\'E3\'82\'93\'E3\'81\'A9\'E3\'82\'8D\'E3\'81\'84\'E3\'81\'A9"}\},\par
00390 \{{\cf22 "7"}, {\cf22 "? Cygames, Inc."}\},\par
00391 \{{\cf22 "8"}, {\cf22 "? Green Leaves / Wake Up, Girls\'EF\'BC\'81\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00392 \{{\cf22 "9"}, {\cf22 "?Koi?\'E8\'8A\'B3\'E6\'96\'87\'E7\'A4\'BE\'EF\'BC\'8F\'E3\'81\'94\'E6\'B3\'A8\'E6\'96\'87\'E3\'81\'AF\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A\'E3\'81\'A7\'E3\'81\'99\'E3\'81\'8B\'EF\'BC\'9F"}\},\par
00393 \{{\cf22 "10"}, {\cf22 "? TAITO CORP.1996"}\},\par
00394 \{{\cf22 "11"}, {\cf22 "? TAITO CORP.1996 ?SEGA"}\},\par
00395 \{{\cf22 "12"}, {\cf22 "? \'E3\'82\'AB\'E3\'83\'AB\'E3\'83\'AD?\'E3\'82\'BC\'E3\'83\'B3?KADOKAWA\'E5\'88\'8A\'EF\'BC\'8F\'E5\'B9\'BC\'E5\'A5\'B3\'E6\'88\'A6\'E8\'A8\'98\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00396 \{{\cf22 "13"}, {\cf22 "? \'E9\'95\'B7\'E6\'9C\'88\'E9\'81\'94\'E5\'B9\'B3?\'E6\'A0\'AA\'E5\'BC\'8F\'E4\'BC\'9A\'E7\'A4\'BEKADOKAWA\'E5\'88\'8A\'EF\'BC\'8FRe:\'E3\'82\'BC\'E3\'83\'AD\'E3\'81\'8B\'E3\'82\'89\'E5\'A7\'8B\'E3\'82\'81\'E3\'82\'8B\'E7\'95\'B0\'E4\'B8\'96\'E7\'95\'8C\'E7\'94\'9F\'E6\'B4\'BB\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00397 \{{\cf22 "14"}, {\cf22 "?1st PLACE Co., Ltd. / IA PROJECT"}\},\par
00398 \{{\cf22 "15"}, {\cf22 "?2013 RK,KM/UMDP"}\},\par
00399 \{{\cf22 "16"}, {\cf22 "?2013\'E3\'81\'A1\'E3\'82\'87\'E3\'81\'BC\'E3\'82\'89\'E3\'81\'86\'E3\'81\'AB\'E3\'82\'87\'E3\'81\'BD\'E3\'81\'BF\'EF\'BC\'8F\'E7\'AB\'B9\'E6\'9B\'B8\'E6\'88\'BF\'E3\'80\'80\'E5\'80\'89\'E6\'8C\'81\'E5\'8D\'97\'E9\'AB\'98\'E6\'A0\'A1\'E6\'BC\'AB\'E7\'94\'BB\'E7\'A0\'94\'E7\'A9\'B6\'E9\'83\'A8\'EF\'BC\'88\'E7\'AB\'B9\'E6\'9B\'B8\'E6\'88\'BF?SPO?AT-X\'EF\'BC\'89"}\},\par
00400 \{{\cf22 "18"}, {\cf22 "?2014 Konami Digital Entertainment"}\},\par
00401 \{{\cf22 "20"}, {\cf22 "?2014 \'E6\'A6\'8E\'E5\'AE\'AE\'E7\'A5\'90?\'E6\'A0\'AA\'E5\'BC\'8F\'E4\'BC\'9A\'E7\'A4\'BE\'EF\'BC\'AB\'EF\'BC\'A1\'EF\'BC\'A4\'EF\'BC\'AF\'EF\'BC\'AB\'EF\'BC\'A1\'EF\'BC\'B7\'EF\'BC\'A1 \'E3\'83\'A1\'E3\'83\'87\'E3\'82\'A3\'E3\'82\'A2\'E3\'83\'95\'E3\'82\'A1\'E3\'82\'AF\'E3\'83\'88\'E3\'83\'AA\'E3\'83\'BC\'E5\'88\'8A\'EF\'BC\'8F\'E3\'83\'8E\'E3\'83\'BC\'E3\'82\'B2\'E3\'83\'BC\'E3\'83\'A0?\'E3\'83\'8E\'E3\'83\'BC\'E3\'83\'A9\'E3\'82\'A4\'E3\'83\'95\'E5\'85\'A8\'E6\'A8\'A9\'E4\'BB\'A3\'E7\'90\'86\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00402 \{{\cf22 "21"}, {\cf22 "?2015 \'E3\'82\'B5\'E3\'83\'B3\'E3\'82\'AB\'E3\'82\'AF\'E3\'83\'98\'E3\'83\'83\'E3\'83\'89\'EF\'BC\'8F\'E9\'9B\'86\'E8\'8B\'B1\'E7\'A4\'BE?\'E3\'80\'8C\'E5\'B9\'B2\'E7\'89\'A9\'E5\'A6\'B9\'EF\'BC\'81\'E3\'81\'86\'E3\'81\'BE\'E3\'82\'8B\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93\'E3\'80\'8D\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00403 \{{\cf22 "23"}, {\cf22 "?2016 \'E3\'81\'86\'E3\'81\'8B\'E3\'81\'BF\'EF\'BC\'8F\'EF\'BC\'AB\'EF\'BC\'A1\'EF\'BC\'A4\'EF\'BC\'AF\'EF\'BC\'AB\'EF\'BC\'A1\'EF\'BC\'B7\'EF\'BC\'A1\'E3\'80\'80\'E3\'82\'A2\'E3\'82\'B9\'E3\'82\'AD\'E3\'83\'BC?\'E3\'83\'A1\'E3\'83\'87\'E3\'82\'A3\'E3\'82\'A2\'E3\'83\'AF\'E3\'83\'BC\'E3\'82\'AF\'E3\'82\'B9\'EF\'BC\'8F\'E3\'82\'AC\'E3\'83\'B4\'E3\'83\'AA\'E3\'83\'BC\'E3\'83\'AB\'E3\'83\'89\'E3\'83\'AD\'E3\'83\'83\'E3\'83\'97\'E3\'82\'A2\'E3\'82\'A6\'E3\'83\'88\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00404 \{{\cf22 "25"}, {\cf22 "?2017 VOCALOMAKETS Powered by Bumpy Factory Corporation. \'E7\'B5\'90\'E6\'9C\'88\'E3\'82\'86\'E3\'81\'8B\'E3\'82\'8A\'E3\'81\'AF\'E6\'A0\'AA\'E5\'BC\'8F\'E4\'BC\'9A\'E7\'A4\'BE\'E3\'83\'90\'E3\'83\'B3\'E3\'83\'94\'E3\'83\'BC\'E3\'83\'95\'E3\'82\'A1\'E3\'82\'AF\'E3\'83\'88\'E3\'83\'AA\'E3\'83\'BC\'E3\'81\'AE\'E7\'99\'BB\'E9\'8C\'B2\'E5\'95\'86\'E6\'A8\'99\'E3\'81\'A7\'E3\'81\'99 \'E3\'80\'82"}\},\par
00405 \{{\cf22 "26"}, {\cf22 "?2017 \'E3\'82\'B5\'E3\'83\'B3\'E3\'82\'AB\'E3\'82\'AF\'E3\'83\'98\'E3\'83\'83\'E3\'83\'89\'EF\'BC\'8F\'E9\'9B\'86\'E8\'8B\'B1\'E7\'A4\'BE?\'E3\'80\'8C\'E5\'B9\'B2\'E7\'89\'A9\'E5\'A6\'B9\'EF\'BC\'81\'E3\'81\'86\'E3\'81\'BE\'E3\'82\'8B\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93R\'E3\'80\'8D\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00406 \{{\cf22 "27"}, {\cf22 "?2018 VOCALOMAKETS Powered by Bumpy Factory Corporation. ?Copyright  2014 AI,Inc. All Rights Reserved. ?AHS Co. Ltd."}\},\par
00407 \{{\cf22 "28"}, {\cf22 "?2018 VOCALOMAKETS Powered by Bumpy Factory Corporation. \'E7\'B5\'90\'E6\'9C\'88\'E3\'82\'86\'E3\'81\'8B\'E3\'82\'8A\'E3\'81\'AF\'E6\'A0\'AA\'E5\'BC\'8F\'E4\'BC\'9A\'E7\'A4\'BE\'E3\'83\'90\'E3\'83\'B3\'E3\'83\'94\'E3\'83\'BC\'E3\'83\'95\'E3\'82\'A1\'E3\'82\'AF\'E3\'83\'88\'E3\'83\'AA\'E3\'83\'BC\'E3\'81\'AE\'E7\'99\'BB\'E9\'8C\'B2\'E5\'95\'86\'E6\'A8\'99\'E3\'81\'A7\'E3\'81\'99\'E3\'80\'82"}\},\par
00408 \{{\cf22 "29"}, {\cf22 "?Ark Performance/\'E5\'B0\'91\'E5\'B9\'B4\'E7\'94\'BB\'E5\'A0\'B1\'E7\'A4\'BE?\'E3\'82\'A2\'E3\'83\'AB\'E3\'83\'9A\'E3\'82\'B8\'E3\'82\'AA\'E3\'83\'91\'E3\'83\'BC\'E3\'83\'88\'E3\'83\'8A\'E3\'83\'BC\'E3\'82\'BA"}\},\par
00409 \{{\cf22 "31"}, {\cf22 "?BANDAI NAMCO Entertainment Inc."}\},\par
00410 \{{\cf22 "32"}, {\cf22 "?BANDAI NAMCO Games Inc."}\},\par
00411 \{{\cf22 "33"}, {\cf22 "?BANDAI NAMCO Games Inc. ? TAITO CORP.1996"}\},\par
00412 \{{\cf22 "34"}, {\cf22 "?BANDAI NAMCO Games Inc. ?SEGA"}\},\par
00413 \{{\cf22 "35"}, {\cf22 "?HARUKAZE"}\},\par
00414 \{{\cf22 "36"}, {\cf22 "?Junky"}\},\par
00415 \{{\cf22 "37"}, {\cf22 "?MTK/INTERNET Co., Ltd."}\},\par
00416 \{{\cf22 "38"}, {\cf22 "?NHN PlayArt Corp. ?DWANGO Co., Ltd."}\},\par
00417 \{{\cf22 "39"}, {\cf22 "?Sammy"}\},\par
00418 \{{\cf22 "40"}, {\cf22 "?SEGA"}\},\par
00419 \{{\cf22 "41"}, {\cf22 "?SEGA / f4samurai"}\},\par
00420 \{{\cf22 "42"}, {\cf22 "?SEGA/?RED"}\},\par
00421 \{{\cf22 "43"}, {\cf22 "?SEGA/\'EF\'BC\'A7\'EF\'BC\'AF\'EF\'BC\'81\'EF\'BC\'A7\'EF\'BC\'AF\'EF\'BC\'81\'EF\'BC\'95\'EF\'BC\'97\'EF\'BC\'95\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00422 \{{\cf22 "45"}, {\cf22 "?SEGA?RED Illustration:Kosuke Fujishima"}\},\par
00423 \{{\cf22 "46"}, {\cf22 "?SEGA?RED?\'E7\'99\'BD\'E6\'B3\'89\'E7\'A4\'BE"}\},\par
00424 \{{\cf22 "47"}, {\cf22 "?TAITO CORP.1978,2014"}\},\par
00425 \{{\cf22 "48"}, {\cf22 "?TOHOKU PENET K.K."}\},\par
00426 \{{\cf22 "49"}, {\cf22 "?\'E3\'81\'82f\'E3\'82\'8D?\'E8\'8A\'B3\'E6\'96\'87\'E7\'A4\'BE\'EF\'BC\'8F\'E9\'87\'8E\'E5\'A4\'96\'E6\'B4\'BB\'E5\'8B\'95\'E3\'82\'B5\'E3\'83\'BC\'E3\'82\'AF\'E3\'83\'AB"}\},\par
00427 \{{\cf22 "50"}, {\cf22 "?\'E3\'81\'91\'E3\'82\'82\'E3\'81\'AE\'E3\'83\'95\'E3\'83\'AC\'E3\'83\'B3\'E3\'82\'BA\'E3\'83\'97\'E3\'83\'AD\'E3\'82\'B8\'E3\'82\'A7\'E3\'82\'AF\'E3\'83\'88"}\},\par
00428 \{{\cf22 "53"}, {\cf22 "?\'E3\'81\'AB\'E3\'81\'98\'E3\'82\'88\'E3\'82\'81"}\},\par
00429 \{{\cf22 "54"}, {\cf22 "?\'E3\'83\'92\'E3\'83\'AD\'E3\'83\'A6\'E3\'82\'AD?\'E8\'AC\'9B\'E8\'AB\'87\'E7\'A4\'BE\'EF\'BC\'8F\'E3\'82\'A2\'E3\'83\'9B\'E3\'82\'AC\'E3\'83\'BC\'E3\'83\'AB\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00430 \{{\cf22 "55"}, {\cf22 "?\'E9\'8E\'8C\'E6\'B1\'A0\'E5\'92\'8C\'E9\'A6\'AC\'EF\'BC\'8F\'E5\'86\'AC\'E5\'B7\'9D\'E5\'9F\'BA\'EF\'BC\'8F\'E3\'82\'A2\'E3\'82\'B9\'E3\'82\'AD\'E3\'83\'BC?\'E3\'83\'A1\'E3\'83\'87\'E3\'82\'A3\'E3\'82\'A2\'E3\'83\'AF\'E3\'83\'BC\'E3\'82\'AF\'E3\'82\'B9\'EF\'BC\'8FPROJECT-RAILGUN S"}\},\par
00431 \{{\cf22 "57"}, {\cf22 "?\'E4\'B8\'89\'E6\'9C\'88?KADOKAWA\'E5\'88\'8A\'EF\'BC\'8F\'E3\'81\'B2\'E3\'81\'AA\'E3\'81\'93\'E3\'81\'AE\'E3\'83\'BC\'E3\'81\'A8\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00432 \{{\cf22 "58"}, {\cf22 "?\'E4\'B8\'8A\'E6\'B5\'B7\'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'B9\'E5\'B9\'BB\'E6\'A8\'82\'E5\'9B\'A3"}\},\par
00433 \{{\cf22 "59"}, {\cf22 "?\'E4\'B8\'8A\'E6\'B5\'B7\'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'B9\'E5\'B9\'BB\'E6\'A8\'82\'E5\'9B\'A3 \'E3\'80\'8C\'E3\'81\'8A\'E3\'81\'A6\'E3\'82\'93\'E3\'81\'B0\'E6\'81\'8B\'E5\'A8\'98\'E3\'80\'8D"}\},\par
00434 \{{\cf22 "60"}, {\cf22 "?\'E4\'B8\'8A\'E6\'B5\'B7\'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'B9\'E5\'B9\'BB\'E6\'A8\'82\'E5\'9B\'A3 \'E3\'80\'8C\'E7\'AB\'B9\'E5\'8F\'96\'E9\'A3\'9B\'E7\'BF\'94\'E3\'80\'80\'EF\'BD\'9E Lunatic Princess\'E3\'80\'8D"}\},\par
00435 \{{\cf22 "61"}, {\cf22 "?\'E5\'A4\'A7\'E5\'B7\'9D\'E3\'81\'B6\'E3\'81\'8F\'E3\'81\'B6/\'E7\'AB\'B9\'E6\'9B\'B8\'E6\'88\'BF?\'E3\'82\'AD\'E3\'83\'B3\'E3\'82\'B0\'E3\'83\'AC\'E3\'82\'B3\'E3\'83\'BC\'E3\'83\'89"}\},\par
00436 \{{\cf22 "63"}, {\cf22 "designed by HaltquinZ????(\'E3\'81\'BE\'E3\'81\'97\'E3\'82\'8D\'E3\'81\'BE+Rinne.6)"}\},\par
00437 \{{\cf22 "64"}, {\cf22 "GUMI(Megpoid)?INTERNET Co., LTD."}\},\par
00438 \{{\cf22 "65"}, {\cf22 "ill.by \'E7\'A9\'82\'E5\'B6\'8B ? Crypton Future Media, INC. www.piapro.net (+piapro logo)"}\},\par
00439 \{{\cf22 "66"}, {\cf22 "illustration by AO FUJIMORI / \'E9\'9B\'AA\'E3\'83\'9F\'E3\'82\'AF2017 ? Crypton Future Media, INC.\'E3\'80\'80www.piapro.net (+piapro logo)"}\},\par
00440 \{{\cf22 "67"}, {\cf22 "illust\'E3\'82\'8D\'E3\'81\'93\'E3\'82\'8B(@tuno901)"}\},\par
00441 \{{\cf22 "68"}, {\cf22 "Licensed by BANDAI NAMCO Arts Inc./Lantis Records. ?\'E6\'AF\'9B\'E9\'AD\'82\'E4\'B8\'80\'E7\'9B\'B4\'E7\'B7\'9A?\'E3\'81\'B5\'E3\'82\'85\'E3\'83\'BC\'E3\'81\'98\'E3\'82\'87\'E3\'82\'93\'E3\'81\'B7\'E3\'82\'8D\'E3\'81\'A0\'E3\'81\'8F\'E3\'81\'A8\'EF\'BC\'8F\'E9\'AD\'94\'E6\'B3\'95\'E5\'B0\'91\'E5\'A5\'B3\'E4\'BF\'BA\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00442 \{{\cf22 "69"}, {\cf22 "Licensed by REISSUE RECORDS inc. ? Crypton Future Media, INC. www.piapro.net (+piapro logo)"}\},\par
00443 \{{\cf22 "70"}, {\cf22 "Licensed by TOY'S FACTORY INC."}\},\par
00444 \{{\cf22 "71"}, {\cf22 "?2015 SPACE SHOWER NETWORKS INC. ?2015 SPACE SHOWER NETWORKS INC."}\},\par
00445 \{{\cf22 "72"}, {\cf22 "TV\'E3\'82\'A2\'E3\'83\'8B\'E3\'83\'A1\'E3\'80\'8EHi\'E2\'98\'86sCoool! \'E3\'82\'BB\'E3\'83\'8F\'E3\'82\'AC\'E3\'83\'BC\'E3\'83\'AB\'E3\'80\'8F?SEGA/\'E3\'82\'BB\'E3\'83\'8F\'E3\'82\'AC\'E3\'82\'AC\'E5\'AD\'A6\'E5\'9C\'92\'E7\'90\'86\'E4\'BA\'8B\'E4\'BC\'9A"}\},\par
00446 \{{\cf22 "73"}, {\cf22 "\'E3\'82\'BB\'E3\'82\'AC?\'E3\'83\'8F\'E3\'83\'BC\'E3\'83\'89?\'E3\'82\'AC\'E3\'83\'BC\'E3\'83\'AB\'E3\'82\'BA ?SEGA TV\'E3\'82\'A2\'E3\'83\'8B\'E3\'83\'A1\'E3\'80\'8EHi\'E2\'98\'86sCoool! \'E3\'82\'BB\'E3\'83\'8F\'E3\'82\'AC\'E3\'83\'BC\'E3\'83\'AB\'E3\'80\'8F?SEGA/\'E3\'82\'BB\'E3\'83\'8F\'E3\'82\'AC\'E3\'82\'AC\'E5\'AD\'A6\'E5\'9C\'92\'E7\'90\'86\'E4\'BA\'8B\'E4\'BC\'9A"}\},\par
00447 \{{\cf22 "74"}, {\cf22 "\'E3\'83\'97\'E3\'83\'A9\'E3\'83\'B3\'E3\'83\'81\'E3\'83\'A3\'E3\'82\'A4\'E3\'83\'A0"}\},\par
00448 \{{\cf22 "75"}, {\cf22 "\'E8\'92\'B2\'E7\'84\'BC\'E9\'B0\'BB ?\'E4\'B8\'8A\'E6\'B5\'B7\'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'B9\'E5\'B9\'BB\'E6\'A8\'82\'E5\'9B\'A3"}\},\par
00449 \{{\cf22 "76"}, {\cf22 "\'E9\'87\'8D\'E9\'9F\'B3\'E3\'83\'86\'E3\'83\'88? \'E7\'B7\'9A/\'E5\'B0\'8F\'E5\'B1\'B1\'E4\'B9\'83\'E8\'88\'9E\'E4\'B8\'96/\'E3\'83\'84\'E3\'82\'A4\'E3\'83\'B3\'E3\'83\'89\'E3\'83\'AA\'E3\'83\'AB"}\},\par
00450 \{{\cf22 "77"}, {\cf22 "?\'E3\'81\'91\'E3\'82\'82\'E3\'81\'AE\'E3\'83\'95\'E3\'83\'AC\'E3\'83\'B3\'E3\'82\'BA\'E3\'83\'97\'E3\'83\'AD\'E3\'82\'B8\'E3\'82\'A7\'E3\'82\'AF\'E3\'83\'882A"}\},\par
00451 \{{\cf22 "78"}, {\cf22 "U.S.A. Music by Claudio Accatino, Donatella Cirelli & Anna Maria Gioco  Words by Donatella Cirelli & Severino Lombardoni ? by THE SAIFAM GROUP SRL ? by EDIZIONI ZYX MUSIC S.R.L. All rights reserved. Used by permission. Rights for Japan administered by NICHION, INC. Licensed by Avex Music Publishing Inc."}\},\par
00452 \{{\cf22 "79"}, {\cf22 "? UUUM"}\},\par
00453 \{{\cf22 "80"}, {\cf22 "?\'E5\'86\'86\'E8\'B0\'B7\'E3\'83\'97\'E3\'83\'AD ?2018 TRIGGER?\'E9\'9B\'A8\'E5\'AE\'AE\'E5\'93\'B2\'EF\'BC\'8F\'E3\'80\'8CGRIDMAN\'E3\'80\'8D\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00454 \{{\cf22 "81"}, {\cf22 "?KADOKAWA CORPORATION ?F.M.F Co,.Ltd."}\},\par
00455 \{{\cf22 "82"}, {\cf22 "?\'E6\'9D\'BF\'E5\'9E\'A3\'E6\'81\'B5\'E4\'BB\'8B(\'E7\'A7\'8B\'E7\'94\'B0\'E6\'9B\'B8\'E5\'BA\'97)\'EF\'BC\'8F\'E3\'83\'90\'E3\'82\'AD\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00456 \{{\cf22 "83"}, {\cf22 "? \'E3\'82\'B3\'E3\'83\'81\'E3\'83\'B3Pa!\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00457 \{{\cf22 "84"}, {\cf22 "?\'E3\'82\'BE\'E3\'83\'B3\'E3\'83\'93\'E3\'83\'A9\'E3\'83\'B3\'E3\'83\'89\'E3\'82\'B5\'E3\'82\'AC\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00458 \{{\cf22 "85"}, {\cf22 "?\'E5\'86\'86\'E8\'B0\'B7\'E3\'83\'97\'E3\'83\'AD ?\'E6\'80\'AA\'E7\'8D\'A3\'E5\'A8\'982\'EF\'BC\'88\'E3\'82\'A6\'E3\'83\'AB\'E3\'83\'88\'E3\'83\'A9\'E6\'80\'AA\'E7\'8D\'A3\'E6\'93\'AC\'E4\'BA\'BA\'E5\'8C\'96\'E8\'A8\'88\'E7\'94\'BB\'EF\'BC\'89\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00459 \{{\cf22 "86"}, {\cf22 "?2019 VOCALOMAKETS Powered by Bumpy Factory Corporation. \'E7\'B5\'90\'E6\'9C\'88\'E3\'82\'86\'E3\'81\'8B\'E3\'82\'8A\'E3\'81\'AF\'E6\'A0\'AA\'E5\'BC\'8F\'E4\'BC\'9A\'E7\'A4\'BE\'E3\'83\'90\'E3\'83\'B3\'E3\'83\'94\'E3\'83\'BC\'E3\'83\'95\'E3\'82\'A1\'E3\'82\'AF\'E3\'83\'88\'E3\'83\'AA\'E3\'83\'BC\'E3\'81\'AE\'E7\'99\'BB\'E9\'8C\'B2\'E5\'95\'86\'E6\'A8\'99\'E3\'81\'A7\'E3\'81\'99 \'E3\'80\'82"}\},\par
00460 \{{\cf22 "87"}, {\cf22 "?2019 VOCALOMAKETS Powered by Bumpy Factory Corporation. \'E7\'B4\'B2\'E6\'98\'9F\'E3\'81\'82\'E3\'81\'8B\'E3\'82\'8A\'E3\'81\'AF\'E6\'A0\'AA\'E5\'BC\'8F\'E4\'BC\'9A\'E7\'A4\'BE\'E3\'83\'90\'E3\'83\'B3\'E3\'83\'94\'E3\'83\'BC\'E3\'83\'95\'E3\'82\'A1\'E3\'82\'AF\'E3\'83\'88\'E3\'83\'AA\'E3\'83\'BC\'E3\'81\'AE\'E7\'99\'BB\'E9\'8C\'B2\'E5\'95\'86\'E6\'A8\'99\'E3\'81\'A7\'E3\'81\'99 \'E3\'80\'82"}\},\par
00461 \{{\cf22 "88"}, {\cf22 "?\'E5\'86\'86\'E8\'B0\'B7\'E3\'83\'97\'E3\'83\'AD ?\'E6\'80\'AA\'E7\'8D\'A3\'E5\'A8\'98\'E9\'BB\'92\'EF\'BC\'88\'E3\'82\'A6\'E3\'83\'AB\'E3\'83\'88\'E3\'83\'A9\'E6\'80\'AA\'E7\'8D\'A3\'E6\'93\'AC\'E4\'BA\'BA\'E5\'8C\'96\'E8\'A8\'88\'E7\'94\'BB\'EF\'BC\'89\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00462 \{{\cf22 "89"}, {\cf22 "? \'E5\'A4\'A7\'E5\'B7\'9D\'E3\'81\'B6\'E3\'81\'8F\'E3\'81\'B6/\'E7\'AB\'B9\'E6\'9B\'B8\'E6\'88\'BF?\'E3\'82\'AD\'E3\'83\'B3\'E3\'82\'B0\'E3\'83\'AC\'E3\'82\'B3\'E3\'83\'BC\'E3\'83\'89\'E3\'80\'80?AC\'E9\'83\'A8"}\},\par
00463 \{{\cf22 "90"}, {\cf22 "? Crypton Future Media, INC. www.piapro.net (+piapro logo) 2012 by FUJIPACIFIC MUSIC INC. & DWANGO Co., Ltd."}\},\par
00464 \{{\cf22 "91"}, {\cf22 "?2015 by HIP LAND MUSIC CORPORATION INC. Licensed by Victor Entertainment"}\},\par
00465 \{{\cf22 "92"}, {\cf22 "Licensed by BANDAI NAMCO ARTS Inc./Lantis Records ?\'E3\'82\'AF\'E3\'83\'BC\'E3\'83\'AB\'E6\'95\'99\'E4\'BF\'A1\'E8\'80\'85?\'E5\'8F\'8C\'E8\'91\'89\'E7\'A4\'BE\'EF\'BC\'8F\'E3\'83\'89\'E3\'83\'A9\'E3\'82\'B4\'E3\'83\'B3\'E7\'94\'9F\'E6\'B4\'BB\'E5\'90\'91\'E4\'B8\'8A\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00466 \{{\cf22 "93"}, {\cf22 "?\'E8\'B5\'A4\'E5\'9D\'82\'E3\'82\'A2\'E3\'82\'AB\'EF\'BC\'8F\'E9\'9B\'86\'E8\'8B\'B1\'E7\'A4\'BE?\'E3\'81\'8B\'E3\'81\'90\'E3\'82\'84\'E6\'A7\'98\'E3\'81\'AF\'E5\'91\'8A\'E3\'82\'89\'E3\'81\'9B\'E3\'81\'9F\'E3\'81\'84\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00467 \{{\cf22 "94"}, {\cf22 "?\'E7\'95\'B0\'E4\'B8\'96\'E7\'95\'8C\'E3\'81\'8B\'E3\'82\'8B\'E3\'81\'A6\'E3\'81\'A3\'E3\'81\'A8\'EF\'BC\'8F\'EF\'BC\'AB\'EF\'BC\'A1\'EF\'BC\'A4\'EF\'BC\'AF\'EF\'BC\'AB\'EF\'BC\'A1\'EF\'BC\'B7\'EF\'BC\'A1"}\},\par
00468 \{{\cf22 "96"}, {\cf22 "?CHIROLU?\'E3\'83\'9B\'E3\'83\'93\'E3\'83\'BC\'E3\'82\'B8\'E3\'83\'A3\'E3\'83\'91\'E3\'83\'B3\'EF\'BC\'8F\'E7\'99\'BD\'E9\'87\'91\'E3\'81\'AE\'E5\'A6\'96\'E7\'B2\'BE\'E5\'A7\'AB\'E3\'82\'92\'E8\'A6\'8B\'E5\'AE\'88\'E3\'82\'8B\'E4\'BC\'9A"}\},\par
00469 \{{\cf22 "97"}, {\cf22 "?TADAKOI PARTNERS  ?KADOKAWA CORPORATION"}\},\par
00470 \{{\cf22 "98"}, {\cf22 "? Crypton Future Media, INC. www.piapro.net (+piapro logo) ?NHN PlayArt Corp. ?DWANGO Co., Ltd."}\},\par
00471 \{{\cf22 "99"}, {\cf22 "?\'E5\'85\'AD\'E5\'8E\'98\'E8\'88\'8E"}\},\par
00472 \{{\cf22 "100"}, {\cf22 "?Rayark Inc."}\},\par
00473 \{{\cf22 "101"}, {\cf22 "? UMAMI CHAN ? \'E3\'82\'84\'E3\'81\'8A\'E3\'81\'8D\'E3\'82\'93"}\},\par
00474 \{{\cf22 "102"}, {\cf22 "?VAP"}\},\par
00475 \{{\cf22 "103"}, {\cf22 "?Koi?\'E8\'8A\'B3\'E6\'96\'87\'E7\'A4\'BE\'EF\'BC\'8F\'E3\'81\'94\'E6\'B3\'A8\'E6\'96\'87\'E3\'81\'AF\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A\'E3\'81\'A7\'E3\'81\'99\'E3\'81\'8B\'EF\'BC\'9F\'EF\'BC\'9F"}\},\par
00476 \{{\cf22 "104"}, {\cf22 "?\'E4\'BC\'8A\'E8\'97\'A4\'E3\'81\'84\'E3\'81\'A5\'E3\'82\'82?\'E8\'8A\'B3\'E6\'96\'87\'E7\'A4\'BE\'EF\'BC\'8F\'E3\'81\'BE\'E3\'81\'A1\'E3\'82\'AB\'E3\'83\'89\'E3\'81\'BE\'E3\'81\'9E\'E3\'81\'8F\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00477 \{{\cf22 "105"}, {\cf22 "Licensed by Sony Music Labels Inc."}\},\par
00478 \{{\cf22 "106"}, {\cf22 "?\'E5\'B0\'8F\'E6\'9E\'97 \'E7\'AB\'8B/\'E3\'82\'B9\'E3\'82\'AF\'E3\'82\'A6\'E3\'82\'A7\'E3\'82\'A2\'E3\'82\'A8\'E3\'83\'8B\'E3\'83\'83\'E3\'82\'AF\'E3\'82\'B9?\'E5\'92\'B2\'E9\'98\'BF\'E7\'9F\'A5\'E8\'B3\'80\'E7\'B7\'A8\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A ? BANDAI NAMCO Arts Inc./Lantis Records"}\},\par
00479 \{{\cf22 "107"}, {\cf22 "?2019 \'E3\'82\'B5\'E3\'83\'B3\'E3\'83\'89\'E3\'83\'AD\'E3\'83\'93\'E3\'83\'83\'E3\'83\'81?\'E3\'83\'A4\'E3\'83\'90\'E5\'AD\'90\'EF\'BC\'8CMAAM?\'E5\'B0\'8F\'E5\'AD\'A6\'E9\'A4\'A8\'EF\'BC\'8F\'E3\'82\'B7\'E3\'83\'AB\'E3\'83\'90\'E3\'83\'BC\'E3\'83\'9E\'E3\'83\'B3\'E3\'82\'B8\'E3\'83\'A0"}\},\par
00480 \{{\cf22 "108"}, {\cf22 "?2017-2020 Ichikara Inc."}\},\par
00481 \{{\cf22 "109"}, {\cf22 "?OFFICIALHIGEDANDISM"}\},\par
00482 \{{\cf22 "110"}, {\cf22 "?Copyright 2014 AI,Inc. All Rights Reserved."}\},\par
00483 \{{\cf22 "111"}, {\cf22 "? lowiro 2021"}\},\par
00484 \{{\cf22 "112"}, {\cf22 "Emoji Powered by Twemoji, used under CC BY 4.0 / Includes alternation from original"}\},\par
00485 \{{\cf22 "113"}, {\cf22 "?OTOIRO Inc."}\},\par
00486 \{{\cf22 "114"}, {\cf22 "? 2017-2020 cover corp."}\},\par
00487 \{{\cf22 "115"}, {\cf22 "?Gynoid. Illustration by \'E3\'81\'AE\'E3\'81\'86"}\},\par
00488 \{{\cf22 "116"}, {\cf22 "? SEGA ? Colorful Palette Inc. ? Crypton Future Media, INC. www.piapro.net (+piapro logo) All rights reserved."}\},\par
00489 \{{\cf22 "117"}, {\cf22 "? \'E3\'81\'84\'E3\'82\'89\'E3\'81\'99\'E3\'81\'A8\'E3\'82\'84"}\},\par
00490 \{{\cf22 "118"}, {\cf22 "Licensed by EMI Records, A UNIVERSAL MUSIC COMPANY"}\},\par
00491 \{{\cf22 "119"}, {\cf22 "Licensed by UNIVERSAL CLASSICS & JAZZ, A UNIVERSAL MUSIC COMPANY ?2019\'E6\'97\'A5\'E6\'9C\'AC\'E3\'81\'99\'E3\'81\'BF\'E3\'81\'A3\'E3\'82\'B3\'E3\'81\'90\'E3\'82\'89\'E3\'81\'97\'E5\'8D\'94\'E4\'BC\'9A\'E6\'98\'A0\'E7\'94\'BB\'E9\'83\'A8"}\},\par
00492 \{{\cf22 "120"}, {\cf22 "?2006 \'E8\'B0\'B7\'E5\'B7\'9D \'E6\'B5\'81?\'E3\'81\'84\'E3\'81\'A8\'E3\'81\'86\'E3\'81\'AE\'E3\'81\'84\'E3\'81\'A2\'EF\'BC\'8FSOS\'E5\'9B\'A3"}\},\par
00493 \{{\cf22 "122"}, {\cf22 "?\'E5\'B1\'B1\'E5\'8F\'A3\'E6\'82\'9F?\'E4\'B8\'80\'E8\'BF\'85\'E7\'A4\'BE\'EF\'BC\'8F\'E3\'81\'AF\'E3\'82\'81\'E3\'81\'B5\'E3\'82\'89\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A Licensed by KING RECORD Co., Ltd."}\},\par
00494 \{{\cf22 "123"}, {\cf22 "\'E3\'83\'93\'E3\'83\'83\'E3\'82\'AB\'E3\'83\'A1\'E5\'A8\'98?\'E3\'83\'8A\'E3\'82\'A4\'E3\'82\'BB\'E3\'83\'B3"}\},\par
00495 \{{\cf22 "124"}, {\cf22 "?Avogado6"}\},\par
00496 \{{\cf22 "125"}, {\cf22 "?Copyright 2021 SSS LLC. ?2021 VOCALOMAKETS Powered by Bumpy Factory Corporation."}\},\par
00497 \{{\cf22 "126"}, {\cf22 "?\'E4\'B8\'8A\'E6\'B5\'B7\'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'B9\'E5\'B9\'BB\'E6\'A8\'82\'E5\'9B\'A3 ?GSC/NN"}\},\par
00498 \{{\cf22 "127"}, {\cf22 "Licensed by Virgin Music, A UNIVERSAL MUSIC COMPANY"}\},\par
00499 \{{\cf22 "128"}, {\cf22 "?cosMo@Bousou-P/CHEMICAL SYSTEM"}\},\par
00500 \{{\cf22 "129"}, {\cf22 "?\'E3\'82\'AD\'E3\'83\'8E\'E3\'82\'B7\'E3\'82\'BF ? Crypton Future Media, INC. www.piapro.net (+piapro logo) ?MTK/INTERNET Co., Ltd."}\},\par
00501 \{{\cf22 "130"}, {\cf22 "?\'E3\'81\'82f\'E3\'82\'8D?\'E8\'8A\'B3\'E6\'96\'87\'E7\'A4\'BE\'EF\'BC\'8F\'E9\'87\'8E\'E5\'A4\'96\'E6\'B4\'BB\'E5\'8B\'95\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00502 \{{\cf22 "131"}, {\cf22 "?2020 \'E4\'B8\'88\'EF\'BC\'8FKADOKAWA\'EF\'BC\'8F\'E5\'AE\'87\'E5\'B4\'8E\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93\'E8\'A3\'BD\'E4\'BD\'9C\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00503 \{{\cf22 "132"}, {\cf22 "Licensed by Sony Music Entertainment (Japan) Inc. Sony Music Entertainment (Japan) Inc. / \'E8\'97\'8D\'E3\'81\'AB\'E3\'81\'84\'E3\'81\'AA"}\},\par
00504 \{{\cf22 "133"}, {\cf22 "?\'E3\'82\'AD\'E3\'83\'8E\'E3\'82\'B7\'E3\'82\'BF ?MTK/INTERNET Co., Ltd."}\},\par
00505 \{{\cf22 "134"}, {\cf22 "?\'E4\'B8\'8A\'E6\'B5\'B7\'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'B9\'E5\'B9\'BB\'E6\'A8\'82\'E5\'9B\'A3  ?\'E3\'82\'A2\'E3\'83\'B3\'E3\'83\'8E\'E3\'82\'A6\'E3\'83\'B3X / AQUASTYLE?DeNA?xeen  inspiredby \'E6\'9D\'B1\'E6\'96\'B9Project"}\},\par
00506 \{{\cf22 "135"}, {\cf22 "?ANYCOLOR, Inc."}\},\par
00507 \{{\cf22 "136"}, {\cf22 "? Bit192"}\},\par
00508 \{{\cf22 "137"}, {\cf22 "?2018 F.M.F"}\},\par
00509 \{{\cf22 "138"}, {\cf22 "Licensed by unBORDE / Warner Music Japan Inc. / A-Sketch inc.  ??Avogado6"}\},\par
00510 \{{\cf22 "139"}, {\cf22 "?\'E3\'82\'AF\'E3\'83\'BC\'E3\'83\'AB\'E6\'95\'99\'E4\'BF\'A1\'E8\'80\'85?\'E5\'8F\'8C\'E8\'91\'89\'E7\'A4\'BE\'EF\'BC\'8F\'E3\'83\'89\'E3\'83\'A9\'E3\'82\'B4\'E3\'83\'B3\'E7\'94\'9F\'E6\'B4\'BB\'E5\'90\'91\'E4\'B8\'8A\'E5\'A7\'94\'E5\'93\'A1\'E4\'BC\'9A"}\},\par
00511 \{{\cf22 "140"}, {\cf22 "?BANDAI NAMCO Arts Inc. ? Cygames, Inc."}\},\par
00512 \{{\cf22 "141"}, {\cf22 "?bushiroad All Rights Reserved. ? 2020 DONUTS Co. Ltd. All Rights Reserved."}\},\par
00513 \{{\cf22 "144"}, {\cf22 "? Crypton Future Media, INC. www.piapro.net (+piapro logo) ?OTOIRO Inc."}\},\par
00514 \};\par
00515         {\cf17 public} {\cf17 static} Dictionary<string, string> artistNameDic = {\cf17 new} Dictionary<string, string>\{\par
00516 \{{\cf22 "0"}, {\cf22 ""}\},\par
00517 \{{\cf22 "1"}, {\cf22 "\'E3\'80\'8CBAYONETTA(\'E3\'83\'99\'E3\'83\'A8\'E3\'83\'8D\'E3\'83\'83\'E3\'82\'BF)\'E3\'80\'8D"}\},\par
00518 \{{\cf22 "2"}, {\cf22 "\'E3\'80\'8CBORDER BREAK UNION\'E3\'80\'8D\'E3\'83\'A1\'E3\'82\'A4\'E3\'83\'B3\'E3\'83\'86\'E3\'83\'BC\'E3\'83\'9E"}\},\par
00519 \{{\cf22 "3"}, {\cf22 "\'E3\'80\'8CBORDER BREAK\'E3\'80\'8D"}\},\par
00520 \{{\cf22 "4"}, {\cf22 "\'E3\'80\'8CPHANTASY STAR PORTABLE\'E3\'80\'8D"}\},\par
00521 \{{\cf22 "5"}, {\cf22 "\'E3\'80\'8CPHANTASY STAR PORTABLE2 \'E2\'88\'9E\'E3\'80\'8D"}\},\par
00522 \{{\cf22 "6"}, {\cf22 "\'E3\'80\'8CPHANTASY STAR PORTABLE2\'E3\'80\'8D"}\},\par
00523 \{{\cf22 "7"}, {\cf22 "\'E3\'80\'8C\'E3\'82\'B5\'E3\'82\'AF\'E3\'83\'A9\'E5\'A4\'A7\'E6\'88\'A6\'E3\'80\'8D"}\},\par
00524 \{{\cf22 "8"}, {\cf22 "\'E3\'80\'8C\'E3\'82\'B5\'E3\'82\'AF\'E3\'83\'A9\'E5\'A4\'A7\'E6\'88\'A6\'E5\'A5\'8F\'E7\'B5\'84\'E3\'80\'8D"}\},\par
00525 \{{\cf22 "9"}, {\cf22 "\'E3\'80\'8C\'E3\'83\'90\'E3\'83\'BC\'E3\'83\'81\'E3\'83\'A3\'E3\'83\'95\'E3\'82\'A1\'E3\'82\'A4\'E3\'82\'BF\'E3\'83\'BC\'E3\'80\'8D"}\},\par
00526 \{{\cf22 "10"}, {\cf22 "\'E3\'80\'8C\'E6\'96\'B0\'E8\'B1\'AA\'E8\'A1\'80\'E5\'AF\'BA\'E4\'B8\'80\'E6\'97\'8F -\'E7\'85\'A9\'E6\'82\'A9\'E8\'A7\'A3\'E6\'94\'BE-\'E3\'80\'8D"}\},\par
00527 \{{\cf22 "11"}, {\cf22 "\'E3\'80\'8C\'E9\'BE\'8D\'E3\'81\'8C\'E5\'A6\'82\'E3\'81\'8F \'E8\'A6\'8B\'E5\'8F\'82\'EF\'BC\'81\'E3\'80\'8D"}\},\par
00528 \{{\cf22 "12"}, {\cf22 "\'E3\'80\'8C\'E9\'BE\'8D\'E3\'81\'8C\'E5\'A6\'82\'E3\'81\'8F\'EF\'BC\'92\'E3\'80\'8D"}\},\par
00529 \{{\cf22 "13"}, {\cf22 "\'E2\'98\'85STAR GUiTAR [cover]"}\},\par
00530 \{{\cf22 "14"}, {\cf22 "10Re;\'E3\'80\'8C\'E5\'AD\'A6\'E5\'9C\'92\'E3\'83\'8F\'E3\'83\'B3\'E3\'82\'B5\'E3\'83\'A0\'E3\'80\'8D"}\},\par
00531 \{{\cf22 "15"}, {\cf22 "164"}\},\par
00532 \{{\cf22 "16"}, {\cf22 "40mP"}\},\par
00533 \{{\cf22 "18"}, {\cf22 "A4paper"}\},\par
00534 \{{\cf22 "19"}, {\cf22 "AcuticNotes"}\},\par
00535 \{{\cf22 "20"}, {\cf22 "After the Rain\'EF\'BC\'88\'E3\'81\'9D\'E3\'82\'89\'E3\'82\'8B\'C3\'97\'E3\'81\'BE\'E3\'81\'B5\'E3\'81\'BE\'E3\'81\'B5\'EF\'BC\'89"}\},\par
00536 \{{\cf22 "21"}, {\cf22 "ALiCE'S EMOTiON feat. Ayumi Nomiya"}\},\par
00537 \{{\cf22 "22"}, {\cf22 "Aliesrite* (Ym1024 feat. lamie*)"}\},\par
00538 \{{\cf22 "23"}, {\cf22 "angela\'E3\'80\'8C\'E3\'82\'A2\'E3\'83\'9B\'E3\'82\'AC\'E3\'83\'BC\'E3\'83\'AB\'E3\'80\'8D"}\},\par
00539 \{{\cf22 "24"}, {\cf22 "A-One"}\},\par
00540 \{{\cf22 "25"}, {\cf22 "ARM(IOSYS)"}\},\par
00541 \{{\cf22 "26"}, {\cf22 "ARM\'EF\'BC\'8B\'E5\'A4\'95\'E9\'87\'8E\'E3\'83\'A8\'E3\'82\'B7\'E3\'83\'9F (IOSYS) feat.miko"}\},\par
00542 \{{\cf22 "27"}, {\cf22 "ARM\'EF\'BC\'8B\'E5\'A4\'95\'E9\'87\'8E\'E3\'83\'A8\'E3\'82\'B7\'E3\'83\'9F(IOSYS)"}\},\par
00543 \{{\cf22 "28"}, {\cf22 "ARM\'EF\'BC\'8B\'E5\'A4\'95\'E9\'87\'8E\'E3\'83\'A8\'E3\'82\'B7\'E3\'83\'9F(IOSYS)feat. miko"}\},\par
00544 \{{\cf22 "29"}, {\cf22 "ARM\'EF\'BC\'8B\'E5\'A4\'95\'E9\'87\'8E\'E3\'83\'A8\'E3\'82\'B7\'E3\'83\'9F(IOSYS)feat. \'E8\'97\'A4\'E5\'92\'B2\'E3\'81\'8B\'E3\'82\'8A\'E3\'82\'93"}\},\par
00545 \{{\cf22 "30"}, {\cf22 "ARM\'EF\'BC\'8B\'E5\'A4\'95\'E9\'87\'8E\'E3\'83\'A8\'E3\'82\'B7\'E3\'83\'9F(IOSYS)feat. \'E8\'97\'A4\'E6\'9E\'9D\'E3\'81\'82\'E3\'81\'8B\'E3\'81\'AD"}\},\par
00546 \{{\cf22 "31"}, {\cf22 "ARM\'EF\'BC\'8B\'E5\'A4\'95\'E9\'87\'8E\'E3\'83\'A8\'E3\'82\'B7\'E3\'83\'9F(IOSYS)feat.\'E5\'B1\'B1\'E6\'9C\'AC\'E6\'A4\'9B"}\},\par
00547 \{{\cf22 "32"}, {\cf22 "BNSI\'EF\'BC\'88Taku Inoue\'EF\'BC\'89\'E3\'80\'8C\'E3\'82\'B7\'E3\'83\'B3\'E3\'82\'AF\'E3\'83\'AD\'E3\'83\'8B\'E3\'82\'AB\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00548 \{{\cf22 "33"}, {\cf22 "capsule [cover]"}\},\par
00549 \{{\cf22 "34"}, {\cf22 "Caramell/Caramelldansen [cover]"}\},\par
00550 \{{\cf22 "35"}, {\cf22 "Cash Cash\'E3\'80\'8C\'E3\'82\'BD\'E3\'83\'8B\'E3\'83\'83\'E3\'82\'AF \'E3\'82\'B8\'E3\'82\'A7\'E3\'83\'8D\'E3\'83\'AC\'E3\'83\'BC\'E3\'82\'B7\'E3\'83\'A7\'E3\'83\'B3\'E3\'82\'BA\'E3\'80\'8D"}\},\par
00551 \{{\cf22 "36"}, {\cf22 "Circle of friends(\'E5\'A4\'A9\'E6\'9C\'88-\'E3\'81\'82\'E3\'81\'BE\'E3\'81\'A4\'E3\'81\'8D-?un:c?\'E4\'BC\'8A\'E6\'9D\'B1\'E6\'AD\'8C\'E8\'A9\'9E\'E5\'A4\'AA\'E9\'83\'8E?\'E3\'82\'B3\'E3\'83\'8B\'E3\'83\'BC?\'E3\'81\'AF\'E3\'81\'97\'E3\'82\'84\'E3\'82\'93)"}\},\par
00552 \{{\cf22 "37"}, {\cf22 "CIRCRUSH"}\},\par
00553 \{{\cf22 "38"}, {\cf22 "ClariS\'E3\'80\'80\'E3\'80\'8C\'E9\'AD\'94\'E6\'B3\'95\'E5\'B0\'91\'E5\'A5\'B3\'E3\'81\'BE\'E3\'81\'A9\'E3\'81\'8B\'E2\'98\'86\'E3\'83\'9E\'E3\'82\'AE\'E3\'82\'AB\'E3\'80\'8D"}\},\par
00554 \{{\cf22 "39"}, {\cf22 "Clean Tears"}\},\par
00555 \{{\cf22 "40"}, {\cf22 "Clean Tears feat. Youna"}\},\par
00556 \{{\cf22 "41"}, {\cf22 "COSIO(ZUNTATA)\'E3\'80\'8C\'E3\'82\'B0\'E3\'83\'AB\'E3\'83\'BC\'E3\'83\'B4\'E3\'82\'B3\'E3\'83\'BC\'E3\'82\'B9\'E3\'82\'BF\'E3\'83\'BC\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00557 \{{\cf22 "42"}, {\cf22 "COSIO(ZUNTATA/TAITO)/\'E6\'B2\'A2\'E5\'9F\'8E\'E5\'8D\'83\'E6\'98\'A5\'E3\'80\'8C\'E9\'9B\'BB\'E8\'BB\'8A\'E3\'81\'A7GO!\'E3\'80\'8D"}\},\par
00558 \{{\cf22 "43"}, {\cf22 "COSIO(ZUNTATA/TAITO)\'E3\'80\'8C\'E3\'82\'AB\'E3\'83\'AB\'E3\'83\'86\'E3\'83\'83\'E3\'83\'88\'E3\'80\'8D"}\},\par
00559 \{{\cf22 "44"}, {\cf22 "COSIO(ZUNTATA/TAITO)\'E3\'80\'8C\'E3\'83\'95\'E3\'82\'A1\'E3\'83\'B3\'E3\'82\'BF\'E3\'82\'B8\'E3\'83\'BC\'E3\'82\'BE\'E3\'83\'BC\'E3\'83\'B3\'E3\'80\'8D\'E3\'80\'8CRIDGE RACER\'E3\'80\'8D"}\},\par
00560 \{{\cf22 "45"}, {\cf22 "cosMo\'EF\'BC\'A0\'E6\'9A\'B4\'E8\'B5\'B0P"}\},\par
00561 \{{\cf22 "46"}, {\cf22 "Cranky"}\},\par
00562 \{{\cf22 "47"}, {\cf22 "Cranky feat. \'E3\'81\'BE\'E3\'82\'89\'E3\'81\'97\'E3\'81\'83 \'EF\'BC\'86 \'E3\'81\'A6\'E3\'81\'A3\'E3\'81\'BA\'E3\'81\'84\'E5\'85\'88\'E7\'94\'9F"}\},\par
00563 \{{\cf22 "48"}, {\cf22 "Crush 40\'E3\'80\'8C\'E3\'82\'BD\'E3\'83\'8B\'E3\'83\'83\'E3\'82\'AF\'E3\'82\'A2\'E3\'83\'89\'E3\'83\'99\'E3\'83\'B3\'E3\'83\'81\'E3\'83\'A3\'E3\'83\'BC2\'E3\'80\'8D"}\},\par
00564 \{{\cf22 "49"}, {\cf22 "cubesato"}\},\par
00565 \{{\cf22 "50"}, {\cf22 "cybermiso"}\},\par
00566 \{{\cf22 "51"}, {\cf22 "D.watt(IOSYS)\'EF\'BC\'8B\'E3\'82\'89\'E3\'81\'A3\'E3\'81\'B7\'E3\'81\'B3\'E3\'81\'A8"}\},\par
00567 \{{\cf22 "52"}, {\cf22 "D.watt(IOSYS)feat. Asana"}\},\par
00568 \{{\cf22 "53"}, {\cf22 "D.watt(IOSYS)feat.\'E3\'81\'A1\'E3\'82\'88\'E3\'81\'93"}\},\par
00569 \{{\cf22 "54"}, {\cf22 "daniwell"}\},\par
00570 \{{\cf22 "55"}, {\cf22 "dawn-system"}\},\par
00571 \{{\cf22 "56"}, {\cf22 "D-Cee"}\},\par
00572 \{{\cf22 "57"}, {\cf22 "DECO*27"}\},\par
00573 \{{\cf22 "58"}, {\cf22 "DECO*27 feat.echo"}\},\par
00574 \{{\cf22 "59"}, {\cf22 "DECO*27 feat.Tia"}\},\par
00575 \{{\cf22 "60"}, {\cf22 "DiGiTAL WiNG"}\},\par
00576 \{{\cf22 "61"}, {\cf22 "Dixie Flatline"}\},\par
00577 \{{\cf22 "62"}, {\cf22 "DJ YOSHITAKA\'E3\'80\'8Cjubeat\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00578 \{{\cf22 "63"}, {\cf22 "doriko"}\},\par
00579 \{{\cf22 "65"}, {\cf22 "E.G.G.\'E3\'80\'8C\'E3\'82\'B0\'E3\'83\'AB\'E3\'83\'BC\'E3\'83\'B4\'E3\'82\'B3\'E3\'83\'BC\'E3\'82\'B9\'E3\'82\'BF\'E3\'83\'BC\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00580 \{{\cf22 "66"}, {\cf22 "EasyPop"}\},\par
00581 \{{\cf22 "67"}, {\cf22 "EB(aka EarBreaker)"}\},\par
00582 \{{\cf22 "68"}, {\cf22 "EBIMAYO"}\},\par
00583 \{{\cf22 "69"}, {\cf22 "ELEMENTAS feat. NAGISA"}\},\par
00584 \{{\cf22 "70"}, {\cf22 "emon"}\},\par
00585 \{{\cf22 "71"}, {\cf22 "Eve"}\},\par
00586 \{{\cf22 "72"}, {\cf22 "EZFG"}\},\par
00587 \{{\cf22 "73"}, {\cf22 "Feryquitous"}\},\par
00588 \{{\cf22 "76"}, {\cf22 "Frums"}\},\par
00589 \{{\cf22 "77"}, {\cf22 "good-cool ft. Pete Klassen"}\},\par
00590 \{{\cf22 "78"}, {\cf22 "GOSH/manami"}\},\par
00591 \{{\cf22 "79"}, {\cf22 "GOSH/\'E3\'82\'AF\'E3\'83\'A9\'E3\'82\'B7\'E3\'83\'83\'E3\'82\'AF\'E3\'80\'8C\'E6\'82\'B2\'E6\'84\'B4\'E3\'80\'8D"}\},\par
00592 \{{\cf22 "80"}, {\cf22 "GYARI"}\},\par
00593 \{{\cf22 "81"}, {\cf22 "HALFBY"}\},\par
00594 \{{\cf22 "82"}, {\cf22 "Halozy"}\},\par
00595 \{{\cf22 "83"}, {\cf22 "hanzo/\'E8\'B5\'A4\'E9\'A3\'AF\'E6\'AD\'8C\'E5\'94\'B1Ver"}\},\par
00596 \{{\cf22 "84"}, {\cf22 "Hi\'E2\'98\'86sCoool! \'E3\'82\'BB\'E3\'83\'8F\'E3\'82\'AC\'E3\'83\'BC\'E3\'83\'AB"}\},\par
00597 \{{\cf22 "85"}, {\cf22 "Hiro"}\},\par
00598 \{{\cf22 "86"}, {\cf22 "Hiro feat.\'E8\'B6\'8A\'E7\'94\'B0Rute\'E9\'9A\'86\'E4\'BA\'BA&\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A"}\},\par
00599 \{{\cf22 "87"}, {\cf22 "Hiro(SEGA)\'E3\'80\'8CRIDGE RACER\'E3\'80\'8D\'E3\'80\'8C\'E9\'9B\'BB\'E8\'BB\'8A\'E3\'81\'A7GO!\'E3\'80\'8D"}\},\par
00600 \{{\cf22 "88"}, {\cf22 "Hiro(SEGA)\'E3\'80\'8C\'E3\'83\'95\'E3\'82\'A1\'E3\'83\'B3\'E3\'82\'BF\'E3\'82\'B8\'E3\'83\'BC\'E3\'82\'BE\'E3\'83\'BC\'E3\'83\'B3\'E3\'80\'8D"}\},\par
00601 \{{\cf22 "89"}, {\cf22 "Hiro/\'E3\'82\'BF\'E3\'82\'AF\'E3\'83\'9E\'E3\'83\'AD"}\},\par
00602 \{{\cf22 "90"}, {\cf22 "Hiro/\'E6\'B0\'B8\'E6\'B1\'9F\'E7\'90\'86\'E5\'A5\'88"}\},\par
00603 \{{\cf22 "91"}, {\cf22 "Hiro/\'E5\'B0\'8F\'E5\'B1\'B1\'E3\'81\'82\'E3\'81\'8B\'E3\'82\'8A"}\},\par
00604 \{{\cf22 "92"}, {\cf22 "Hiro/\'E6\'A3\'AE\'E5\'B1\'B1\'E6\'84\'9B\'E5\'AD\'90"}\},\par
00605 \{{\cf22 "93"}, {\cf22 "Hiro/\'E5\'8F\'8B\'E9\'A6\'99"}\},\par
00606 \{{\cf22 "94"}, {\cf22 "Hiro\'E3\'80\'8CCrackin\'E2\'80\'99DJ\'E3\'80\'8D"}\},\par
00607 \{{\cf22 "95"}, {\cf22 "Hiro\'E3\'80\'8Cmaimai\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00608 \{{\cf22 "96"}, {\cf22 "HiTECH NINJA"}\},\par
00609 \{{\cf22 "97"}, {\cf22 "HoneyWorks"}\},\par
00610 \{{\cf22 "98"}, {\cf22 "ika"}\},\par
00611 \{{\cf22 "99"}, {\cf22 "Innocent Key\'E3\'81\'A8\'E5\'B0\'8F\'E5\'AE\'AE\'E7\'9C\'9F\'E5\'A4\'AE\'E3\'80\'81\'E3\'82\'B3\'E3\'82\'B3\'E3\'80\'81\'E6\'A8\'B9\'E8\'A9\'A9\'E9\'9F\'B3"}\},\par
00612 \{{\cf22 "100"}, {\cf22 "Innocent Key\'E3\'81\'A8\'E6\'A2\'A8\'E6\'9C\'AC\'E6\'82\'A0\'E9\'87\'8C\'E3\'80\'81JUNCA\'E3\'80\'81\'E5\'B0\'8F\'E5\'AE\'AE\'E7\'9C\'9F\'E5\'A4\'AE\'E3\'80\'81\'E6\'A8\'B9\'E8\'A9\'A9\'E9\'9F\'B3\'E3\'80\'81\'E5\'A4\'A7\'E7\'80\'AC\'E8\'89\'AF\'E3\'81\'82\'E3\'81\'84"}\},\par
00613 \{{\cf22 "101"}, {\cf22 "INNOCENT NOIZE"}\},\par
00614 \{{\cf22 "102"}, {\cf22 "Ino(chronoize)"}\},\par
00615 \{{\cf22 "103"}, {\cf22 "IOSYS\'E3\'81\'A8\'E6\'84\'89\'E5\'BF\'AB\'E3\'81\'AA\'E2\'91\'A8\'E5\'91\'A8\'E5\'B9\'B4\'E3\'83\'95\'E3\'83\'AC\'E3\'83\'B3\'E3\'82\'BA"}\},\par
00616 \{{\cf22 "104"}, {\cf22 "iroha(sasaki)\'EF\'BC\'8Fkuma(alfred)"}\},\par
00617 \{{\cf22 "105"}, {\cf22 "IRON ATTACK!"}\},\par
00618 \{{\cf22 "106"}, {\cf22 "Jimmy Weckl"}\},\par
00619 \{{\cf22 "107"}, {\cf22 "Jimmy Weckl feat.\'E9\'AB\'98\'E8\'B2\'B4\'E3\'81\'BF\'E3\'81\'AA"}\},\par
00620 \{{\cf22 "108"}, {\cf22 "Jitterin' Jinn [covered by \'E3\'82\'8D\'E3\'82\'93]"}\},\par
00621 \{{\cf22 "109"}, {\cf22 "Jun Senoue"}\},\par
00622 \{{\cf22 "110"}, {\cf22 "Junky"}\},\par
00623 \{{\cf22 "111"}, {\cf22 "Kai/\'E3\'82\'AF\'E3\'83\'A9\'E3\'82\'B7\'E3\'83\'83\'E3\'82\'AF\'E3\'80\'8CG\'E7\'B7\'9A\'E4\'B8\'8A\'E3\'81\'AE\'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'A2\'E3\'80\'8D"}\},\par
00624 \{{\cf22 "112"}, {\cf22 "Kai/\'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE"}\},\par
00625 \{{\cf22 "113"}, {\cf22 "Kai/\'E8\'83\'BD\'E7\'99\'BB\'E6\'9C\'89\'E6\'B2\'99"}\},\par
00626 \{{\cf22 "114"}, {\cf22 "Kai\'E3\'80\'8CWonderland Wars\'E3\'80\'8D"}\},\par
00627 \{{\cf22 "115"}, {\cf22 "kamome sano"}\},\par
00628 \{{\cf22 "116"}, {\cf22 "kanone feat. \'E3\'81\'9B\'E3\'82\'93\'E3\'81\'96\'E3\'81\'84"}\},\par
00629 \{{\cf22 "117"}, {\cf22 "Keitarou Hanada\'E3\'80\'8C\'E6\'88\'A6\'E5\'9B\'BD\'E5\'A4\'A7\'E6\'88\'A6\'E3\'80\'8D"}\},\par
00630 \{{\cf22 "118"}, {\cf22 "kemu"}\},\par
00631 \{{\cf22 "119"}, {\cf22 "KeN/\'E3\'82\'A8\'E3\'83\'B3\'E3\'83\'89\'E3\'82\'B1\'E3\'82\'A4\'E3\'83\'97"}\},\par
00632 \{{\cf22 "120"}, {\cf22 "KENTARO\'E3\'80\'8CCrackin\'E2\'80\'99DJ\'E3\'80\'8D"}\},\par
00633 \{{\cf22 "121"}, {\cf22 "koutaq"}\},\par
00634 \{{\cf22 "122"}, {\cf22 "Last Note."}\},\par
00635 \{{\cf22 "123"}, {\cf22 "LeaF"}\},\par
00636 \{{\cf22 "124"}, {\cf22 "LindaAI-CUE(BNGI)\'E3\'80\'8C\'E5\'A4\'AA\'E9\'BC\'93\'E3\'81\'AE\'E9\'81\'94\'E4\'BA\'BA\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00637 \{{\cf22 "126"}, {\cf22 "livetune"}\},\par
00638 \{{\cf22 "127"}, {\cf22 "loos feat. Meramipop"}\},\par
00639 \{{\cf22 "128"}, {\cf22 "loos feat. \'E6\'9F\'8A\'E8\'8E\'89\'E6\'9D\'8F"}\},\par
00640 \{{\cf22 "129"}, {\cf22 "LOPIT(SEGA)"}\},\par
00641 \{{\cf22 "130"}, {\cf22 "M.S.S Project"}\},\par
00642 \{{\cf22 "131"}, {\cf22 "M2U"}\},\par
00643 \{{\cf22 "132"}, {\cf22 "Machico\'E3\'80\'8C\'E3\'81\'93\'E3\'81\'AE\'E7\'B4\'A0\'E6\'99\'B4\'E3\'82\'89\'E3\'81\'97\'E3\'81\'84\'E4\'B8\'96\'E7\'95\'8C\'E3\'81\'AB\'E7\'A5\'9D\'E7\'A6\'8F\'E3\'82\'92\'EF\'BC\'81\'E3\'80\'8D"}\},\par
00644 \{{\cf22 "133"}, {\cf22 "MARETU"}\},\par
00645 \{{\cf22 "134"}, {\cf22 "MARUDARUMA"}\},\par
00646 \{{\cf22 "135"}, {\cf22 "Masayoshi Minoshima"}\},\par
00647 \{{\cf22 "136"}, {\cf22 "Masayoshi Minoshima feat. \'E7\'B6\'BE\'E5\'80\'89\'E7\'9B\'9F"}\},\par
00648 \{{\cf22 "137"}, {\cf22 "mathru(\'E3\'81\'8B\'E3\'81\'AB\'E3\'81\'BF\'E3\'81\'9DP)"}\},\par
00649 \{{\cf22 "138"}, {\cf22 "MECHANiCAL PANDA\'E3\'80\'8CBORDER BREAK\'E3\'80\'8D"}\},\par
00650 \{{\cf22 "139"}, {\cf22 "m-flo [cover]"}\},\par
00651 \{{\cf22 "140"}, {\cf22 "MintJam feat.\'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE"}\},\par
00652 \{{\cf22 "141"}, {\cf22 "Mitchie M"}\},\par
00653 \{{\cf22 "142"}, {\cf22 "MY FIRST STORY"}\},\par
00654 \{{\cf22 "143"}, {\cf22 "MYTH & ROID\'E3\'80\'8CRe\'EF\'BC\'9A\'E3\'82\'BC\'E3\'83\'AD\'E3\'81\'8B\'E3\'82\'89\'E5\'A7\'8B\'E3\'82\'81\'E3\'82\'8B\'E7\'95\'B0\'E4\'B8\'96\'E7\'95\'8C\'E7\'94\'9F\'E6\'B4\'BB\'E3\'80\'8D"}\},\par
00655 \{{\cf22 "144"}, {\cf22 "myu314 feat.\'E3\'81\'82\'E3\'81\'BE\'E3\'81\'AD(COOL&CREATE)"}\},\par
00656 \{{\cf22 "145"}, {\cf22 "n.k"}\},\par
00657 \{{\cf22 "146"}, {\cf22 "Nankumo/CUBE3"}\},\par
00658 \{{\cf22 "147"}, {\cf22 "naotyu- feat. \'E4\'BD\'90\'E3\'80\'85\'E6\'9C\'A8\'E6\'81\'B5\'E6\'A2\'A8"}\},\par
00659 \{{\cf22 "148"}, {\cf22 "n-buna"}\},\par
00660 \{{\cf22 "149"}, {\cf22 "n-buna \'D7 Orangestar"}\},\par
00661 \{{\cf22 "150"}, {\cf22 "n-buna feat.\'E3\'83\'A4\'E3\'82\'AE\'E3\'83\'8C\'E3\'83\'9E\'E3\'82\'AB\'E3\'83\'8A"}\},\par
00662 \{{\cf22 "151"}, {\cf22 "Neru"}\},\par
00663 \{{\cf22 "152"}, {\cf22 "niki"}\},\par
00664 \{{\cf22 "153"}, {\cf22 "NIKO [cover]"}\},\par
00665 \{{\cf22 "154"}, {\cf22 "Nizikawa"}\},\par
00666 \{{\cf22 "155"}, {\cf22 "nora2r"}\},\par
00667 \{{\cf22 "156"}, {\cf22 "ONE (song by \'E3\'83\'8A\'E3\'83\'8A\'E3\'83\'9B\'E3\'82\'B7\'E7\'AE\'A1\'E5\'BC\'A6\'E6\'A5\'BD\'E5\'9B\'A3)"}\},\par
00668 \{{\cf22 "157"}, {\cf22 "ONIGAWARA"}\},\par
00669 \{{\cf22 "159"}, {\cf22 "Orangestar"}\},\par
00670 \{{\cf22 "160"}, {\cf22 "OSTER project"}\},\par
00671 \{{\cf22 "161"}, {\cf22 "Otomania feat. \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF"}\},\par
00672 \{{\cf22 "162"}, {\cf22 "out of service"}\},\par
00673 \{{\cf22 "163"}, {\cf22 "owl\'EF\'BC\'8Atree"}\},\par
00674 \{{\cf22 "164"}, {\cf22 "Palme"}\},\par
00675 \{{\cf22 "165"}, {\cf22 "paraoka"}\},\par
00676 \{{\cf22 "166"}, {\cf22 "Performed by SEGA Sound Unit [H.]"}\},\par
00677 \{{\cf22 "167"}, {\cf22 "Performed by \'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE"}\},\par
00678 \{{\cf22 "168"}, {\cf22 "Petit Rabbit's\'E3\'80\'8C\'E3\'81\'94\'E6\'B3\'A8\'E6\'96\'87\'E3\'81\'AF\'E3\'81\'86\'E3\'81\'95\'E3\'81\'8E\'E3\'81\'A7\'E3\'81\'99\'E3\'81\'8B\'EF\'BC\'9F\'E3\'80\'8D"}\},\par
00679 \{{\cf22 "169"}, {\cf22 "Project Grimoire"}\},\par
00680 \{{\cf22 "170"}, {\cf22 "Q;indivi [cover]"}\},\par
00681 \{{\cf22 "171"}, {\cf22 "Queen P.A.L."}\},\par
00682 \{{\cf22 "174"}, {\cf22 "RADWIMPS"}\},\par
00683 \{{\cf22 "175"}, {\cf22 "RAMM feat. \'E8\'8B\'A5\'E4\'BA\'95\'E5\'8F\'8B\'E5\'B8\'8C"}\},\par
00684 \{{\cf22 "176"}, {\cf22 "Ras"}\},\par
00685 \{{\cf22 "177"}, {\cf22 "REDALiCE"}\},\par
00686 \{{\cf22 "178"}, {\cf22 "REDALiCE (HARDCORE TANO*C)"}\},\par
00687 \{{\cf22 "180"}, {\cf22 "RYOHEI KOHNO/\'E6\'A3\'AE\'E7\'B6\'BE\'E9\'A6\'99"}\},\par
00688 \{{\cf22 "181"}, {\cf22 "RYOHEI KOHNO/\'E4\'BF\'9D\'E7\'AB\'8B\'E7\'BE\'8E\'E5\'92\'8C\'E5\'AD\'90"}\},\par
00689 \{{\cf22 "182"}, {\cf22 "S!N?\'E9\'AB\'98\'E6\'A9\'8B\'E8\'8F\'9C\'E3\'80\'85\'C3\'97\'E3\'81\'B2\'E3\'81\'A8\'E3\'81\'97\'E3\'81\'9A\'E3\'81\'8F?\'E3\'82\'84\'E3\'81\'BE\'E2\'96\'B3"}\},\par
00690 \{{\cf22 "183"}, {\cf22 "samfree"}\},\par
00691 \{{\cf22 "184"}, {\cf22 "samfree feat.(V)???(V)\'E3\'81\'8B\'E3\'81\'AB\'E3\'81\'B1\'E3\'82\'93\'E3\'80\'82(A-ONE)"}\},\par
00692 \{{\cf22 "185"}, {\cf22 "Sampling Masters MEGA"}\},\par
00693 \{{\cf22 "186"}, {\cf22 "sampling masters MEGA\'E3\'80\'8C\'E3\'83\'91\'E3\'83\'AF\'E3\'83\'BC\'E3\'83\'89\'E3\'83\'AA\'E3\'83\'95\'E3\'83\'88\'E3\'80\'8D"}\},\par
00694 \{{\cf22 "187"}, {\cf22 "sasakure.UK"}\},\par
00695 \{{\cf22 "188"}, {\cf22 "sasakure.UK x DECO*27"}\},\par
00696 \{{\cf22 "189"}, {\cf22 "SC-3000(\'E3\'82\'B7\'E3\'83\'BC\'E3\'81\'95\'E3\'82\'93)/CV.\'E7\'9B\'B8\'E6\'B2\'A2 \'E8\'88\'9E\'E3\'80\'81SG-1000(\'E3\'81\'9B\'E3\'82\'93)/CV.\'E8\'8A\'B9\'E6\'BE\'A4 \'E5\'84\'AA\'E3\'80\'81SG-1000\'E2\'85\'A1(\'E3\'81\'9B\'E3\'82\'93\'E3\'81\'A4\'E3\'83\'BC)/CV.\'E5\'A4\'A7\'E7\'A9\'BA\'E7\'9B\'B4\'E7\'BE\'8E\'E3\'80\'81\'E3\'82\'B2\'E3\'83\'BC\'E3\'83\'A0\'E3\'82\'AE\'E3\'82\'A2(\'E3\'83\'A0\'E3\'82\'AE)/CV.\'E7\'94\'B0 \'E4\'B8\'AD\'E7\'BE\'8E\'E6\'B5\'B7\'E3\'80\'81\'E3\'83\'AD\'E3\'83\'9C\'E3\'83\'94\'E3\'83\'83\'E3\'83\'81\'E3\'83\'A3(\'E3\'81\'B4\'E3\'81\'A3\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93)/CV.\'E3\'82\'82\'E3\'82\'82\'E3\'81\'AE\'E3\'81\'AF\'E3\'82\'8B\'E3\'81\'AA\'E3\'80\'8CHi\'E2\'98\'86sCoool! \'E3\'82\'BB\'E3\'83\'8F\'E3\'82\'AC\'E3\'83\'BC\'E3\'83\'AB\'E3\'80\'8D [\'E3\'82\'A2\'E3\'83\'8B\'E3\'83\'A1PV]"}\},\par
00697 \{{\cf22 "191"}, {\cf22 "SEGA Sound Unit [H.]"}\},\par
00698 \{{\cf22 "193"}, {\cf22 "Shandy kubota"}\},\par
00699 \{{\cf22 "194"}, {\cf22 "SHIKI"}\},\par
00700 \{{\cf22 "195"}, {\cf22 "Shoichiro Hirata"}\},\par
00701 \{{\cf22 "196"}, {\cf22 "Shoichiro Hirata feat.SUIMI"}\},\par
00702 \{{\cf22 "197"}, {\cf22 "SIAM SHADE [covered by \'E6\'B9\'AF\'E6\'AF\'9B]"}\},\par
00703 \{{\cf22 "198"}, {\cf22 "Silver Forest"}\},\par
00704 \{{\cf22 "199"}, {\cf22 "siromaru + cranky"}\},\par
00705 \{{\cf22 "200"}, {\cf22 "sky_delta"}\},\par
00706 \{{\cf22 "201"}, {\cf22 "SLAVE.V-V-R"}\},\par
00707 \{{\cf22 "202"}, {\cf22 "Sou\'C3\'97\'E3\'83\'9E\'E3\'83\'81\'E3\'82\'B2\'E3\'83\'AA\'E3\'83\'BC\'E3\'82\'BF"}\},\par
00708 \{{\cf22 "203"}, {\cf22 "SOUND HOLIC feat. Nana Takahashi"}\},\par
00709 \{{\cf22 "204"}, {\cf22 "SOUND HOLIC feat. \'E5\'8C\'A0\'E7\'9C\'9E"}\},\par
00710 \{{\cf22 "205"}, {\cf22 "Sta"}\},\par
00711 \{{\cf22 "206"}, {\cf22 "Sta feat.b"}\},\par
00712 \{{\cf22 "207"}, {\cf22 "Sta feat.tigerlily and DOT96"}\},\par
00713 \{{\cf22 "208"}, {\cf22 "Storyteller"}\},\par
00714 \{{\cf22 "209"}, {\cf22 "Street"}\},\par
00715 \{{\cf22 "210"}, {\cf22 "sumijun(Halozy) feat. \'E3\'81\'AA\'E3\'81\'AA\'E3\'81\'B2\'E3\'82\'89(Confetto)"}\},\par
00716 \{{\cf22 "211"}, {\cf22 "supercell\'E3\'80\'8C\'E5\'8C\'96\'E7\'89\'A9\'E8\'AA\'9E\'E3\'80\'8D"}\},\par
00717 \{{\cf22 "212"}, {\cf22 "SYNC.ART'S feat. \'E7\'BE\'8E\'E9\'87\'8C"}\},\par
00718 \{{\cf22 "213"}, {\cf22 "t+pazolite"}\},\par
00719 \{{\cf22 "214"}, {\cf22 "Taishi"}\},\par
00720 \{{\cf22 "215"}, {\cf22 "Takahiro Eguchi feat. \'E4\'B8\'89\'E6\'BE\'A4\'E7\'A7\'8B"}\},\par
00721 \{{\cf22 "216"}, {\cf22 "Tanchiky"}\},\par
00722 \{{\cf22 "217"}, {\cf22 "Tatsh"}\},\par
00723 \{{\cf22 "218"}, {\cf22 "Team-D"}\},\par
00724 \{{\cf22 "219"}, {\cf22 "tilt-six feat.\'E4\'B8\'B2\'E4\'BC\'8A\'E3\'83\'88\'E3\'83\'A2\'E3\'83\'9F"}\},\par
00725 \{{\cf22 "220"}, {\cf22 "Trefle\'E3\'80\'8C\'E3\'83\'81\'E3\'82\'A7\'E3\'82\'A4\'E3\'83\'B3\'E3\'82\'AF\'E3\'83\'AD\'E3\'83\'8B\'E3\'82\'AF\'E3\'83\'AB\'E3\'80\'8D"}\},\par
00726 \{{\cf22 "221"}, {\cf22 "Tsukasa(Arte Refact)"}\},\par
00727 \{{\cf22 "222"}, {\cf22 "un:c?\'E3\'82\'8D\'E3\'82\'93\'C3\'97\'E3\'81\'98\'E3\'83\'BC\'E3\'81\'96\'E3\'81\'99P"}\},\par
00728 \{{\cf22 "223"}, {\cf22 "UNISON SQUARE GARDEN"}\},\par
00729 \{{\cf22 "224"}, {\cf22 "uno(IOSYS) feat.miko"}\},\par
00730 \{{\cf22 "225"}, {\cf22 "void (Mournfinale)"}\},\par
00731 \{{\cf22 "226"}, {\cf22 "void(Mournfinale)"}\},\par
00732 \{{\cf22 "227"}, {\cf22 "void\'EF\'BC\'8B\'E5\'A4\'95\'E9\'87\'8E\'E3\'83\'A8\'E3\'82\'B7\'E3\'83\'9F (IOSYS) feat.\'E8\'97\'A4\'E5\'8E\'9F\'E9\'9E\'A0\'E8\'8F\'9C"}\},\par
00733 \{{\cf22 "228"}, {\cf22 "vox2\'EF\'BC\'88\'E5\'B0\'8F\'E9\'87\'8E\'E7\'A7\'80\'E5\'B9\'B8\'EF\'BC\'89"}\},\par
00734 \{{\cf22 "229"}, {\cf22 "WAiKURO"}\},\par
00735 \{{\cf22 "230"}, {\cf22 "Wake Up, Girls\'EF\'BC\'81"}\},\par
00736 \{{\cf22 "231"}, {\cf22 "wowaka"}\},\par
00737 \{{\cf22 "232"}, {\cf22 "xi"}\},\par
00738 \{{\cf22 "233"}, {\cf22 "YASUHIRO(\'E5\'BA\'B7\'E5\'AF\'9B)"}\},\par
00739 \{{\cf22 "234"}, {\cf22 "YMCK"}\},\par
00740 \{{\cf22 "235"}, {\cf22 "Yosh(Survive Said The Prophet)"}\},\par
00741 \{{\cf22 "236"}, {\cf22 "Yuji Masubuchi(BNGI)\'E3\'80\'8CRIDGE RACER\'E3\'80\'8D"}\},\par
00742 \{{\cf22 "237"}, {\cf22 "Yuji Masubuchi(BNGI)\'E3\'80\'8C\'E9\'9B\'BB\'E8\'BB\'8A\'E3\'81\'A7GO!\'E3\'80\'8D\'E3\'80\'8C\'E3\'83\'95\'E3\'82\'A1\'E3\'83\'B3\'E3\'82\'BF\'E3\'82\'B8\'E3\'83\'BC\'E3\'82\'BE\'E3\'83\'BC\'E3\'83\'B3\'E3\'80\'8D"}\},\par
00743 \{{\cf22 "238"}, {\cf22 "Yuji Masubuchi\'E3\'80\'8C\'E5\'A4\'AA\'E9\'BC\'93\'E3\'81\'AE\'E9\'81\'94\'E4\'BA\'BA\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00744 \{{\cf22 "239"}, {\cf22 "zts"}\},\par
00745 \{{\cf22 "240"}, {\cf22 "\'E3\'81\'82\'EF\'BD\'9E\'E3\'82\'8B\'E3\'81\'AE\'EF\'BD\'9E\'E3\'81\'A8\'EF\'BC\'88\'E3\'81\'84\'E3\'81\'88\'E3\'82\'8D\'EF\'BD\'9E\'E3\'81\'9C\'E3\'81\'B6\'E3\'82\'89\'EF\'BC\'89"}\},\par
00746 \{{\cf22 "242"}, {\cf22 "\'E3\'82\'A2\'E3\'82\'B4\'E3\'82\'A2\'E3\'83\'8B\'E3\'82\'AD"}\},\par
00747 \{{\cf22 "243"}, {\cf22 "\'E3\'81\'82\'E3\'81\'B9\'E3\'81\'AB\'E3\'82\'85\'E3\'81\'86\'E3\'81\'B7\'E3\'82\'8D\'E3\'81\'98\'E3\'81\'87\'E3\'81\'8F\'E3\'81\'A8 feat.\'E4\'BD\'90\'E5\'80\'89\'E7\'B4\'97\'E7\'B9\'94&\'E4\'BA\'95\'E4\'B8\'8A\'E3\'81\'BF\'E3\'82\'86\'E3\'80\'8C\'E3\'83\'91\'E3\'83\'81\'E3\'82\'B9\'E3\'83\'AD\'E5\'BF\'AB\'E7\'9B\'97\'E5\'A4\'A9\'E4\'BD\'BF\'E3\'83\'84\'E3\'82\'A4\'E3\'83\'B3\'E3\'82\'A8\'E3\'83\'B3\'E3\'82\'B8\'E3\'82\'A7\'E3\'83\'AB\'E3\'80\'8D"}\},\par
00748 \{{\cf22 "244"}, {\cf22 "\'E3\'81\'82\'E3\'81\'BE\'E3\'81\'AD\'EF\'BC\'8B\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A(COOL\'EF\'BC\'86CREATE)"}\},\par
00749 \{{\cf22 "245"}, {\cf22 "\'E3\'82\'A2\'E3\'83\'9F\'E3\'83\'86\'E3\'82\'A3(CV \'E8\'8F\'8A\'E6\'B1\'A0\'E5\'BF\'97\'E7\'A9\'82)\'E3\'80\'8C\'E3\'81\'B7\'E3\'82\'88\'E3\'81\'B7\'E3\'82\'88\'E3\'80\'8D"}\},\par
00750 \{{\cf22 "247"}, {\cf22 "\'E3\'82\'A2\'E3\'83\'AB\'E3\'83\'AB(CV \'E5\'9C\'92\'E5\'B4\'8E\'E6\'9C\'AA\'E6\'81\'B5)\'E3\'80\'8C\'E3\'81\'B7\'E3\'82\'88\'E3\'81\'B7\'E3\'82\'88\'E3\'80\'8D"}\},\par
00751 \{{\cf22 "248"}, {\cf22 "\'E3\'82\'A4\'E3\'83\'AD\'E3\'83\'89\'E3\'83\'AA\'E3\'83\'9F\'E3\'83\'89\'E3\'83\'AA\'E3\'80\'8CCHUNITHM\'E3\'80\'8D"}\},\par
00752 \{{\cf22 "249"}, {\cf22 "\'E3\'81\'86\'E3\'81\'9F\'E3\'81\'9FP"}\},\par
00753 \{{\cf22 "250"}, {\cf22 "\'E3\'81\'86\'E3\'81\'9F\'E3\'82\'88\'E3\'82\'81575\'EF\'BC\'9C\'E6\'AD\'A3\'E5\'B2\'A1\'E5\'B0\'8F\'E8\'B1\'86(\'E5\'A4\'A7\'E5\'9D\'AA\'E7\'94\'B1\'E4\'BD\'B3)\'E5\'B0\'8F\'E6\'9E\'97\'E6\'8A\'B9\'E8\'8C\'B6(\'E5\'A4\'A7\'E6\'A9\'8B\'E5\'BD\'A9\'E9\'A6\'99)\'EF\'BC\'9E"}\},\par
00754 \{{\cf22 "251"}, {\cf22 "\'E3\'81\'86\'E3\'81\'A9\'E3\'82\'93\'E3\'82\'B2\'E3\'83\'AB\'E3\'82\'B2"}\},\par
00755 \{{\cf22 "252"}, {\cf22 "\'E3\'82\'AA\'E3\'83\'AF\'E3\'82\'BFP"}\},\par
00756 \{{\cf22 "253"}, {\cf22 "\'E3\'81\'8B\'E3\'81\'84\'E3\'82\'8A\'E3\'81\'8D\'E3\'83\'99\'E3\'82\'A2"}\},\par
00757 \{{\cf22 "254"}, {\cf22 "\'E3\'82\'AC\'E3\'83\'B4\'E3\'83\'AA\'E3\'83\'BC\'E3\'83\'AB\'EF\'BC\'88\'E5\'AF\'8C\'E7\'94\'B0\'E7\'BE\'8E\'E6\'86\'82\'EF\'BC\'89\'EF\'BC\'8C\'E3\'83\'B4\'E3\'82\'A3\'E3\'83\'BC\'E3\'83\'8D\'EF\'BC\'88\'E5\'A4\'A7\'E8\'A5\'BF\'E6\'B2\'99\'E7\'B9\'94\'EF\'BC\'89\'EF\'BC\'8C\'E3\'82\'B5\'E3\'82\'BF\'E3\'83\'BC\'E3\'83\'8B\'E3\'83\'A3\'EF\'BC\'88\'E5\'A4\'A7\'E7\'A9\'BA\'E7\'9B\'B4\'E7\'BE\'8E\'EF\'BC\'89\'EF\'BC\'8C\'E3\'83\'A9\'E3\'83\'95\'E3\'82\'A3\'E3\'82\'A8\'E3\'83\'AB\'EF\'BC\'88\'E8\'8A\'B1\'E6\'BE\'A4\'E9\'A6\'99\'E8\'8F\'9C\'EF\'BC\'89\'E3\'80\'8C\'E3\'82\'AC\'E3\'83\'B4\'E3\'83\'AA\'E3\'83\'BC\'E3\'83\'AB\'E3\'83\'89\'E3\'83\'AD\'E3\'83\'83 \'E3\'83\'97\'E3\'82\'A2\'E3\'82\'A6\'E3\'83\'88\'E3\'80\'8D"}\},\par
00758 \{{\cf22 "255"}, {\cf22 "\'E3\'82\'AB\'E3\'82\'BF\'E3\'82\'AA\'E3\'82\'AB\'E3\'83\'84\'E3\'82\'B0\'E3\'83\'9F"}\},\par
00759 \{{\cf22 "256"}, {\cf22 "\'E3\'81\'8B\'E3\'81\'AD\'E3\'81\'93\'E3\'81\'A1\'E3\'81\'AF\'E3\'82\'8B"}\},\par
00760 \{{\cf22 "257"}, {\cf22 "\'E3\'82\'AB\'E3\'83\'A9\'E3\'82\'B9\'E3\'81\'AF\'E7\'9C\'9F\'E3\'81\'A3\'E7\'99\'BD"}\},\par
00761 \{{\cf22 "258"}, {\cf22 "\'E3\'82\'AB\'E3\'83\'A9\'E3\'83\'95\'E3\'83\'AB?\'E3\'82\'B5\'E3\'82\'A6\'E3\'83\'B3\'E3\'82\'BA?\'E3\'83\'9D\'E3\'83\'BC\'E3\'83\'88"}\},\par
00762 \{{\cf22 "259"}, {\cf22 "\'E3\'82\'AC\'E3\'83\'AA\'E3\'82\'AC\'E3\'83\'AA\'E3\'81\'95\'E3\'82\'80\'E3\'81\'97"}\},\par
00763 \{{\cf22 "260"}, {\cf22 "\'E3\'82\'AB\'E3\'83\'AB\'E3\'83\'AD\'E3\'82\'B9\'E8\'A2\'B4\'E7\'94\'B0(\'E3\'82\'B5\'E3\'82\'A4\'E3\'82\'BCP)"}\},\par
00764 \{{\cf22 "261"}, {\cf22 "\'E3\'82\'AE\'E3\'82\'AC/\'E3\'82\'8C\'E3\'82\'92\'E3\'82\'8B"}\},\par
00765 \{{\cf22 "262"}, {\cf22 "\'E3\'82\'AE\'E3\'82\'AC/\'E3\'82\'8C\'E3\'82\'92\'E3\'82\'8B\'E3\'80\'80\'E3\'83\'80\'E3\'83\'B3\'E3\'82\'B9\'E3\'80\'80\'E3\'82\'A2\'E3\'83\'AB\'E3\'82\'B9\'E3\'83\'9E\'E3\'82\'B0\'E3\'83\'8A"}\},\par
00766 \{{\cf22 "264"}, {\cf22 "\'E3\'82\'AD\'E3\'83\'8E\'E3\'82\'B7\'E3\'82\'BF feat. \'E9\'9F\'B3\'E8\'A1\'97\'E3\'82\'A6\'E3\'83\'8A"}\},\par
00767 \{{\cf22 "266"}, {\cf22 "\'E3\'82\'AF\'E3\'83\'BC\'E3\'83\'8A(CV \'E5\'96\'9C\'E5\'A4\'9A\'E6\'9D\'91\'E8\'8B\'B1\'E6\'A2\'A8)\'E3\'80\'8CPHANTASY STAR ONLINE 2\'E3\'80\'8D"}\},\par
00768 \{{\cf22 "267"}, {\cf22 "\'E3\'81\'8F\'E3\'81\'A1\'E3\'81\'B0\'E3\'81\'97P"}\},\par
00769 \{{\cf22 "268"}, {\cf22 "\'E3\'82\'B4\'E3\'82\'B8\'E3\'83\'9E\'E3\'82\'B8P"}\},\par
00770 \{{\cf22 "269"}, {\cf22 "\'E3\'82\'B5\'E3\'82\'B5\'E3\'82\'AD\'E3\'83\'88\'E3\'83\'A2\'E3\'82\'B3\'E3\'80\'8C\'E9\'9F\'B3\'E5\'A3\'B0\'E6\'84\'9F\'E6\'83\'85\'E6\'B8\'AC\'E5\'AE\'9A\'E5\'99\'A8\'E3\'82\'B3\'E3\'82\'B3\'E3\'83\'AD\'E3\'82\'B9\'E3\'82\'AD\'E3\'83\'A3\'E3\'83\'B3\'E3\'80\'8D"}\},\par
00771 \{{\cf22 "270"}, {\cf22 "\'E3\'82\'B5\'E3\'82\'B5\'E3\'83\'8E\'E3\'83\'9E\'E3\'83\'AA\'E3\'82\'A4"}\},\par
00772 \{{\cf22 "271"}, {\cf22 "\'E3\'81\'95\'E3\'81\'A4\'E3\'81\'8D \'E3\'81\'8C \'E3\'81\'A6\'E3\'82\'93\'E3\'81\'93\'E3\'82\'82\'E3\'82\'8A"}\},\par
00773 \{{\cf22 "272"}, {\cf22 "\'E3\'81\'95\'E3\'81\'A4\'E3\'81\'8D \'E3\'81\'8C \'E3\'81\'A6\'E3\'82\'93\'E3\'81\'93\'E3\'82\'82\'E3\'82\'8A feat. YURiCa/\'E8\'8A\'B1\'E3\'81\'9F\'E3\'82\'93"}\},\par
00774 \{{\cf22 "273"}, {\cf22 "\'E3\'81\'98\'E3\'81\'BE\'E3\'82\'93\'E3\'81\'90"}\},\par
00775 \{{\cf22 "274"}, {\cf22 "\'E3\'81\'98\'E3\'82\'93"}\},\par
00776 \{{\cf22 "275"}, {\cf22 "\'E3\'82\'B9\'E3\'83\'BC\'E3\'83\'91\'E3\'83\'BC\'E3\'83\'A9\'E3\'83\'90\'E3\'83\'BC\'E3\'82\'BA\'E3\'80\'8C\'E3\'81\'8D\'E3\'81\'BF\'E3\'81\'AE\'E3\'81\'9F\'E3\'82\'81\'E3\'81\'AA\'E3\'82\'89\'E6\'AD\'BB\'E3\'81\'AD\'E3\'82\'8B\'E3\'80\'8D"}\},\par
00777 \{{\cf22 "276"}, {\cf22 "\'E3\'82\'B9\'E3\'83\'BC\'E3\'83\'91\'E3\'83\'BC\'E3\'83\'A9\'E3\'83\'90\'E3\'83\'BC\'E3\'82\'BA\'E3\'80\'8C\'E8\'B5\'A4\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93\'E3\'81\'AF\'E3\'81\'A9\'E3\'81\'93\'E3\'81\'8B\'E3\'82\'89\'E3\'81\'8F\'E3\'82\'8B\'E3\'81\'AE\'EF\'BC\'9F\'E3\'80\'8D"}\},\par
00778 \{{\cf22 "277"}, {\cf22 "\'E3\'81\'99\'E3\'81\'93\'E3\'81\'A3\'E3\'81\'B7"}\},\par
00779 \{{\cf22 "278"}, {\cf22 "\'E3\'82\'B9\'E3\'82\'BA\'E3\'83\'A0"}\},\par
00780 \{{\cf22 "280"}, {\cf22 "\'E3\'82\'BB\'E3\'83\'96\'E3\'83\'B3\'E3\'82\'B9\'E3\'83\'98\'E3\'83\'96\'E3\'83\'B3MAXION"}\},\par
00781 \{{\cf22 "281"}, {\cf22 "\'E3\'81\'9D\'E3\'82\'89\'E3\'82\'8B?\'E3\'82\'8D\'E3\'82\'93\'C3\'97\'E3\'82\'8C\'E3\'82\'8B\'E3\'82\'8A\'E3\'82\'8A"}\},\par
00782 \{{\cf22 "282"}, {\cf22 "\'E3\'82\'BF\'E3\'83\'BC\'E3\'83\'8B\'E3\'83\'A3?\'E3\'83\'87\'E3\'82\'B0\'E3\'83\'AC\'E3\'83\'81\'E3\'83\'A3\'E3\'83\'95(CV.\'E6\'82\'A0\'E6\'9C\'A8\'E7\'A2\'A7)\'E3\'80\'8C\'E5\'B9\'BC\'E5\'A5\'B3\'E6\'88\'A6\'E8\'A8\'98\'E3\'80\'8D"}\},\par
00783 \{{\cf22 "283"}, {\cf22 "\'E3\'81\'A1\'E3\'82\'87\'E3\'82\'80P <advanced mix>"}\},\par
00784 \{{\cf22 "284"}, {\cf22 "\'E3\'81\'A6\'E3\'81\'AB\'E3\'82\'92\'E3\'81\'AF"}\},\par
00785 \{{\cf22 "286"}, {\cf22 "\'E3\'81\'A9\'E3\'81\'86\'E3\'81\'B6\'E3\'81\'A4\'E3\'83\'93\'E3\'82\'B9\'E3\'82\'B1\'E3\'83\'83\'E3\'83\'84\'C3\'97PPP\'E3\'80\'8C\'E3\'81\'91\'E3\'82\'82\'E3\'81\'AE\'E3\'83\'95\'E3\'83\'AC\'E3\'83\'B3\'E3\'82\'BA\'E3\'80\'8D"}\},\par
00786 \{{\cf22 "287"}, {\cf22 "\'E3\'81\'A8\'E3\'81\'8FP"}\},\par
00787 \{{\cf22 "288"}, {\cf22 "\'E3\'81\'A9\'E3\'81\'B6\'E3\'82\'A6\'E3\'82\'B5\'E3\'82\'AE"}\},\par
00788 \{{\cf22 "289"}, {\cf22 "\'E3\'83\'88\'E3\'83\'A9\'E3\'83\'9C\'E3\'83\'AB\'E3\'82\'BF"}\},\par
00789 \{{\cf22 "290"}, {\cf22 "\'E3\'83\'8A\'E3\'82\'A4\'E3\'82\'BB\'E3\'83\'B3 - momoco-"}\},\par
00790 \{{\cf22 "291"}, {\cf22 "\'E3\'83\'8A\'E3\'83\'8E feat.MY FIRST STORY"}\},\par
00791 \{{\cf22 "292"}, {\cf22 "\'E3\'83\'8A\'E3\'83\'8E\'E3\'82\'A6"}\},\par
00792 \{{\cf22 "293"}, {\cf22 "\'E3\'83\'8A\'E3\'83\'A6\'E3\'82\'BF\'E3\'83\'B3\'E6\'98\'9F\'E4\'BA\'BA"}\},\par
00793 \{{\cf22 "294"}, {\cf22 "\'E3\'81\'AB\'E3\'81\'97\'E3\'82\'82\'E3\'81\'A8\'E5\'85\'88\'E7\'94\'9F\'E3\'80\'81\'E3\'82\'BF\'E3\'82\'AF\'E3\'83\'9E\'E3\'80\'81\'E3\'81\'A9\'E3\'82\'93\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93\'E3\'80\'8C\'E3\'81\'A1\'E3\'82\'87\'E3\'81\'A3\'E3\'81\'A8\'E7\'9B\'9B\'E3\'82\'8A\'E3\'81\'BE\'E3\'81\'97\'E3\'81\'9F\'E3\'80\'82\'E3\'80\'8D"}\},\par
00794 \{{\cf22 "295"}, {\cf22 "\'E3\'81\'AB\'E3\'81\'98\'E3\'82\'88\'E3\'82\'81\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93\'E3\'81\'A8ZIP\'E3\'81\'9F\'E3\'82\'93"}\},\par
00795 \{{\cf22 "296"}, {\cf22 "\'E3\'81\'AC\'E3\'82\'86\'E3\'82\'8A"}\},\par
00796 \{{\cf22 "297"}, {\cf22 "\'E3\'81\'AC\'E3\'82\'8B\'E3\'81\'AF\'E3\'81\'A1"}\},\par
00797 \{{\cf22 "298"}, {\cf22 "\'E3\'81\'AD\'E3\'81\'93\'E3\'81\'BF\'E3\'82\'8A\'E3\'82\'93 + nora2r feat. \'E5\'B0\'8F\'E5\'AE\'AE\'E7\'9C\'9F\'E5\'A4\'AE"}\},\par
00798 \{{\cf22 "299"}, {\cf22 "\'E3\'81\'AD\'E3\'81\'98\'E5\'BC\'8F"}\},\par
00799 \{{\cf22 "300"}, {\cf22 "\'E3\'81\'AE\'E3\'81\'BC\'E3\'82\'8B\'E2\'86\'91"}\},\par
00800 \{{\cf22 "301"}, {\cf22 "\'E3\'83\'8E\'E3\'83\'9E"}\},\par
00801 \{{\cf22 "302"}, {\cf22 "\'E3\'83\'8F\'E3\'83\'81"}\},\par
00802 \{{\cf22 "304"}, {\cf22 "\'E3\'81\'AF\'E3\'81\'A3\'E3\'81\'B1\'E9\'9A\'8A [cover]"}\},\par
00803 \{{\cf22 "305"}, {\cf22 "\'E3\'81\'B1\'E3\'81\'AA\'E3\'81\'BE\'E3\'82\'93/\'E3\'82\'AB\'E3\'83\'A9\'E3\'82\'B9\'E3\'83\'A4\'E3\'82\'B5\'E3\'83\'9C\'E3\'82\'A6"}\},\par
00804 \{{\cf22 "306"}, {\cf22 "\'E3\'83\'90\'E3\'83\'AB\'E3\'83\'BC\'E3\'83\'B3"}\},\par
00805 \{{\cf22 "307"}, {\cf22 "\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A"}\},\par
00806 \{{\cf22 "308"}, {\cf22 "\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A + ARM feat. \'E9\'AB\'98\'E6\'A9\'8B\'E5\'90\'8D\'E4\'BA\'BA"}\},\par
00807 \{{\cf22 "309"}, {\cf22 "\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A(COOL\'EF\'BC\'86CREATE)"}\},\par
00808 \{{\cf22 "310"}, {\cf22 "\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A\'EF\'BC\'88COOL&CREATE\'EF\'BC\'89"}\},\par
00809 \{{\cf22 "311"}, {\cf22 "\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A(COOL\'EF\'BC\'86CREATE)+ ARM(IOSYS)"}\},\par
00810 \{{\cf22 "312"}, {\cf22 "\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A\'E6\'AF\'8D(\'E5\'B0\'BE\'E5\'B4\'8E\'E9\'A0\'86\'E5\'AD\'90)"}\},\par
00811 \{{\cf22 "313"}, {\cf22 "\'E3\'83\'92\'E3\'82\'B2\'E3\'83\'89\'E3\'83\'A9\'E3\'82\'A4\'E3\'83\'90\'E3\'83\'BC"}\},\par
00812 \{{\cf22 "314"}, {\cf22 "\'E3\'81\'B2\'E3\'81\'A8\'E3\'81\'97\'E3\'81\'9A\'E3\'81\'8FP?\'E3\'82\'84\'E3\'81\'BE\'E2\'96\'B3"}\},\par
00813 \{{\cf22 "315"}, {\cf22 "\'E3\'83\'94\'E3\'83\'8E\'E3\'82\'AD\'E3\'82\'AAP"}\},\par
00814 \{{\cf22 "316"}, {\cf22 "\'E3\'83\'94\'E3\'83\'8E\'E3\'82\'AD\'E3\'82\'AA\'E3\'83\'94\'E3\'83\'BC"}\},\par
00815 \{{\cf22 "317"}, {\cf22 "\'E3\'81\'BD\'E3\'81\'A6\'E3\'82\'93\'E3\'81\'97\'E3\'82\'83\'E3\'82\'8B0"}\},\par
00816 \{{\cf22 "318"}, {\cf22 "\'E3\'83\'9D\'E3\'83\'AA\'E3\'82\'B9\'E3\'83\'94\'E3\'82\'AB\'E3\'83\'87\'E3\'83\'AA\'E3\'83\'BC"}\},\par
00817 \{{\cf22 "319"}, {\cf22 "\'E3\'81\'BE\'E3\'81\'B5\'E3\'81\'BE\'E3\'81\'B5"}\},\par
00818 \{{\cf22 "320"}, {\cf22 "\'E3\'81\'BF\'E3\'81\'8D\'E3\'81\'A8P"}\},\par
00819 \{{\cf22 "321"}, {\cf22 "\'E3\'83\'A2\'E3\'83\'AA\'E3\'83\'A2\'E3\'83\'AA\'E3\'81\'82\'E3\'81\'A4\'E3\'81\'97"}\},\par
00820 \{{\cf22 "322"}, {\cf22 "\'E3\'83\'A4\'E3\'82\'B9\'E3\'82\'AA"}\},\par
00821 \{{\cf22 "323"}, {\cf22 "\'E3\'82\'86\'E3\'81\'86\'E3\'82\'86"}\},\par
00822 \{{\cf22 "324"}, {\cf22 "\'E3\'82\'86\'E3\'82\'8A\'E3\'82\'93?\'E6\'9F\'BF\'E3\'83\'81\'E3\'83\'A7\'E3\'82\'B3\'C3\'97Neru"}\},\par
00823 \{{\cf22 "325"}, {\cf22 "\'E3\'83\'AB\'E3\'82\'BC"}\},\par
00824 \{{\cf22 "326"}, {\cf22 "\'E3\'82\'8C\'E3\'82\'8B\'E3\'82\'8A\'E3\'82\'8A"}\},\par
00825 \{{\cf22 "327"}, {\cf22 "\'E3\'82\'8C\'E3\'82\'8B\'E3\'82\'8A\'E3\'82\'8A feat.\'E3\'82\'8D\'E3\'82\'93"}\},\par
00826 \{{\cf22 "328"}, {\cf22 "\'E3\'82\'8D\'E3\'82\'93\'C3\'97Junky"}\},\par
00827 \{{\cf22 "329"}, {\cf22 "\'E3\'82\'8D\'E3\'82\'93\'C3\'97\'E9\'BB\'92\'E9\'AD\'94"}\},\par
00828 \{{\cf22 "330"}, {\cf22 "\'E3\'82\'8D\'E3\'82\'93\'C3\'97\'E7\'94\'B0\'E4\'B8\'AD\'E7\'A7\'80\'E5\'92\'8C(MONACA)"}\},\par
00829 \{{\cf22 "331"}, {\cf22 "\'E3\'83\'AF\'E3\'83\'B3\'E3\'83\'80\'E3\'83\'95\'E3\'83\'AB\'E2\'98\'86\'E3\'82\'AA\'E3\'83\'9D\'E3\'83\'81\'E3\'83\'A5\'E3\'83\'8B\'E3\'83\'86\'E3\'82\'A3\'EF\'BC\'81"}\},\par
00830 \{{\cf22 "332"}, {\cf22 "\'E4\'BA\'9C\'E6\'B2\'99"}\},\par
00831 \{{\cf22 "333"}, {\cf22 "\'E6\'84\'9B(C.V.\'E5\'A4\'A7\'E5\'9D\'AA\'E7\'94\'B1\'E4\'BD\'B3) \'E9\'BA\'BB\'E8\'A1\'A3(C.V.\'E5\'86\'85\'E7\'94\'B0\'E5\'BD\'A9) \'E3\'83\'9F\'E3\'82\'A4(C.V.\'E5\'86\'85\'E7\'94\'B0\'E7\'9C\'9F\'E7\'A4\'BC)\'E3\'80\'8C\'E3\'81\'82\'E3\'81\'84\'E3\'81\'BE\'E3\'81\'84\'E3\'81\'BF\'E3\'83\'BC\'E3\'80\'8D"}\},\par
00832 \{{\cf22 "334"}, {\cf22 "\'E4\'BC\'8A\'E6\'9D\'B1\'E6\'AD\'8C\'E8\'A9\'9E\'E5\'A4\'AA\'E9\'83\'8E"}\},\par
00833 \{{\cf22 "335"}, {\cf22 "\'E4\'BC\'8A\'E6\'9D\'B1\'E6\'AD\'8C\'E8\'A9\'9E\'E5\'A4\'AA\'E9\'83\'8E?\'E3\'82\'8D\'E3\'82\'93\'C3\'97\'E3\'81\'BE\'E3\'82\'89\'E3\'81\'97\'E3\'81\'83"}\},\par
00834 \{{\cf22 "336"}, {\cf22 "\'E4\'BC\'8A\'E6\'9D\'B1\'E6\'AD\'8C\'E8\'A9\'9E\'E5\'A4\'AA\'E9\'83\'8E?\'E3\'82\'8D\'E3\'82\'93\'C3\'97\'E3\'82\'8C\'E3\'82\'8B\'E3\'82\'8A\'E3\'82\'8A"}\},\par
00835 \{{\cf22 "337"}, {\cf22 "\'E9\'99\'B0\'E9\'99\'BD\'E5\'BA\'A7"}\},\par
00836 \{{\cf22 "338"}, {\cf22 "\'E4\'B8\'8B\'E7\'94\'B0\'E9\'BA\'BB\'E7\'BE\'8E\'E3\'80\'8CShining?Force CROSS ELYSION\'E3\'80\'8D"}\},\par
00837 \{{\cf22 "339"}, {\cf22 "\'E5\'8A\'A0\'E8\'B3\'80\'E7\'BE\'8E \'E7\'A5\'A5\'E3\'80\'8C\'E5\'AD\'A6\'E5\'9C\'92\'E3\'83\'8F\'E3\'83\'B3\'E3\'82\'B5\'E3\'83\'A0\'E3\'80\'8D"}\},\par
00838 \{{\cf22 "340"}, {\cf22 "\'E6\'AD\'8C\'E7\'B5\'84\'E9\'9B\'AA\'E6\'9C\'88\'E8\'8A\'B1 \'E5\'A4\'9C\'E3\'80\'85(\'E5\'8E\'9F\'E7\'94\'B0\'E3\'81\'B2\'E3\'81\'A8\'E3\'81\'BF)/\'E3\'81\'84\'E3\'82\'8D\'E3\'82\'8A(\'E8\'8C\'85\'E9\'87\'8E\'E6\'84\'9B\'E8\'A1\'A3)/\'E5\'B0\'8F\'E7\'B4\'AB(\'E5\'B0\'8F\'E5\'80\'89\'E5\'94\'AF)\'E3\'80\'8C\'E6\'A9\'9F\'E5\'B7\'A7\'E5\'B0\'91\'E5\'A5\'B3\'E3\'81\'AF\'E5\'82\'B7\'E3\'81\'A4\'E3\'81\'8B\'E3\'81\'AA\'E3\'81\'84\'E3\'80\'8D"}\},\par
00839 \{{\cf22 "341"}, {\cf22 "\'E6\'9F\'BF\'E3\'83\'81\'E3\'83\'A7\'E3\'82\'B3\'C3\'97\'E3\'81\'BF\'E3\'81\'8D\'E3\'81\'A8P"}\},\par
00840 \{{\cf22 "342"}, {\cf22 "\'E8\'A7\'92\'E7\'94\'B0\'E4\'BF\'A1\'E6\'9C\'97\'E3\'80\'8C\'E3\'83\'92\'E3\'83\'BC\'E3\'83\'AD\'E3\'83\'BC\'E3\'83\'90\'E3\'83\'B3\'E3\'82\'AF\'E3\'80\'8D"}\},\par
00841 \{{\cf22 "344"}, {\cf22 "\'E5\'B2\'B8\'E7\'94\'B0\'E6\'95\'99\'E5\'9B\'A3\'EF\'BC\'86THE\'E6\'98\'8E\'E6\'98\'9F\'E3\'83\'AD\'E3\'82\'B1\'E3\'83\'83\'E3\'83\'84"}\},\par
00842 \{{\cf22 "345"}, {\cf22 "\'E6\'9A\'81Records"}\},\par
00843 \{{\cf22 "346"}, {\cf22 "\'E6\'A1\'90\'E7\'94\'9F \'E4\'B8\'80\'E9\'A6\'AC\'E3\'80\'8C\'E9\'BE\'8D\'E3\'81\'8C\'E5\'A6\'82\'E3\'81\'8F\'E3\'80\'8D"}\},\par
00844 \{{\cf22 "347"}, {\cf22 "\'E5\'8A\'87\'E5\'9B\'A3\'E3\'81\'B2\'E3\'81\'A8\'E3\'81\'A8\'E3\'81\'9B\'E3\'80\'8C\'E3\'81\'B2\'E3\'81\'AA\'E3\'81\'93\'E3\'81\'AE\'E3\'83\'BC\'E3\'81\'A8\'E3\'80\'8D"}\},\par
00845 \{{\cf22 "348"}, {\cf22 "\'E6\'9C\'88\'E9\'88\'B4 \'E9\'82\'A3\'E7\'9F\'A5(CV:\'E4\'BB\'8A\'E6\'9D\'91 \'E5\'BD\'A9\'E5\'A4\'8F)"}\},\par
00846 \{{\cf22 "349"}, {\cf22 "\'E6\'9C\'88\'E9\'88\'B4 \'E7\'99\'BD\'E5\'A5\'88(CV:\'E9\'AB\'98\'E9\'87\'8E \'E9\'BA\'BB\'E9\'87\'8C\'E4\'BD\'B3)"}\},\par
00847 \{{\cf22 "350"}, {\cf22 "\'E6\'9C\'88\'E9\'88\'B4\'E5\'A7\'89\'E5\'A6\'B9\'EF\'BC\'88\'E3\'82\'A4\'E3\'83\'AD\'E3\'83\'89\'E3\'83\'AA\'E3\'83\'9F\'E3\'83\'89\'E3\'83\'AA\'EF\'BC\'89"}\},\par
00848 \{{\cf22 "351"}, {\cf22 "\'E5\'8F\'A4\'E4\'BB\'A3 \'E7\'A5\'90\'E4\'B8\'89\'E3\'80\'8C\'E3\'83\'95\'E3\'82\'A1\'E3\'83\'B3\'E3\'82\'BF\'E3\'82\'B8\'E3\'83\'BC\'E3\'82\'BE\'E3\'83\'BC\'E3\'83\'B3\'E3\'80\'8D"}\},\par
00849 \{{\cf22 "352"}, {\cf22 "\'E5\'BE\'A1\'E5\'BD\'A2 \'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'B7\'E3\'82\'A2\'E3\'83\'8A(CV:\'E7\'A6\'8F\'E5\'8E\'9F \'E7\'B6\'BE\'E9\'A6\'99)"}\},\par
00850 \{{\cf22 "353"}, {\cf22 "\'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE"}\},\par
00851 \{{\cf22 "354"}, {\cf22 "\'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE\'EF\'BC\'86\'E4\'BD\'93\'E6\'93\'8D\'E9\'9A\'8A"}\},\par
00852 \{{\cf22 "355"}, {\cf22 "\'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE\'E3\'80\'8C\'E3\'83\'87\'E3\'82\'A4\'E3\'83\'88\'E3\'83\'8A Championship USA\'E3\'80\'8D"}\},\par
00853 \{{\cf22 "356"}, {\cf22 "\'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE\'E3\'80\'8C\'E3\'83\'90\'E3\'83\'BC\'E3\'83\'81\'E3\'83\'A3\'E3\'83\'AD\'E3\'83\'B3\'E3\'80\'8D"}\},\par
00854 \{{\cf22 "357"}, {\cf22 "\'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE\'E3\'80\'8C\'E3\'83\'9B\'E3\'83\'AB\'E3\'82\'AB?\'E3\'83\'88\'E3\'83\'AB\'E3\'82\'AB\'E3\'80\'8D"}\},\par
00855 \{{\cf22 "358"}, {\cf22 "\'E5\'90\'91\'E6\'97\'A5\'E8\'91\'B5\'C3\'97emon(Tes.)"}\},\par
00856 \{{\cf22 "359"}, {\cf22 "\'E9\'AB\'98\'E6\'A9\'8B\'E8\'8F\'9C\'E3\'80\'85\'C3\'97\'E5\'B2\'A1\'E9\'83\'A8\'E5\'95\'93\'E4\'B8\'80(MONACA)"}\},\par
00857 \{{\cf22 "360"}, {\cf22 "\'E9\'BB\'92\'E3\'81\'86\'E3\'81\'95P"}\},\par
00858 \{{\cf22 "361"}, {\cf22 "\'E9\'AA\'A8\'E7\'9B\'A4P"}\},\par
00859 \{{\cf22 "362"}, {\cf22 "\'E4\'BB\'8A\'E6\'97\'A5\'E7\'8A\'AC"}\},\par
00860 \{{\cf22 "363"}, {\cf22 "\'E9\'AD\'82\'E9\'9F\'B3\'E6\'B3\'89"}\},\par
00861 \{{\cf22 "364"}, {\cf22 "\'E4\'BD\'90\'E9\'87\'8E \'E4\'BF\'A1\'E7\'BE\'A9\'E3\'80\'8C\'E3\'82\'B9\'E3\'83\'9A\'E3\'83\'BC\'E3\'82\'B9\'E3\'83\'8F\'E3\'83\'AA\'E3\'82\'A2\'E3\'83\'BC\'E3\'80\'8D"}\},\par
00862 \{{\cf22 "365"}, {\cf22 "\'E5\'BD\'A9\'E9\'9F\'B3"}\},\par
00863 \{{\cf22 "366"}, {\cf22 "\'E5\'89\'8A\'E9\'99\'A4"}\},\par
00864 \{{\cf22 "367"}, {\cf22 "\'E4\'B8\'89\'E8\'8D\'89\'E5\'BA\'B7\'E4\'BA\'8C\'E9\'83\'8E\'E3\'80\'8CCODE OF JOKER\'E3\'80\'8D"}\},\par
00865 \{{\cf22 "368"}, {\cf22 "\'E5\'B1\'B1\'E6\'A0\'B9\'E3\'83\'9F\'E3\'83\'81\'E3\'83\'AB"}\},\par
00866 \{{\cf22 "373"}, {\cf22 "\'E5\'B0\'8F\'E4\'BB\'8F \'E5\'87\'AA(CV:\'E4\'BD\'90\'E5\'80\'89 \'E8\'96\'AB)"}\},\par
00867 \{{\cf22 "374"}, {\cf22 "\'E5\'B0\'8F\'E9\'87\'8E\'E9\'9A\'8A\'E9\'95\'B7\'E3\'81\'A8Jimmy\'E8\'A6\'AA\'E5\'88\'86"}\},\par
00868 \{{\cf22 "376"}, {\cf22 "\'E4\'B8\'8A\'E5\'9D\'82\'E3\'81\'99\'E3\'81\'BF\'E3\'82\'8C\'E3\'80\'8C\'E3\'83\'9D\'E3\'83\'97\'E3\'83\'86\'E3\'83\'94\'E3\'83\'94\'E3\'83\'83\'E3\'82\'AF\'E3\'80\'8D"}\},\par
00869 \{{\cf22 "377"}, {\cf22 "\'E6\'96\'B0\'E5\'B0\'8F\'E7\'94\'B0\'E5\'A4\'A2\'E7\'AB\'A5 \'EF\'BC\'86 \'E3\'82\'AD\'E3\'83\'A9\'E2\'98\'85\'E3\'83\'AD\'E3\'83\'83\'E3\'82\'BD"}\},\par
00870 \{{\cf22 "378"}, {\cf22 "\'E6\'96\'B0\'E5\'BA\'84\'E3\'81\'8B\'E3\'81\'AA\'E3\'81\'88(CV:\'E4\'B8\'89\'E6\'A3\'AE\'E3\'81\'99\'E3\'81\'9A\'E3\'81\'93)\'E3\'80\'8C\'E3\'81\'A6\'E3\'83\'BC\'E3\'81\'8D\'E3\'82\'85\'E3\'81\'86\'E3\'80\'8D"}\},\par
00871 \{{\cf22 "379"}, {\cf22 "\'E4\'BB\'81\'E4\'BA\'95\'E5\'B1\'B1\'E5\'BE\'81\'E5\'BC\'98 Feat. GREAT G and surprise"}\},\par
00872 \{{\cf22 "380"}, {\cf22 "\'E9\'9D\'92\'E6\'9C\'A8 \'E5\'8D\'83\'E7\'B4\'98\'E3\'80\'8C\'E9\'BE\'8D\'E3\'81\'8C\'E5\'A6\'82\'E3\'81\'8F \'E7\'B6\'AD\'E6\'96\'B0\'EF\'BC\'81\'E3\'80\'8D"}\},\par
00873 \{{\cf22 "381"}, {\cf22 "\'E9\'9D\'92\'E6\'9C\'A8\'E5\'8D\'83\'E7\'B4\'98/\'E6\'84\'9B\'E6\'B5\'B7"}\},\par
00874 \{{\cf22 "382"}, {\cf22 "\'E7\'9F\'B3\'E9\'B9\'B8\'E5\'B1\'8B"}\},\par
00875 \{{\cf22 "383"}, {\cf22 "\'E9\'9C\'9C\'E6\'9C\'88\'E3\'81\'AF\'E3\'82\'8B\'E3\'81\'8B"}\},\par
00876 \{{\cf22 "384"}, {\cf22 "\'E6\'89\'93\'E9\'A6\'96\'E7\'8D\'84\'E9\'96\'80\'E5\'90\'8C\'E5\'A5\'BD\'E4\'BC\'9A"}\},\par
00877 \{{\cf22 "385"}, {\cf22 "\'E5\'A4\'A7\'E4\'B9\'85\'E4\'BF\'9D \'E5\'8D\'9A(BNGI)\'E3\'80\'8C\'E3\'83\'87\'E3\'82\'A4\'E3\'83\'88\'E3\'83\'8A USA\'E3\'80\'8D"}\},\par
00878 \{{\cf22 "386"}, {\cf22 "\'E5\'A4\'A7\'E8\'B0\'B7\'E6\'99\'BA\'E5\'93\'89, Douglas Robb from Hoobastank\'E3\'80\'8C\'E3\'82\'BD\'E3\'83\'8B\'E3\'83\'83\'E3\'82\'AF \'E3\'83\'95\'E3\'82\'A9\'E3\'83\'BC\'E3\'82\'B9\'E3\'80\'8D"}\},\par
00879 \{{\cf22 "387"}, {\cf22 "\'E5\'A4\'A7\'E8\'B0\'B7\'E6\'99\'BA\'E5\'93\'89, Jean Paul Makhlouf of Cash Cash\'E3\'80\'8C\'E3\'82\'BD\'E3\'83\'8B\'E3\'83\'83\'E3\'82\'AF \'E3\'82\'AB\'E3\'83\'A9\'E3\'83\'BC\'E3\'82\'BA\'E3\'80\'8D"}\},\par
00880 \{{\cf22 "388"}, {\cf22 "\'E5\'A4\'A7\'E8\'B0\'B7\'E6\'99\'BA\'E5\'93\'89\'E3\'80\'8C\'E3\'82\'BD\'E3\'83\'8B\'E3\'83\'83\'E3\'82\'AF \'E3\'82\'B8\'E3\'82\'A7\'E3\'83\'8D\'E3\'83\'AC\'E3\'83\'BC\'E3\'82\'B7\'E3\'83\'A7\'E3\'83\'B3\'E3\'82\'BA\'E3\'80\'8D"}\},\par
00881 \{{\cf22 "389"}, {\cf22 "\'E5\'A4\'A7\'E8\'B0\'B7\'E6\'99\'BA\'E5\'93\'89\'E3\'80\'8C\'E3\'82\'BD\'E3\'83\'8B\'E3\'83\'83\'E3\'82\'AF \'E3\'83\'AD\'E3\'82\'B9\'E3\'83\'88\'E3\'83\'AF\'E3\'83\'BC\'E3\'83\'AB\'E3\'83\'89\'E3\'80\'8D"}\},\par
00882 \{{\cf22 "390"}, {\cf22 "\'E5\'A4\'A7\'E8\'B0\'B7\'E6\'99\'BA\'E5\'93\'89\'E3\'80\'8C\'E3\'83\'AA\'E3\'82\'BA\'E3\'83\'A0\'E6\'80\'AA\'E7\'9B\'97R \'E7\'9A\'87\'E5\'B8\'9D\'E3\'83\'8A\'E3\'83\'9D\'E3\'83\'AC\'E3\'82\'AA\'E3\'83\'B3\'E3\'81\'AE\'E9\'81\'BA\'E7\'94\'A3\'E3\'80\'8D"}\},\par
00883 \{{\cf22 "391"}, {\cf22 "\'E8\'B0\'B7\'E5\'B1\'8B\'E6\'A5\'BD"}\},\par
00884 \{{\cf22 "392"}, {\cf22 "\'E6\'A8\'BD\'E6\'9C\'A8\'E6\'A0\'84\'E4\'B8\'80\'E9\'83\'8E"}\},\par
00885 \{{\cf22 "393"}, {\cf22 "\'E9\'95\'B7\'E6\'B2\'BC\'E8\'8B\'B1\'E6\'A8\'B9\'E3\'80\'8C\'E3\'82\'BD\'E3\'83\'8B\'E3\'83\'83\'E3\'82\'AF \'E3\'83\'A9\'E3\'83\'83\'E3\'82\'B7\'E3\'83\'A5\'E3\'80\'8D"}\},\par
00886 \{{\cf22 "394"}, {\cf22 "\'E6\'A4\'8E\'E5\'90\'8D\'E3\'82\'82\'E3\'81\'9F (\'E3\'81\'BD\'E3\'82\'8F\'E3\'81\'BD\'E3\'82\'8FP)"}\},\par
00887 \{{\cf22 "395"}, {\cf22 "\'E5\'A4\'A9\'E7\'8E\'8B\'E6\'B4\'B2 \'E3\'81\'AA\'E3\'81\'9A\'E3\'81\'AA(CV:\'E5\'B1\'B1\'E6\'9C\'AC \'E5\'BD\'A9\'E4\'B9\'83)"}\},\par
00888 \{{\cf22 "397"}, {\cf22 "\'E7\'94\'B0\'E4\'B8\'AD\'E3\'83\'9E\'E3\'82\'A4\'E3\'83\'9F"}\},\par
00889 \{{\cf22 "398"}, {\cf22 "\'E5\'9C\'9F\'E9\'96\'93\'E3\'81\'86\'E3\'81\'BE\'E3\'82\'8B [CV.\'E7\'94\'B0\'E4\'B8\'AD\'E3\'81\'82\'E3\'81\'84\'E3\'81\'BF]\'E3\'80\'8C\'E5\'B9\'B2\'E7\'89\'A9\'E5\'A6\'B9\'EF\'BC\'81\'E3\'81\'86\'E3\'81\'BE\'E3\'82\'8B\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93\'E3\'80\'8D"}\},\par
00890 \{{\cf22 "399"}, {\cf22 "\'E5\'9C\'9F\'E9\'96\'93\'E3\'81\'86\'E3\'81\'BE\'E3\'82\'8B\'EF\'BC\'88\'E7\'94\'B0\'E4\'B8\'AD\'E3\'81\'82\'E3\'81\'84\'E3\'81\'BF\'EF\'BC\'89\'E3\'80\'8C\'E5\'B9\'B2\'E7\'89\'A9\'E5\'A6\'B9\'EF\'BC\'81\'E3\'81\'86\'E3\'81\'BE\'E3\'82\'8B\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93R\'E3\'80\'8D"}\},\par
00891 \{{\cf22 "400"}, {\cf22 "\'E6\'80\'92\'E9\'AB\'AA\'E5\'A4\'A9\'E3\'80\'8C\'E7\'99\'BE\'E9\'AC\'BC\'E5\'A4\'A7\'E6\'88\'A6\'E7\'B5\'B5\'E5\'B7\'BB\'E3\'80\'8D"}\},\par
00892 \{{\cf22 "401"}, {\cf22 "\'E6\'9D\'B1\'E4\'BA\'AC\'E3\'82\'A2\'E3\'82\'AF\'E3\'83\'86\'E3\'82\'A3\'E3\'83\'96NEETs"}\},\par
00893 \{{\cf22 "402"}, {\cf22 "\'E6\'9D\'B1\'E4\'BA\'AC\'E3\'82\'B9\'E3\'82\'AB\'E3\'83\'91\'E3\'83\'A9\'E3\'83\'80\'E3\'82\'A4\'E3\'82\'B9\'E3\'82\'AA\'E3\'83\'BC\'E3\'82\'B1\'E3\'82\'B9\'E3\'83\'88\'E3\'83\'A9 [cover]"}\},\par
00894 \{{\cf22 "403"}, {\cf22 "\'E8\'B1\'9A\'E4\'B9\'99\'E5\'A5\'B3"}\},\par
00895 \{{\cf22 "404"}, {\cf22 "\'E6\'97\'A5\'E5\'90\'91\'E9\'9B\'BB\'E5\'B7\'A5"}\},\par
00896 \{{\cf22 "405"}, {\cf22 "\'E7\'8C\'AB\'E5\'8F\'89Master\'E3\'80\'8Cjubeat\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00897 \{{\cf22 "406"}, {\cf22 "\'E7\'AE\'B1\'E9\'83\'A8 \'E3\'81\'AA\'E3\'82\'8B(CV:M?A?O)"}\},\par
00898 \{{\cf22 "407"}, {\cf22 "\'E5\'B9\'A1\'E8\'B0\'B7\'E5\'B0\'9A\'E5\'8F\'B2 Arranged by SEGA Sound Unit [H.]\'E3\'80\'8C\'E3\'83\'90\'E3\'83\'BC\'E3\'83\'8B\'E3\'83\'B3\'E3\'82\'B0\'E3\'83\'AC\'E3\'83\'B3\'E3\'82\'B8\'E3\'83\'A3\'E3\'83\'BC\'E3\'80\'8D"}\},\par
00899 \{{\cf22 "408"}, {\cf22 "\'E5\'B9\'A1\'E8\'B0\'B7\'E5\'B0\'9A\'E5\'8F\'B2\'E3\'80\'8C\'E3\'83\'AA\'E3\'82\'BA\'E3\'83\'A0\'E6\'80\'AA\'E7\'9B\'97R \'E7\'9A\'87\'E5\'B8\'9D\'E3\'83\'8A\'E3\'83\'9D\'E3\'83\'AC\'E3\'82\'AA\'E3\'83\'B3\'E3\'81\'AE\'E9\'81\'BA\'E7\'94\'A3\'E3\'80\'8D"}\},\par
00900 \{{\cf22 "409"}, {\cf22 "\'E5\'85\'AB\'E7\'8E\'8B\'E5\'AD\'90P"}\},\par
00901 \{{\cf22 "410"}, {\cf22 "\'E7\'99\'BA\'E7\'86\'B1\'E5\'B7\'AB\'E5\'A5\'B3\'EF\'BD\'9E\'E3\'81\'9A"}\},\par
00902 \{{\cf22 "411"}, {\cf22 "\'E8\'88\'9E\'E9\'A2\'A8-MAIKAZE/\'E6\'B2\'99\'E7\'B4\'97\'E9\'A3\'9B\'E9\'B3\'A5"}\},\par
00903 \{{\cf22 "412"}, {\cf22 "\'E8\'88\'9E\'E9\'A2\'A8-MAIKAZE/\'E6\'99\'82\'E9\'9F\'B3-TOKINE"}\},\par
00904 \{{\cf22 "413"}, {\cf22 "\'E7\'A6\'8F\'E5\'B1\'B1\'E5\'85\'89\'E6\'99\'B4"}\},\par
00905 \{{\cf22 "414"}, {\cf22 "\'E7\'A6\'8F\'E5\'B1\'B1\'E5\'85\'89\'E6\'99\'B4\'E3\'80\'8CCrackin\'E2\'80\'99DJ\'E3\'80\'8D"}\},\par
00906 \{{\cf22 "415"}, {\cf22 "\'E5\'B9\'B3\'E4\'BA\'95\'E5\'A0\'85 [cover]"}\},\par
00907 \{{\cf22 "416"}, {\cf22 "\'E7\'B1\'B3\'E6\'B4\'A5\'E7\'8E\'84\'E5\'B8\'AB"}\},\par
00908 \{{\cf22 "417"}, {\cf22 "\'E8\'8A\'B3\'E5\'B7\'9D\'E3\'82\'88\'E3\'81\'97\'E3\'81\'AE"}\},\par
00909 \{{\cf22 "418"}, {\cf22 "\'E5\'A6\'B9\'EF\'BC\'B3\'E3\'80\'8C\'E5\'B9\'B2\'E7\'89\'A9\'E5\'A6\'B9\'EF\'BC\'81\'E3\'81\'86\'E3\'81\'BE\'E3\'82\'8B\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93R\'E3\'80\'8D"}\},\par
00910 \{{\cf22 "420"}, {\cf22 "\'E6\'98\'8E\'E5\'9D\'82 \'E8\'8A\'B9\'E8\'8F\'9C(CV:\'E6\'96\'B0\'E7\'94\'B0 \'E6\'81\'B5\'E6\'B5\'B7)"}\},\par
00911 \{{\cf22 "423"}, {\cf22 "\'E7\'9F\'A2\'E9\'B4\'87\'E3\'81\'A4\'E3\'81\'8B\'E3\'81\'95 feat. kalon."}\},\par
00912 \{{\cf22 "424"}, {\cf22 "\'E7\'9F\'A2\'E9\'B4\'87\'E3\'81\'A4\'E3\'81\'8B\'E3\'81\'95 feat. \'E4\'B8\'89\'E6\'BE\'A4\'E7\'A7\'8B"}\},\par
00913 \{{\cf22 "425"}, {\cf22 "\'E5\'B9\'BD\'E9\'96\'89\'E3\'82\'B5\'E3\'83\'86\'E3\'83\'A9\'E3\'82\'A4\'E3\'83\'88"}\},\par
00914 \{{\cf22 "426"}, {\cf22 "\'E9\'88\'B4\'E6\'9C\'A8\'E3\'81\'93\'E3\'81\'AE\'E3\'81\'BF\'E3\'80\'8C\'E3\'83\'8E\'E3\'83\'BC\'E3\'82\'B2\'E3\'83\'BC\'E3\'83\'A0?\'E3\'83\'8E\'E3\'83\'BC\'E3\'83\'A9\'E3\'82\'A4\'E3\'83\'95\'E3\'80\'8D"}\},\par
00915 \{{\cf22 "428"}, {\cf22 "\'E5\'92\'8C\'E7\'94\'B0\'E3\'81\'9F\'E3\'81\'91\'E3\'81\'82\'E3\'81\'8D(\'E3\'81\'8F\'E3\'82\'89\'E3\'81\'92P)"}\},\par
00916 \{{\cf22 "429"}, {\cf22 "\'E9\'AC\'B1P feat.flower"}\},\par
00917 \{{\cf22 "430"}, {\cf22 "\'E6\'BE\'A4\'E6\'9D\'91 \'E9\'81\'A5\'E3\'80\'8C\'E9\'BE\'8D\'E3\'81\'8C\'E5\'A6\'82\'E3\'81\'8F\'EF\'BC\'95 \'E5\'A4\'A2\'E3\'80\'81\'E5\'8F\'B6\'E3\'81\'88\'E3\'81\'97\'E8\'80\'85\'E3\'80\'8D"}\},\par
00918 \{{\cf22 "431"}, {\cf22 "LOPIT"}\},\par
00919 \{{\cf22 "432"}, {\cf22 "\'E3\'81\'82\'E3\'81\'B9\'E3\'81\'AB\'E3\'82\'85\'E3\'81\'86\'E3\'81\'B7\'E3\'82\'8D\'E3\'81\'98\'E3\'81\'87\'E3\'81\'8F\'E3\'81\'A8 feat.\'E5\'A4\'A9\'E6\'9C\'88\'E3\'82\'81\'E3\'81\'90\'E3\'82\'8B\'EF\'BC\'86\'E5\'A6\'82\'E6\'9C\'88\'E3\'81\'99\'E3\'81\'BF\'E3\'82\'8C\'E3\'80\'8C\'E3\'83\'84\'E3\'82\'A4\'E3\'83\'B3\'E3\'82\'A8\'E3\'83\'B3\'E3\'82\'B8\'E3\'82\'A7\'E3\'83\'ABBREAK\'E3\'80\'8D"}\},\par
00920 \{{\cf22 "433"}, {\cf22 "MOSAIC.WAV"}\},\par
00921 \{{\cf22 "434"}, {\cf22 "ave;new feat.\'E4\'BD\'90\'E5\'80\'89\'E7\'B4\'97\'E7\'B9\'94"}\},\par
00922 \{{\cf22 "435"}, {\cf22 "\'E4\'BA\'9C\'E5\'92\'B2\'E8\'8A\'B1"}\},\par
00923 \{{\cf22 "436"}, {\cf22 "\'E5\'A4\'A7\'E6\'A9\'8B\'E5\'BD\'A9\'E9\'A6\'99"}\},\par
00924 \{{\cf22 "437"}, {\cf22 "\'E3\'83\'91\'E3\'83\'88\'E3\'83\'AA\'E3\'82\'B7\'E3\'82\'A2?\'E3\'82\'AA\'E3\'83\'96?\'E3\'82\'A8\'E3\'83\'B3\'E3\'83\'89?\'E9\'BB\'92\'E6\'9C\'A8\'E6\'9C\'AA\'E7\'9F\'A5?\'E5\'A4\'95\'E8\'8E\'89\'E3\'82\'B7\'E3\'83\'A3\'E3\'83\'81?\'E6\'98\'8E\'E6\'97\'A5\'E5\'8E\'9F\'E3\'83\'A6\'E3\'82\'A6\'E3\'82\'AD\'E3\'80\'8C\'E3\'83\'8E\'E3\'83\'A9\'E3\'81\'A8\'E7\'9A\'87\'E5\'A5\'B3\'E3\'81\'A8\'E9\'87\'8E\'E8\'89\'AF\'E7\'8C\'AB\'E3\'83\'8F\'E3\'83\'BC\'E3\'83\'88\'E3\'80\'8D"}\},\par
00925 \{{\cf22 "438"}, {\cf22 "fripSide"}\},\par
00926 \{{\cf22 "439"}, {\cf22 "\'E3\'81\'9D\'E3\'82\'89\'E3\'81\'BE\'E3\'81\'B5\'E3\'81\'86\'E3\'82\'89\'E3\'81\'95\'E3\'81\'8B"}\},\par
00927 \{{\cf22 "440"}, {\cf22 "cosMo VS dj TAKA\'E3\'80\'8CSOUND VOLTEX\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00928 \{{\cf22 "441"}, {\cf22 "MASAKI\'EF\'BC\'88ZUNTATA\'EF\'BC\'89\'E3\'80\'8C\'E3\'82\'B0\'E3\'83\'AB\'E3\'83\'BC\'E3\'83\'B4\'E3\'82\'B3\'E3\'83\'BC\'E3\'82\'B9\'E3\'82\'BF\'E3\'83\'BC3EX\'E3\'83\'89\'E3\'83\'AA\'E3\'83\'BC\'E3\'83\'A0\'E3\'83\'91\'E3\'83\'BC\'E3\'83\'86\'E3\'82\'A3\'E3\'83\'BC\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00929 \{{\cf22 "442"}, {\cf22 "Drop\'EF\'BC\'86\'E7\'A5\'87\'E7\'BE\'BD feat. \'E8\'91\'89\'E6\'9C\'88\'E3\'82\'86\'E3\'82\'89\'E3\'80\'8C\'E5\'A4\'AA\'E9\'BC\'93\'E3\'81\'AE\'E9\'81\'94\'E4\'BA\'BA\'E3\'80\'8D\'E3\'82\'88\'E3\'82\'8A"}\},\par
00930 \{{\cf22 "443"}, {\cf22 "\'E3\'83\'87\'E3\'83\'83\'E3\'83\'89\'E3\'83\'9C\'E3\'83\'BC\'E3\'83\'ABP"}\},\par
00931 \{{\cf22 "444"}, {\cf22 "SOUND HOLIC feat. 3L"}\},\par
00932 \{{\cf22 "445"}, {\cf22 "Tsukasa"}\},\par
00933 \{{\cf22 "446"}, {\cf22 "HIRO/\'E6\'9B\'B2\'E8\'80\'85P"}\},\par
00934 \{{\cf22 "447"}, {\cf22 "OSTERproject"}\},\par
00935 \{{\cf22 "448"}, {\cf22 "baker"}\},\par
00936 \{{\cf22 "449"}, {\cf22 "\'E3\'81\'AE\'E3\'82\'8AP"}\},\par
00937 \{{\cf22 "450"}, {\cf22 "BlackY fused with WAiKURO"}\},\par
00938 \{{\cf22 "451"}, {\cf22 "Sprite Recordings"}\},\par
00939 \{{\cf22 "452"}, {\cf22 "\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A\'EF\'BC\'8B\'E3\'81\'82\'E3\'81\'BE\'E3\'81\'AD\'EF\'BC\'88COOL&CREATE\'EF\'BC\'89"}\},\par
00940 \{{\cf22 "453"}, {\cf22 "ARM (IOSYS)"}\},\par
00941 \{{\cf22 "454"}, {\cf22 "\'E7\'AE\'B1\'E9\'83\'A8\'E3\'81\'AA\'E3\'82\'8B(CV:M?A?O)"}\},\par
00942 \{{\cf22 "455"}, {\cf22 "\'E5\'B0\'8F\'E4\'BB\'8F\'E5\'87\'AA(CV:\'E4\'BD\'90\'E5\'80\'89\'E8\'96\'AB)"}\},\par
00943 \{{\cf22 "456"}, {\cf22 "\'E6\'9C\'88\'E9\'88\'B4\'E9\'82\'A3\'E7\'9F\'A5(CV:\'E4\'BB\'8A\'E6\'9D\'91\'E5\'BD\'A9\'E5\'A4\'8F)"}\},\par
00944 \{{\cf22 "457"}, {\cf22 "\'E3\'83\'AA\'E3\'82\'B3\'EF\'BC\'88CV\'EF\'BC\'9A\'E5\'AF\'8C\'E7\'94\'B0\'E7\'BE\'8E\'E6\'86\'82\'EF\'BC\'89\'E3\'80\'81\'E3\'83\'AC\'E3\'82\'B0\'EF\'BC\'88CV\'EF\'BC\'9A\'E4\'BC\'8A\'E7\'80\'AC\'E8\'8C\'89\'E8\'8E\'89\'E4\'B9\'9F\'EF\'BC\'89"}\},\par
00945 \{{\cf22 "458"}, {\cf22 "kanone"}\},\par
00946 \{{\cf22 "459"}, {\cf22 "\'E3\'82\'B8\'E3\'83\'BC\'E3\'82\'BF\'EF\'BC\'88CV:\'E9\'87\'91\'E5\'85\'83\'E5\'AF\'BF\'E5\'AD\'90\'EF\'BC\'89\'E3\'80\'81\'E3\'83\'AB\'E3\'83\'AA\'E3\'82\'A2\'EF\'BC\'88CV:\'E6\'9D\'B1\'E5\'B1\'B1\'E5\'A5\'88\'E5\'A4\'AE\'EF\'BC\'89\'E3\'80\'81\'E3\'83\'B4\'E3\'82\'A3\'E3\'83\'BC\'E3\'83\'A9\'EF\'BC\'88CV:\'E4\'BB\'8A\'E4\'BA\'95\'E9\'BA\'BB\'E7\'BE\'8E\'EF\'BC\'89\'E3\'80\'81\'E3\'83\'9E\'E3\'83\'AA\'E3\'83\'BC\'EF\'BC\'88CV:\'E9\'95\'B7\'E8\'B0\'B7\'E5\'B7\'9D\'E6\'98\'8E\'E5\'AD\'90\'EF\'BC\'89"}\},\par
00947 \{{\cf22 "460"}, {\cf22 "\'E3\'83\'9A\'E3\'82\'B3\'E3\'83\'AA\'E3\'83\'BC\'E3\'83\'8C\'EF\'BC\'88CV\'EF\'BC\'9AM?A?O\'EF\'BC\'89\'E3\'80\'81\'E3\'82\'B3\'E3\'83\'83\'E3\'82\'B3\'E3\'83\'AD\'EF\'BC\'88CV\'EF\'BC\'9A\'E4\'BC\'8A\'E8\'97\'A4\'E7\'BE\'8E\'E6\'9D\'A5\'EF\'BC\'89\'E3\'80\'81\'E3\'82\'AD\'E3\'83\'A3\'E3\'83\'AB\'EF\'BC\'88CV\'EF\'BC\'9A\'E7\'AB\'8B\'E8\'8A\'B1\'E7\'90\'86\'E9\'A6\'99\'EF\'BC\'89"}\},\par
00948 \{{\cf22 "461"}, {\cf22 "\'E6\'B1\'A0\'E9\'A0\'BC\'E5\'BA\'83"}\},\par
00949 \{{\cf22 "462"}, {\cf22 "Shoichiro Hirata feat.Sana"}\},\par
00950 \{{\cf22 "463"}, {\cf22 "Demetori"}\},\par
00951 \{{\cf22 "464"}, {\cf22 "\'E3\'82\'86\'E3\'81\'86\'E3\'82\'86 / \'E7\'AF\'A0\'E8\'9E\'BA\'E6\'82\'A0\'E9\'82\'A3"}\},\par
00952 \{{\cf22 "465"}, {\cf22 "cosMo@\'E6\'9A\'B4\'E8\'B5\'B0P"}\},\par
00953 \{{\cf22 "466"}, {\cf22 "Cres."}\},\par
00954 \{{\cf22 "467"}, {\cf22 "\'E3\'81\'A1\'E3\'83\'BC\'E3\'82\'80MOER"}\},\par
00955 \{{\cf22 "468"}, {\cf22 "\'E3\'81\'AD\'E3\'81\'93\'E3\'81\'BF\'E3\'82\'8A\'E3\'82\'93 feat.\'E5\'B0\'8F\'E5\'AE\'AE\'E7\'9C\'9F\'E5\'A4\'AE"}\},\par
00956 \{{\cf22 "469"}, {\cf22 "\'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE\'E3\'81\'AE\'E7\'88\'B6"}\},\par
00957 \{{\cf22 "471"}, {\cf22 "Team Grimoire"}\},\par
00958 \{{\cf22 "472"}, {\cf22 "S!N?+\'CE\'B1/\'E3\'81\'82\'E3\'82\'8B\'E3\'81\'B5\'E3\'81\'81\'E3\'81\'8D\'E3\'82\'85\'E3\'82\'93\'E3\'80\'82\'C3\'97ALI PROJECT"}\},\par
00959 \{{\cf22 "473"}, {\cf22 "\'E5\'B3\'B6\'E7\'88\'BA\'C3\'97\'E8\'9C\'82\'E5\'B1\'8B\'E3\'81\'AA\'E3\'81\'AA\'E3\'81\'97"}\},\par
00960 \{{\cf22 "474"}, {\cf22 "\'E3\'82\'84\'E3\'81\'97\'E3\'81\'8D\'E3\'82\'93 feat.\'E3\'81\'A7\'E3\'82\'89\'E3\'81\'A3\'E3\'81\'8F\'E3\'81\'BE(CV:\'E4\'B8\'89\'E6\'A3\'AE\'E3\'81\'99\'E3\'81\'9A\'E3\'81\'93)"}\},\par
00961 \{{\cf22 "475"}, {\cf22 "\'E3\'81\'BF\'E3\'81\'8D\'E3\'81\'A8P feat. FantasticYouth"}\},\par
00962 \{{\cf22 "476"}, {\cf22 "164 feat. \'E3\'82\'81\'E3\'81\'84\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93"}\},\par
00963 \{{\cf22 "477"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9Akz(livetune)\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E3\'82\'AA\'E3\'83\'B3\'E3\'82\'B2\'E3\'82\'AD\'E3\'82\'B7\'E3\'83\'A5\'E3\'83\'BC\'E3\'82\'BF\'E3\'83\'BC\'E3\'82\'BA"}\},\par
00964 \{{\cf22 "480"}, {\cf22 "MintJam"}\},\par
00965 \{{\cf22 "481"}, {\cf22 "Nothing But Requiem (feat.Aikapin & Chiyoko)"}\},\par
00966 \{{\cf22 "482"}, {\cf22 "USAO"}\},\par
00967 \{{\cf22 "483"}, {\cf22 "\'E8\'88\'9E\'E3\'83\'B6\'E5\'8E\'9F\'E9\'AB\'98\'E6\'A0\'A1\'E8\'BB\'BD\'E9\'9F\'B3\'E9\'83\'A8"}\},\par
00968 \{{\cf22 "484"}, {\cf22 "\'E3\'81\'8D\'E3\'81\'8F\'E3\'81\'8A"}\},\par
00969 \{{\cf22 "485"}, {\cf22 "\'E3\'81\'98\'E3\'83\'BC\'E3\'81\'96\'E3\'81\'99P feat.kradness"}\},\par
00970 \{{\cf22 "486"}, {\cf22 "\'E9\'9D\'92\'E5\'B3\'B6\'E6\'8E\'A2\'E5\'81\'B5\'E4\'BA\'8B\'E5\'8B\'99\'E6\'89\'80\'E5\'99\'A8\'E6\'A5\'BD\'E6\'8D\'9C\'E6\'9F\'BB\'E9\'83\'A8B\'E6\'8B\'85"}\},\par
00971 \{{\cf22 "487"}, {\cf22 "YUC'e"}\},\par
00972 \{{\cf22 "489"}, {\cf22 "DIVELA feat.\'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF"}\},\par
00973 \{{\cf22 "490"}, {\cf22 "DA PUMP"}\},\par
00974 \{{\cf22 "491"}, {\cf22 "T.M.Revolution [covered by \'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE]"}\},\par
00975 \{{\cf22 "492"}, {\cf22 "\'E3\'82\'B5\'E3\'82\'AB\'E3\'83\'8A\'E3\'82\'AF\'E3\'82\'B7\'E3\'83\'A7\'E3\'83\'B3"}\},\par
00976 \{{\cf22 "493"}, {\cf22 "OxT"}\},\par
00977 \{{\cf22 "494"}, {\cf22 "\'E3\'81\'A9\'E3\'81\'86\'E3\'81\'B6\'E3\'81\'A4\'E3\'83\'93\'E3\'82\'B9\'E3\'82\'B1\'E3\'83\'83\'E3\'83\'84\'C3\'97PPP\'E3\'80\'8C\'E3\'81\'91\'E3\'82\'82\'E3\'81\'AE\'E3\'83\'95\'E3\'83\'AC\'E3\'83\'B3\'E3\'82\'BA\'EF\'BC\'92\'E3\'80\'8D"}\},\par
00978 \{{\cf22 "495"}, {\cf22 "\'E6\'9C\'88\'E9\'88\'B4 \'E9\'82\'A3\'E7\'9F\'A5\'EF\'BC\'88\'E3\'83\'B4\'E3\'82\'A1\'E3\'82\'A4\'E3\'82\'AA\'E3\'83\'AA\'E3\'83\'B3\'EF\'BC\'89 \'E4\'BC\'B4\'E5\'A5\'8F\'EF\'BC\'9A\'E3\'82\'A4\'E3\'83\'AD\'E3\'83\'89\'E3\'83\'AA\'E3\'83\'9F\'E3\'83\'89\'E3\'83\'AA"}\},\par
00979 \{{\cf22 "496"}, {\cf22 "\'E3\'81\'AF\'E3\'82\'8B\'E3\'81\'BE\'E3\'81\'8D\'E3\'81\'94\'E3\'81\'AF\'E3\'82\'93 feat.\'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF"}\},\par
00980 \{{\cf22 "497"}, {\cf22 "\'E5\'A4\'8F\'E4\'BB\'A3\'E5\'AD\'9D\'E6\'98\'8E feat. \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF"}\},\par
00981 \{{\cf22 "498"}, {\cf22 "colate"}\},\par
00982 \{{\cf22 "499"}, {\cf22 "\'E3\'83\'9D\'E3\'83\'97\'E5\'AD\'90(CV:\'E4\'BA\'94\'E5\'8D\'81\'E5\'B5\'90\'E8\'A3\'95\'E7\'BE\'8E)\'EF\'BC\'86\'E3\'83\'94\'E3\'83\'94\'E7\'BE\'8E(CV:\'E6\'9D\'BE\'E5\'B5\'9C\'E9\'BA\'97)"}\},\par
00983 \{{\cf22 "500"}, {\cf22 "Fear, and Loathing in Las Vegas"}\},\par
00984 \{{\cf22 "501"}, {\cf22 "lumo"}\},\par
00985 \{{\cf22 "502"}, {\cf22 "\'E3\'83\'88\'E3\'83\'BC\'E3\'83\'9E"}\},\par
00986 \{{\cf22 "503"}, {\cf22 "otetsu"}\},\par
00987 \{{\cf22 "504"}, {\cf22 "\'E3\'81\'BE\'E3\'82\'89\'E3\'81\'97\'E3\'81\'83"}\},\par
00988 \{{\cf22 "505"}, {\cf22 "\'E3\'83\'95\'E3\'83\'A9\'E3\'83\'B3\'E3\'82\'B7\'E3\'83\'A5\'E3\'82\'B7\'E3\'83\'A5"}\},\par
00989 \{{\cf22 "506"}, {\cf22 "\'E3\'81\'8F\'E3\'81\'A3\'E3\'81\'A1\'E3\'83\'BC (DARKSIDE APPROACH)"}\},\par
00990 \{{\cf22 "508"}, {\cf22 "\'E3\'83\'A8\'E3\'83\'AB\'E3\'82\'B7\'E3\'82\'AB"}\},\par
00991 \{{\cf22 "509"}, {\cf22 "\'E3\'81\'82\'E3\'82\'8F\'E3\'81\'AE\'E3\'81\'82\'E3\'82\'86\'E3\'82\'80"}\},\par
00992 \{{\cf22 "510"}, {\cf22 "BLACK STARS\'EF\'BC\'88\'E3\'83\'96\'E3\'83\'A9\'E3\'83\'83\'E3\'82\'AF\'E6\'8C\'87\'E4\'BB\'A4?\'E3\'83\'9A\'E3\'82\'AC\'E3\'83\'83\'E3\'82\'B5\'E6\'98\'9F\'E4\'BA\'BA?\'E3\'82\'B7\'E3\'83\'AB\'E3\'83\'90\'E3\'83\'BC\'E3\'83\'96\'E3\'83\'AB\'E3\'83\'BC\'E3\'83\'A1?\'E3\'83\'8E\'E3\'83\'BC\'E3\'83\'90\'EF\'BC\'89"}\},\par
00993 \{{\cf22 "511"}, {\cf22 "\'E3\'82\'A2\'E3\'82\'AE\'E3\'83\'A9?\'E3\'82\'AD\'E3\'83\'B3\'E3\'82\'B0\'E3\'82\'B8\'E3\'83\'A7\'E3\'83\'BC?\'E3\'82\'AC\'E3\'83\'83\'E3\'83\'84\'E6\'98\'9F\'E4\'BA\'BA\'EF\'BC\'88CV\'EF\'BC\'9A\'E9\'A3\'AF\'E7\'94\'B0\'E9\'87\'8C\'E7\'A9\'82?\'E4\'B8\'89\'E6\'A3\'AE\'E3\'81\'99\'E3\'81\'9A\'E3\'81\'93?\'E6\'9D\'BE\'E7\'94\'B0\'E5\'88\'A9\'E5\'86\'B4\'EF\'BC\'89"}\},\par
00994 \{{\cf22 "512"}, {\cf22 "\'E7\'AB\'8B\'E7\'A7\'8B feat.\'E3\'81\'A1\'E3\'82\'87\'E3\'81\'93"}\},\par
00995 \{{\cf22 "513"}, {\cf22 "Omoi feat. \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF"}\},\par
00996 \{{\cf22 "515"}, {\cf22 "supercell"}\},\par
00997 \{{\cf22 "517"}, {\cf22 "GigaReol"}\},\par
00998 \{{\cf22 "520"}, {\cf22 "\'E3\'83\'B3\'E3\'83\'80\'E3\'83\'9B&\'E3\'81\'BA\'E3\'81\'91\'E3\'81\'9F\'E3\'82\'93 from Fischer's"}\},\par
00999 \{{\cf22 "521"}, {\cf22 "\'E3\'82\'A2\'E3\'82\'A4\'E3\'83\'A9\'EF\'BC\'88CV\'EF\'BC\'9A\'E4\'B8\'89\'E6\'A3\'AE\'E3\'81\'99\'E3\'81\'9A\'E3\'81\'93\'EF\'BC\'89\'E3\'82\'B7\'E3\'83\'9E\'EF\'BC\'88CV:\'E4\'BA\'95\'E5\'8F\'A3\'E8\'A3\'95\'E9\'A6\'99\'EF\'BC\'89\'E3\'81\'AF\'E3\'81\'AA\'EF\'BC\'88CV:\'E8\'8A\'B1\'E6\'BE\'A4\'E9\'A6\'99\'E8\'8F\'9C\'EF\'BC\'89"}\},\par
01000 \{{\cf22 "522"}, {\cf22 "\'E6\'9C\'89\'E6\'A9\'9F\'E9\'85\'B8"}\},\par
01001 \{{\cf22 "523"}, {\cf22 "SAMBA MASTER \'E4\'BD\'90\'E8\'97\'A4"}\},\par
01002 \{{\cf22 "524"}, {\cf22 "\'E3\'81\'8F\'E3\'82\'89\'E3\'81\'92P"}\},\par
01003 \{{\cf22 "525"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E5\'AE\'AE\'E5\'B4\'8E\'E8\'AA\'A0\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E3\'82\'AA\'E3\'83\'B3\'E3\'82\'B2\'E3\'82\'AD\'E3\'82\'B7\'E3\'83\'A5\'E3\'83\'BC\'E3\'82\'BF\'E3\'83\'BC\'E3\'82\'BA"}\},\par
01004 \{{\cf22 "526"}, {\cf22 "\'E3\'83\'A6\'E3\'83\'AA\'E3\'82\'A4?\'E3\'82\'AB\'E3\'83\'8E\'E3\'83\'B3 feat.GUMI"}\},\par
01005 \{{\cf22 "527"}, {\cf22 "\'E3\'81\'AA\'E3\'81\'8D\'E3\'82\'83\'E3\'82\'80\'E3\'82\'8A\'E3\'82\'83"}\},\par
01006 \{{\cf22 "528"}, {\cf22 "\'E5\'89\'8A\'E9\'99\'A4 feat. Nikki Simmons"}\},\par
01007 \{{\cf22 "529"}, {\cf22 "\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A \'C3\'97 Cranky"}\},\par
01008 \{{\cf22 "530"}, {\cf22 "REDALiCE feat. Ayumi Nomiya"}\},\par
01009 \{{\cf22 "531"}, {\cf22 "cosMo\'EF\'BC\'A0\'E6\'9A\'B4\'E8\'B5\'B0AlterEgo"}\},\par
01010 \{{\cf22 "532"}, {\cf22 "BlackY vs. WAiKURO"}\},\par
01011 \{{\cf22 "533"}, {\cf22 "Yooh"}\},\par
01012 \{{\cf22 "534"}, {\cf22 "Maozon"}\},\par
01013 \{{\cf22 "535"}, {\cf22 "C-Show"}\},\par
01014 \{{\cf22 "536"}, {\cf22 "Masahiro \\"Godspeed\\" Aoki VS Kai"}\},\par
01015 \{{\cf22 "537"}, {\cf22 "\'E3\'81\'82\'E3\'81\'82\'E3\'81\'82\'E3\'81\'82"}\},\par
01016 \{{\cf22 "538"}, {\cf22 "\'E3\'81\'98\'E3\'83\'BC\'E3\'81\'96\'E3\'81\'99\'EF\'BC\'88\'E3\'83\'AF\'E3\'83\'B3\'E3\'83\'80\'E3\'83\'95\'E3\'83\'AB\'E2\'98\'86\'E3\'82\'AA\'E3\'83\'9D\'E3\'83\'81\'E3\'83\'A5\'E3\'83\'8B\'E3\'83\'86\'E3\'82\'A3\'EF\'BC\'81\'EF\'BC\'89feat.Kradness"}\},\par
01017 \{{\cf22 "539"}, {\cf22 "SADA 2Futureanthem feat. ellie"}\},\par
01018 \{{\cf22 "540"}, {\cf22 "\'E4\'B8\'AD\'E5\'B1\'B1\'E7\'9C\'9F\'E6\'96\'97"}\},\par
01019 \{{\cf22 "541"}, {\cf22 "Rigel Theatre feat. \'E3\'83\'9F\'E3\'83\'BC\'E3\'82\'A6\'E3\'82\'A7\'E3\'83\'AB"}\},\par
01020 \{{\cf22 "542"}, {\cf22 "\'E5\'B1\'B1\'E6\'9C\'AC\'E7\'9C\'9F\'E5\'A4\'AE\'E6\'A8\'B9"}\},\par
01021 \{{\cf22 "543"}, {\cf22 "syudou"}\},\par
01022 \{{\cf22 "544"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E6\'9D\'91\'E3\'82\'AB\'E3\'83\'AF\'E5\'9F\'BA\'E6\'88\'90\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E3\'82\'AA\'E3\'83\'B3\'E3\'82\'B2\'E3\'82\'AD\'E3\'82\'B7\'E3\'83\'A5\'E3\'83\'BC\'E3\'82\'BF\'E3\'83\'BC\'E3\'82\'BA"}\},\par
01023 \{{\cf22 "545"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E9\'AF\'A8\'E4\'BA\'95\'E5\'9B\'BD\'E5\'AE\'B6\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E8\'97\'8D\'E5\'8E\'9F \'E6\'A4\'BF(CV\'EF\'BC\'9A\'E6\'A9\'8B\'E6\'9C\'AC \'E3\'81\'A1\'E3\'81\'AA\'E3\'81\'BF)"}\},\par
01024 \{{\cf22 "546"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E3\'82\'86\'E3\'82\'88\'E3\'82\'86\'E3\'81\'A3\'E3\'81\'BA\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E4\'B9\'9D\'E6\'A2\'9D \'E6\'A5\'93(CV\'EF\'BC\'9A\'E4\'BD\'B3\'E6\'9D\'91 \'E3\'81\'AF\'E3\'82\'8B\'E3\'81\'8B)"}\},\par
01025 \{{\cf22 "547"}, {\cf22 "Yunomi feat.nicamoq"}\},\par
01026 \{{\cf22 "548"}, {\cf22 "happy machine"}\},\par
01027 \{{\cf22 "549"}, {\cf22 "\'E5\'A4\'A7\'E5\'9B\'BD\'E5\'A5\'8F\'E9\'9F\'B3"}\},\par
01028 \{{\cf22 "550"}, {\cf22 "OSTER project feat. \'E3\'81\'8B\'E3\'81\'AA\'E3\'81\'9F\'E3\'82\'93"}\},\par
01029 \{{\cf22 "551"}, {\cf22 "owl\'EF\'BC\'8Atree feat.chi\'EF\'BC\'8Atree"}\},\par
01030 \{{\cf22 "552"}, {\cf22 "\'E3\'83\'8F\'E3\'83\'A0\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93\'E3\'81\'9A [covered by \'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE]"}\},\par
01031 \{{\cf22 "553"}, {\cf22 "fh\'E1na"}\},\par
01032 \{{\cf22 "554"}, {\cf22 "\'E3\'82\'8D\'E3\'81\'8F\'E3\'82\'8D"}\},\par
01033 \{{\cf22 "555"}, {\cf22 "\'E6\'A2\'85\'E3\'81\'A8\'E3\'82\'89"}\},\par
01034 \{{\cf22 "556"}, {\cf22 "\'E6\'A3\'AE\'E7\'BE\'85\'E4\'B8\'87\'E8\'B1\'A1"}\},\par
01035 \{{\cf22 "557"}, {\cf22 "Liz Triangle"}\},\par
01036 \{{\cf22 "558"}, {\cf22 "\'E5\'89\'8A\'E9\'99\'A4 feat. void (Mournfinale)"}\},\par
01037 \{{\cf22 "559"}, {\cf22 "KAH"}\},\par
01038 \{{\cf22 "560"}, {\cf22 "\'E3\'81\'97\'E3\'83\'BC\'E3\'81\'91\'E3\'83\'BC"}\},\par
01039 \{{\cf22 "561"}, {\cf22 "\'E9\'88\'B4\'E6\'9C\'A8\'E9\'9B\'85\'E4\'B9\'8B"}\},\par
01040 \{{\cf22 "562"}, {\cf22 "\'E3\'82\'A2\'E3\'82\'A4\'E3\'83\'B3\'E3\'82\'BA(\'E6\'97\'A5\'E9\'87\'8E\'E8\'81\'A1)\'E3\'80\'81\'E3\'82\'AB\'E3\'82\'BA\'E3\'83\'9E(\'E7\'A6\'8F\'E5\'B3\'B6\'E6\'BD\'A4)\'E3\'80\'81\'E3\'82\'B9\'E3\'83\'90\'E3\'83\'AB(\'E5\'B0\'8F\'E6\'9E\'97\'E8\'A3\'95\'E4\'BB\'8B)\'E3\'80\'81\'E3\'82\'BF\'E3\'83\'BC\'E3\'83\'8B\'E3\'83\'A3(\'E6\'82\'A0\'E6\'9C\'A8\'E7\'A2\'A7)"}\},\par
01041 \{{\cf22 "563"}, {\cf22 "\'E3\'82\'AB\'E3\'82\'AF\'E3\'81\'A8\'E3\'82\'A4\'E3\'83\'A0\'E3\'83\'A9(CV\'EF\'BC\'9A\'E6\'9D\'BE\'E6\'9C\'AC\'E6\'85\'B6\'E7\'A5\'90)"}\},\par
01042 \{{\cf22 "564"}, {\cf22 "\'E3\'83\'A9\'E3\'83\'86\'E3\'82\'A3\'E3\'83\'8A(CV:\'E9\'AB\'98\'E5\'B0\'BE\'E5\'A5\'8F\'E9\'9F\'B3)"}\},\par
01043 \{{\cf22 "565"}, {\cf22 "\'E3\'82\'AA\'E3\'83\'BC\'E3\'82\'A4\'E3\'82\'B7\'E3\'83\'9E\'E3\'82\'B5\'E3\'83\'A8\'E3\'82\'B7"}\},\par
01044 \{{\cf22 "566"}, {\cf22 "\'E7\'94\'B0\'E4\'B8\'AD\'EF\'BC\'A2"}\},\par
01045 \{{\cf22 "567"}, {\cf22 "\'E3\'81\'99\'E3\'82\'8A\'E3\'81\'83"}\},\par
01046 \{{\cf22 "569"}, {\cf22 "Syrufit + HDLV"}\},\par
01047 \{{\cf22 "570"}, {\cf22 "Silentroom"}\},\par
01048 \{{\cf22 "571"}, {\cf22 "\'E5\'85\'AD\'E5\'8E\'98\'E8\'88\'8E"}\},\par
01049 \{{\cf22 "572"}, {\cf22 "Ice"}\},\par
01050 \{{\cf22 "573"}, {\cf22 "xi vs sakuzyo"}\},\par
01051 \{{\cf22 "574"}, {\cf22 "Rabpit"}\},\par
01052 \{{\cf22 "575"}, {\cf22 "\'E3\'81\'8B\'E3\'82\'81\'E3\'82\'8A\'E3\'81\'82(EDP)"}\},\par
01053 \{{\cf22 "576"}, {\cf22 "?sir"}\},\par
01054 \{{\cf22 "577"}, {\cf22 "UMAINA"}\},\par
01055 \{{\cf22 "578"}, {\cf22 "Masayoshi Minoshima \'D7 REDALiCE"}\},\par
01056 \{{\cf22 "579"}, {\cf22 "\'E3\'82\'AD\'E3\'83\'8E\'E3\'82\'B7\'E3\'82\'BF feat. \'E9\'9F\'B3\'E8\'A1\'97\'E3\'82\'A6\'E3\'83\'8A?\'E9\'8F\'A1\'E9\'9F\'B3\'E3\'83\'AA\'E3\'83\'B3"}\},\par
01057 \{{\cf22 "580"}, {\cf22 "XYZ"}\},\par
01058 \{{\cf22 "581"}, {\cf22 "\'E3\'83\'92\'E3\'82\'B2\'E3\'83\'89\'E3\'83\'A9\'E3\'82\'A4\'E3\'83\'90\'E3\'83\'BC feat.\'E3\'82\'89\'E3\'81\'84\'E3\'82\'80\'E3\'81\'A3\'E3\'81\'8F\'E3\'81\'BE(CV:\'E6\'9D\'91\'E5\'B7\'9D\'E6\'A2\'A8\'E8\'A1\'A3) \'EF\'BC\'86 \'E3\'82\'8C\'E3\'82\'82\'E3\'82\'93\'E3\'81\'A3\'E3\'81\'8F\'E3\'81\'BE(CV:MoeMi)"}\},\par
01059 \{{\cf22 "582"}, {\cf22 "technoplanet"}\},\par
01060 \{{\cf22 "583"}, {\cf22 "hanzo"}\},\par
01061 \{{\cf22 "584"}, {\cf22 "\'E5\'8D\'83\'E6\'9C\'AC\'E6\'9D\'BE \'E4\'BB\'81"}\},\par
01062 \{{\cf22 "585"}, {\cf22 "\'E3\'82\'AD\'E3\'83\'8E\'E3\'82\'B7\'E3\'82\'BF feat. \'E3\'81\'9D\'E3\'82\'89\'E3\'81\'BF\'E3\'81\'93 (\'E3\'83\'9B\'E3\'83\'AD\'E3\'83\'A9\'E3\'82\'A4\'E3\'83\'96 \'E3\'81\'A8\'E3\'81\'8D\'E3\'81\'AE\'E3\'81\'9D\'E3\'82\'89\'EF\'BC\'86\'E3\'81\'95\'E3\'81\'8F\'E3\'82\'89\'E3\'81\'BF\'E3\'81\'93)"}\},\par
01063 \{{\cf22 "586"}, {\cf22 "aran"}\},\par
01064 \{{\cf22 "587"}, {\cf22 "\'E9\'9B\'84\'E4\'B9\'8B\'E5\'8A\'A9 feat. Sennzai"}\},\par
01065 \{{\cf22 "588"}, {\cf22 "PSYQUI"}\},\par
01066 \{{\cf22 "589"}, {\cf22 "Laur"}\},\par
01067 \{{\cf22 "590"}, {\cf22 "40mP feat. \'E3\'82\'B7\'E3\'83\'A3\'E3\'83\'8E"}\},\par
01068 \{{\cf22 "591"}, {\cf22 "RD-Sounds feat.\'E4\'B8\'AD\'E6\'81\'B5\'E5\'85\'89\'E5\'9F\'8E"}\},\par
01069 \{{\cf22 "592"}, {\cf22 "\'E9\'81\'94\'E8\'A6\'8B \'E6\'81\'B5 featured by \'E4\'BD\'90\'E9\'87\'8E \'E5\'AE\'8F\'E6\'99\'83"}\},\par
01070 \{{\cf22 "593"}, {\cf22 "*Luna feat.NORISTRY"}\},\par
01071 \{{\cf22 "594"}, {\cf22 "\'E3\'81\'8A\'E6\'9C\'88\'E3\'81\'95\'E3\'81\'BE\'E4\'BA\'A4\'E9\'9F\'BF\'E6\'9B\'B2"}\},\par
01072 \{{\cf22 "595"}, {\cf22 "\'E3\'82\'A2\'E3\'83\'AA\'E3\'82\'B9\'E3\'82\'B7\'E3\'83\'A3\'E3\'83\'83\'E3\'83\'8F\'E3\'81\'A8\'E9\'AD\'94\'E6\'B3\'95\'E3\'81\'AE\'E6\'A5\'BD\'E5\'9B\'A3"}\},\par
01073 \{{\cf22 "596"}, {\cf22 "llliiillliiilll"}\},\par
01074 \{{\cf22 "597"}, {\cf22 "\'E3\'83\'A6\'E3\'83\'AA\'E3\'82\'A4?\'E3\'82\'AB\'E3\'83\'8E\'E3\'83\'B3 feat.\'E3\'82\'A6\'E3\'82\'A9\'E3\'83\'AB\'E3\'83\'94\'E3\'82\'B9\'E3\'82\'AB\'E3\'83\'BC\'E3\'82\'BF\'E3\'83\'BC&\'E3\'81\'BE\'E3\'81\'B2\'E3\'82\'8B"}\},\par
01075 \{{\cf22 "598"}, {\cf22 "ELECTROCUTICA"}\},\par
01076 \{{\cf22 "599"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E4\'B8\'AD\'E5\'B1\'B1\'E7\'9C\'9F\'E6\'96\'97\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E3\'83\'9E\'E3\'83\'BC\'E3\'83\'81\'E3\'83\'B3\'E3\'82\'B0\'E3\'83\'9D\'E3\'82\'B1\'E3\'83\'83\'E3\'83\'84 [\'E6\'97\'A5\'E5\'90\'91 \'E5\'8D\'83\'E5\'A4\'8F(CV\'EF\'BC\'9A\'E5\'B2\'A1\'E5\'92\'B2 \'E7\'BE\'8E\'E4\'BF\'9D)\'E3\'80\'81\'E6\'9F\'8F\'E6\'9C\'A8 \'E7\'BE\'8E\'E4\'BA\'9C(CV\'EF\'BC\'9A\'E5\'92\'8C\'E6\'B0\'A3 \'E3\'81\'82\'E3\'81\'9A\'E6\'9C\'AA)\'E3\'80\'81\'E6\'9D\'B1\'E9\'9B\'B2 \'E3\'81\'A4\'E3\'82\'80\'E3\'81\'8E(CV\'EF\'BC\'9A\'E5\'92\'8C \'E6\'B3\'89 \'E9\'A2\'A8\'E8\'8A\'B1)]"}\},\par
01077 \{{\cf22 "600"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E3\'82\'84\'E3\'81\'97\'E3\'81\'8D\'E3\'82\'93\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E6\'9F\'8F\'E6\'9C\'A8 \'E7\'BE\'8E\'E4\'BA\'9C(CV\'EF\'BC\'9A\'E5\'92\'8C\'E6\'B0\'A3 \'E3\'81\'82\'E3\'81\'9A\'E6\'9C\'AA)"}\},\par
01078 \{{\cf22 "601"}, {\cf22 "\'E3\'81\'BA\'E3\'81\'AE\'E3\'82\'8C\'E3\'82\'8A"}\},\par
01079 \{{\cf22 "602"}, {\cf22 "Cranky feat.\'E3\'81\'8A\'E3\'82\'82\'E3\'81\'97\'E3\'82\'8D\'E4\'B8\'89\'E5\'9B\'BD\'E5\'BF\'97"}\},\par
01080 \{{\cf22 "603"}, {\cf22 "\'E3\'81\'8B\'E3\'81\'84\'E3\'82\'8A\'E3\'81\'8D\'E3\'83\'99\'E3\'82\'A2 feat.\'E6\'9D\'BE\'E4\'B8\'8B"}\},\par
01081 \{{\cf22 "604"}, {\cf22 "Petit Rabbit's"}\},\par
01082 \{{\cf22 "605"}, {\cf22 "shami momo\'EF\'BC\'88\'E5\'90\'89\'E7\'94\'B0\'E5\'84\'AA\'E5\'AD\'90?\'E5\'8D\'83\'E4\'BB\'A3\'E7\'94\'B0\'E6\'A1\'83\'EF\'BC\'89\'EF\'BC\'8FCV\'EF\'BC\'9A\'E5\'B0\'8F\'E5\'8E\'9F\'E5\'A5\'BD\'E7\'BE\'8E?\'E9\'AC\'BC\'E9\'A0\'AD\'E6\'98\'8E\'E9\'87\'8C"}\},\par
01083 \{{\cf22 "606"}, {\cf22 "LiSA"}\},\par
01084 \{{\cf22 "608"}, {\cf22 "StylipS"}\},\par
01085 \{{\cf22 "609"}, {\cf22 "\'E7\'B4\'97\'E5\'80\'89\'E3\'81\'B2\'E3\'81\'B3\'E3\'81\'8D\'EF\'BC\'88CV:\'E3\'83\'95\'E3\'82\'A1\'E3\'82\'A4\'E3\'83\'AB\'E3\'83\'BC\'E3\'82\'BA\'E3\'81\'82\'E3\'81\'84\'EF\'BC\'89\'EF\'BC\'86\'E8\'A1\'97\'E9\'9B\'84\'E9\'B3\'B4\'E9\'80\'A0\'EF\'BC\'88CV:\'E7\'9F\'B3\'E5\'B7\'9D\'E7\'95\'8C\'E4\'BA\'BA\'EF\'BC\'89"}\},\par
01086 \{{\cf22 "610"}, {\cf22 "\'E3\'81\'AB\'E3\'81\'98\'E3\'81\'95\'E3\'82\'93\'E3\'81\'98"}\},\par
01087 \{{\cf22 "611"}, {\cf22 "\'E3\'82\'AB\'E3\'83\'B3\'E3\'82\'B6\'E3\'82\'AD\'E3\'82\'A4\'E3\'82\'AA\'E3\'83\'AA"}\},\par
01088 \{{\cf22 "612"}, {\cf22 "\'E4\'BD\'9C\'E6\'9B\'B2\'EF\'BC\'9A\'E3\'82\'AB\'E3\'82\'B8\'E3\'83\'A3\'E3\'80\'80\'E4\'BD\'9C\'E8\'A9\'9E\'EF\'BC\'9A\'E5\'82\'98\'E6\'9D\'91\'E3\'83\'88\'E3\'83\'BC\'E3\'82\'BF\'E3\'80\'80\'E7\'B7\'A8\'E6\'9B\'B2\'EF\'BC\'9A\'E3\'81\'AD\'E3\'81\'98\'E5\'BC\'8F\'E3\'80\'80\'E8\'AA\'BF\'E5\'A3\'B0\'EF\'BC\'9A\'E3\'82\'B7\'E3\'83\'AA\'E3\'82\'A2"}\},\par
01089 \{{\cf22 "613"}, {\cf22 "\'E7\'8D\'85\'E5\'AD\'90\'E5\'BF\'97\'E5\'8F\'B8"}\},\par
01090 \{{\cf22 "614"}, {\cf22 "\'E3\'83\'94\'E3\'82\'B3\'E3\'83\'B3"}\},\par
01091 \{{\cf22 "615"}, {\cf22 "\'E3\'83\'8A\'E3\'83\'8A\'E3\'83\'9B\'E3\'82\'B7\'E7\'AE\'A1\'E5\'BC\'A6\'E6\'A5\'BD\'E5\'9B\'A3"}\},\par
01092 \{{\cf22 "616"}, {\cf22 "\'E3\'81\'8B\'E3\'81\'84\'E3\'82\'8A\'E3\'81\'8D\'E3\'83\'99\'E3\'82\'A2 feat.flower"}\},\par
01093 \{{\cf22 "617"}, {\cf22 "\'E3\'81\'8B\'E3\'81\'84\'E3\'82\'8A\'E3\'81\'8D\'E3\'83\'99\'E3\'82\'A2 feat.GUMI"}\},\par
01094 \{{\cf22 "618"}, {\cf22 "DiGiTAL WiNG feat. \'E8\'8A\'B1\'E3\'81\'9F\'E3\'82\'93"}\},\par
01095 \{{\cf22 "620"}, {\cf22 "REDALiCE & aran"}\},\par
01096 \{{\cf22 "621"}, {\cf22 "TANO*C Sound Team"}\},\par
01097 \{{\cf22 "622"}, {\cf22 "Akira Complex"}\},\par
01098 \{{\cf22 "623"}, {\cf22 "Team Grimoire vs Laur"}\},\par
01099 \{{\cf22 "624"}, {\cf22 "Aoi"}\},\par
01100 \{{\cf22 "625"}, {\cf22 "Ino(chronoize) feat. \'E6\'9F\'B3\'E7\'80\'AC\'E3\'83\'9E\'E3\'82\'B5\'E3\'82\'AD"}\},\par
01101 \{{\cf22 "626"}, {\cf22 "yaseta"}\},\par
01102 \{{\cf22 "627"}, {\cf22 "owl\'EF\'BC\'8Atree feat.yu\'EF\'BC\'8Atree"}\},\par
01103 \{{\cf22 "628"}, {\cf22 "onoken"}\},\par
01104 \{{\cf22 "629"}, {\cf22 "Official\'E9\'AB\'AD\'E7\'94\'B7dism"}\},\par
01105 \{{\cf22 "630"}, {\cf22 "\'E3\'81\'8B\'E3\'81\'84\'E3\'82\'8A\'E3\'81\'8D\'E3\'83\'99\'E3\'82\'A2 feat.\'E5\'88\'A9\'E9\'A6\'99"}\},\par
01106 \{{\cf22 "631"}, {\cf22 "CielArc"}\},\par
01107 \{{\cf22 "633"}, {\cf22 "\'E6\'B0\'B4\'E9\'87\'8E\'E5\'81\'A5\'E6\'B2\'BB"}\},\par
01108 \{{\cf22 "634"}, {\cf22 "\'E4\'BD\'9C\'E8\'A9\'9E\'E4\'BD\'9C\'E6\'9B\'B2\'EF\'BC\'9A\'E6\'A4\'8E\'E5\'90\'8D\'E3\'82\'82\'E3\'81\'9F\'E3\'80\'80\'E7\'B7\'A8\'E6\'9B\'B2\'EF\'BC\'9AKTG\'E3\'80\'80\'E6\'98\'A0\'E5\'83\'8F\'EF\'BC\'9AYuma Saito"}\},\par
01109 \{{\cf22 "635"}, {\cf22 "Giga / \'E9\'8F\'A1\'E9\'9F\'B3\'E3\'83\'AA\'E3\'83\'B3?\'E3\'83\'AC\'E3\'83\'B3 / Vivid BAD SQUAD\'E3\'80\'8C\'E3\'83\'97\'E3\'83\'AD\'E3\'82\'B8\'E3\'82\'A7\'E3\'82\'AF\'E3\'83\'88\'E3\'82\'BB\'E3\'82\'AB\'E3\'82\'A4 \'E3\'82\'AB\'E3\'83\'A9\'E3\'83\'95\'E3\'83\'AB\'E3\'82\'B9\'E3\'83\'86\'E3\'83\'BC\'E3\'82\'B8\'EF\'BC\'81 feat. \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF\'E3\'80\'8D"}\},\par
01110 \{{\cf22 "636"}, {\cf22 "Orangestar feat.IA"}\},\par
01111 \{{\cf22 "637"}, {\cf22 "owl\'EF\'BC\'8Atree Remixed by Camellia"}\},\par
01112 \{{\cf22 "638"}, {\cf22 "\'E3\'82\'B5\'E3\'82\'B5\'E3\'83\'8E\'E3\'83\'9E\'E3\'83\'AA\'E3\'82\'A4 / \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF / 25\'E6\'99\'82\'E3\'80\'81\'E3\'83\'8A\'E3\'82\'A4\'E3\'83\'88\'E3\'82\'B3\'E3\'83\'BC\'E3\'83\'89\'E3\'81\'A7\'E3\'80\'82\'E3\'80\'8C\'E3\'83\'97\'E3\'83\'AD\'E3\'82\'B8\'E3\'82\'A7\'E3\'82\'AF\'E3\'83\'88\'E3\'82\'BB\'E3\'82\'AB\'E3\'82\'A4 \'E3\'82\'AB\'E3\'83\'A9\'E3\'83\'95\'E3\'83\'AB\'E3\'82\'B9\'E3\'83\'86\'E3\'83\'BC\'E3\'82\'B8\'EF\'BC\'81 feat. \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF\'E3\'80\'8D"}\},\par
01113 \{{\cf22 "639"}, {\cf22 "HiTECH NINJA vs Cranky"}\},\par
01114 \{{\cf22 "640"}, {\cf22 "DIVELA feat.\'E6\'A1\'90\'E8\'B0\'B7\'E3\'81\'93\'E3\'82\'80\'E3\'81\'8E"}\},\par
01115 \{{\cf22 "641"}, {\cf22 "\'E9\'BB\'92\'E9\'AD\'94"}\},\par
01116 \{{\cf22 "642"}, {\cf22 "Juggernaut."}\},\par
01117 \{{\cf22 "643"}, {\cf22 "TAKU1175 ft.\'E9\'A7\'84\'E3\'80\'85\'E5\'AD\'90"}\},\par
01118 \{{\cf22 "644"}, {\cf22 "Endorfin."}\},\par
01119 \{{\cf22 "645"}, {\cf22 "\'E3\'83\'84\'E3\'83\'9F\'E3\'82\'AD \'C3\'97 \'E5\'AE\'AE\'E4\'B8\'8B\'E9\'81\'8A"}\},\par
01120 \{{\cf22 "646"}, {\cf22 "nanobii"}\},\par
01121 \{{\cf22 "647"}, {\cf22 "BlackY feat. Risa Yuzuki"}\},\par
01122 \{{\cf22 "648"}, {\cf22 "Lime"}\},\par
01123 \{{\cf22 "649"}, {\cf22 "Capchii"}\},\par
01124 \{{\cf22 "651"}, {\cf22 "\'E8\'90\'A9\'E5\'8E\'9F \'E4\'B8\'83\'E3\'80\'85\'E7\'80\'AC(CV:\'E6\'9D\'B1\'E5\'9F\'8E \'E6\'97\'A5\'E6\'B2\'99\'E5\'AD\'90)"}\},\par
01125 \{{\cf22 "652"}, {\cf22 "\'E8\'91\'9B\'E5\'9F\'8E \'E8\'8F\'AF(CV:\'E4\'B8\'B8\'E5\'B2\'A1 \'E5\'92\'8C\'E4\'BD\'B3\'E5\'A5\'88)"}\},\par
01126 \{{\cf22 "653"}, {\cf22 "\'E5\'B0\'8F\'E9\'87\'8E \'E7\'BE\'8E\'E8\'8B\'97(CV:\'E4\'BC\'8A\'E8\'97\'A4 \'E7\'BE\'8E\'E6\'9D\'A5)"}\},\par
01127 \{{\cf22 "654"}, {\cf22 "\'E3\'82\'86\'E3\'82\'86\'E3\'81\'86\'E3\'81\'9F"}\},\par
01128 \{{\cf22 "655"}, {\cf22 "DJ Myosuke"}\},\par
01129 \{{\cf22 "656"}, {\cf22 "Massive New Krew"}\},\par
01130 \{{\cf22 "657"}, {\cf22 "IOSYS TRAX"}\},\par
01131 \{{\cf22 "658"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E5\'A4\'A7\'E7\'95\'91\'E6\'8B\'93\'E4\'B9\'9F\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9Abitter flavor [\'E6\'A1\'9C\'E4\'BA\'95 \'E6\'98\'A5\'E8\'8F\'9C(CV\'EF\'BC\'9A\'E8\'BF\'91\'E8\'97\'A4 \'E7\'8E\'B2\'E5\'A5\'88)\'E3\'80\'81\'E6\'97\'A9\'E4\'B9\'99\'E5\'A5\'B3 \'E5\'BD\'A9\'E8\'8F\'AF(CV\'EF\'BC\'9A\'E4\'B8\'AD\'E5\'B3\'B6 \'E5\'94\'AF)]"}\},\par
01132 \{{\cf22 "659"}, {\cf22 "BlackY vs. Yooh"}\},\par
01133 \{{\cf22 "660"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9AQ-MHz\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E3\'82\'AA\'E3\'83\'B3\'E3\'82\'B2\'E3\'82\'AD\'E3\'82\'B7\'E3\'83\'A5\'E3\'83\'BC\'E3\'82\'BF\'E3\'83\'BC\'E3\'82\'BA"}\},\par
01134 \{{\cf22 "661"}, {\cf22 "Mrs. GREEN APPLE"}\},\par
01135 \{{\cf22 "662"}, {\cf22 "\'E5\'8E\'9F\'E7\'94\'B0\'E7\'9F\'A5\'E4\'B8\'96"}\},\par
01136 \{{\cf22 "663"}, {\cf22 "\'E6\'B6\'BC\'E5\'AE\'AE\'E3\'83\'8F\'E3\'83\'AB\'E3\'83\'92\'EF\'BC\'88CV.\'E5\'B9\'B3\'E9\'87\'8E \'E7\'B6\'BE\'EF\'BC\'89 TV\'E3\'82\'A2\'E3\'83\'8B\'E3\'83\'A1\'E3\'80\'8C\'E6\'B6\'BC\'E5\'AE\'AE\'E3\'83\'8F\'E3\'83\'AB\'E3\'83\'92\'E3\'81\'AE\'E6\'86\'82\'E9\'AC\'B1\'E3\'80\'8D"}\},\par
01137 \{{\cf22 "664"}, {\cf22 "covered by \'E5\'85\'89\'E5\'90\'89\'E7\'8C\'9B\'E4\'BF\'AE"}\},\par
01138 \{{\cf22 "665"}, {\cf22 "\'E3\'81\'9A\'E3\'81\'A3\'E3\'81\'A8\'E7\'9C\'9F\'E5\'A4\'9C\'E4\'B8\'AD\'E3\'81\'A7\'E3\'81\'84\'E3\'81\'84\'E3\'81\'AE\'E3\'81\'AB\'E3\'80\'82"}\},\par
01139 \{{\cf22 "667"}, {\cf22 "angela"}\},\par
01140 \{{\cf22 "668"}, {\cf22 "\'E3\'83\'93\'E3\'83\'83\'E3\'82\'AF\'E3\'82\'AB\'E3\'83\'A1\'E3\'83\'A9"}\},\par
01141 \{{\cf22 "669"}, {\cf22 "\'E6\'9D\'B1\'E6\'96\'B9LostWord feat.\'E3\'81\'84\'E3\'81\'A8\'E3\'81\'86\'E3\'81\'8B\'E3\'81\'AA\'E3\'81\'93"}\},\par
01142 \{{\cf22 "670"}, {\cf22 "hololive IDOL PROJECT"}\},\par
01143 \{{\cf22 "671"}, {\cf22 "Kanaria"}\},\par
01144 \{{\cf22 "672"}, {\cf22 "Ayase"}\},\par
01145 \{{\cf22 "673"}, {\cf22 "\'E3\'82\'BF\'E3\'82\'B1\'E3\'83\'A2\'E3\'83\'88\'E3\'83\'94\'E3\'82\'A2\'E3\'83\'8ECM"}\},\par
01146 \{{\cf22 "674"}, {\cf22 "P.I.N.A."}\},\par
01147 \{{\cf22 "675"}, {\cf22 "\'E7\'BE\'BD\'E7\'94\'9F\'E3\'81\'BE\'E3\'82\'90\'E3\'81\'94"}\},\par
01148 \{{\cf22 "676"}, {\cf22 "\'E7\'85\'AE\'E3\'83\'AB\'E6\'9E\'9C\'E5\'AE\'9F"}\},\par
01149 \{{\cf22 "677"}, {\cf22 "\'E3\'81\'AF\'E3\'82\'8B\'E3\'81\'BE\'E3\'81\'8D\'E3\'81\'94\'E3\'81\'AF\'E3\'82\'93"}\},\par
01150 \{{\cf22 "678"}, {\cf22 "uma vs. \'E3\'83\'A2\'E3\'83\'AA\'E3\'83\'A2\'E3\'83\'AA\'E3\'81\'82\'E3\'81\'A4\'E3\'81\'97"}\},\par
01151 \{{\cf22 "679"}, {\cf22 "DOT96"}\},\par
01152 \{{\cf22 "680"}, {\cf22 "litmus*"}\},\par
01153 \{{\cf22 "681"}, {\cf22 "\'E3\'81\'8B\'E3\'82\'81\'E3\'82\'8A\'E3\'81\'82 feat. \'E3\'81\'AA\'E3\'81\'AA\'E3\'81\'B2\'E3\'82\'89"}\},\par
01154 \{{\cf22 "682"}, {\cf22 "\'E8\'9C\'82\'E5\'B1\'8B\'E3\'81\'AA\'E3\'81\'AA\'E3\'81\'97"}\},\par
01155 \{{\cf22 "683"}, {\cf22 "\'E5\'A5\'8F\'E9\'9F\'B3"}\},\par
01156 \{{\cf22 "684"}, {\cf22 "\'E4\'BA\'94\'E5\'8D\'81\'E5\'B5\'90 \'E6\'92\'AB\'E5\'AD\'90(CV:\'E8\'8A\'B1\'E4\'BA\'95 \'E7\'BE\'8E\'E6\'98\'A5)"}\},\par
01157 \{{\cf22 "685"}, {\cf22 "LeaF & Optie"}\},\par
01158 \{{\cf22 "686"}, {\cf22 "suzu"}\},\par
01159 \{{\cf22 "687"}, {\cf22 "\'E9\'BB\'92\'E6\'B2\'A2\'E3\'83\'80\'E3\'82\'A4\'E3\'82\'B9\'E3\'82\'B1 VS \'E7\'A9\'B4\'E5\'B1\'B1\'E5\'A4\'A7\'E8\'BC\'94"}\},\par
01160 \{{\cf22 "688"}, {\cf22 "t+pazolite feat. \'E3\'81\'97\'E3\'82\'83\'E3\'81\'BE(CV:\'E7\'A8\'AE\'EF\'A8\'91 \'E6\'95\'A6\'E7\'BE\'8E) & \'E3\'81\'BF\'E3\'82\'8B\'E3\'81\'8F(CV:\'E4\'BC\'8A\'E8\'97\'A4 \'E3\'81\'82\'E3\'81\'99\'E3\'81\'8B)"}\},\par
01161 \{{\cf22 "689"}, {\cf22 "\'E3\'81\'95\'E3\'81\'A4\'E3\'81\'8D \'E3\'81\'8C \'E3\'81\'A6\'E3\'82\'93\'E3\'81\'93\'E3\'82\'82\'E3\'82\'8A feat.96\'E7\'8C\'AB"}\},\par
01162 \{{\cf22 "690"}, {\cf22 "niki feat.noire"}\},\par
01163 \{{\cf22 "691"}, {\cf22 "\'E6\'A2\'85\'E5\'B9\'B2\'E8\'8C\'B6\'E6\'BC\'AC\'E3\'81\'91"}\},\par
01164 \{{\cf22 "692"}, {\cf22 "Kai VS \'E5\'A4\'A7\'E5\'9B\'BD\'E5\'A5\'8F\'E9\'9F\'B3 VS \'E6\'B0\'B4\'E9\'87\'8E\'E5\'81\'A5\'E6\'B2\'BB"}\},\par
01165 \{{\cf22 "693"}, {\cf22 "Umiai"}\},\par
01166 \{{\cf22 "694"}, {\cf22 "\'E3\'81\'97\'E3\'82\'87\'E3\'81\'94/\'E9\'87\'8E\'E6\'9D\'91\'E6\'B8\'89\'E6\'82\'9F"}\},\par
01167 \{{\cf22 "695"}, {\cf22 "Nhato"}\},\par
01168 \{{\cf22 "696"}, {\cf22 "PRASTIK DANCEFLOOR"}\},\par
01169 \{{\cf22 "697"}, {\cf22 "Kobaryo"}\},\par
01170 \{{\cf22 "698"}, {\cf22 "An & Ryunosuke Kudo"}\},\par
01171 \{{\cf22 "699"}, {\cf22 "Limon\'C3\'A8ne (\'E3\'82\'B5\'E3\'83\'8E\'E3\'82\'AB\'E3\'83\'A2\'E3\'83\'A1+\'E6\'9C\'88\'E5\'B3\'B6\'E6\'98\'A5\'E6\'9E\'9C)"}\},\par
01172 \{{\cf22 "700"}, {\cf22 "HiTECH NINJA feat. RANASOL"}\},\par
01173 \{{\cf22 "701"}, {\cf22 "\'E9\'9A\'A3\'E3\'81\'AE\'E5\'BA\'AD\'E3\'81\'AF\'E9\'9D\'92\'E3\'81\'84(\'E5\'BA\'AD\'E5\'B8\'AB+Aoi)"}\},\par
01174 \{{\cf22 "702"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E9\'BD\'8B\'E8\'97\'A4\'E5\'A4\'A7\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E7\'8F\'A0\'E6\'B4\'B2\'E5\'B3\'B6 \'E6\'9C\'89\'E6\'A0\'96(CV\'EF\'BC\'9A\'E9\'95\'B7\'E7\'B8\'84 \'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'82)"}\},\par
01175 \{{\cf22 "703"}, {\cf22 "\'E6\'9B\'B2\'EF\'BC\'9A\'E6\'9C\'AC\'E5\'A4\'9A\'E5\'8F\'8B\'E7\'B4\'80\'EF\'BC\'88Arte Refact\'EF\'BC\'89\'EF\'BC\'8F\'E6\'AD\'8C\'EF\'BC\'9A\'E3\'82\'AA\'E3\'83\'B3\'E3\'82\'B2\'E3\'82\'AD\'E3\'82\'B7\'E3\'83\'A5\'E3\'83\'BC\'E3\'82\'BF\'E3\'83\'BC\'E3\'82\'BA"}\},\par
01176 \{{\cf22 "704"}, {\cf22 "MAYA AKAI"}\},\par
01177 \{{\cf22 "705"}, {\cf22 "\'E8\'88\'9E\'E3\'83\'B6\'E5\'8E\'9F\'E3\'82\'B7\'E3\'83\'B3\'E3\'82\'BB\'E7\'A0\'94\'E7\'A9\'B6\'E4\'BC\'9A"}\},\par
01178 \{{\cf22 "707"}, {\cf22 "Acotto"}\},\par
01179 \{{\cf22 "708"}, {\cf22 "t+pazolite (HARDCORE TANO*C) feat.TANO*C ALL STARS"}\},\par
01180 \{{\cf22 "709"}, {\cf22 "YOASOBI"}\},\par
01181 \{{\cf22 "710"}, {\cf22 "Ado"}\},\par
01182 \{{\cf22 "711"}, {\cf22 "\'E3\'82\'AF\'E3\'83\'AC\'E3\'82\'B7\'E3\'82\'A7\'E3\'83\'B3\'E3\'83\'89\'E3\'83\'96\'E3\'83\'AB\'E3\'83\'BC [\'E6\'9C\'80\'E4\'B8\'8A\'E9\'9D\'99\'E9\'A6\'99 (CV.\'E7\'94\'B0\'E6\'89\'80\'E3\'81\'82\'E3\'81\'9A\'E3\'81\'95)\'E3\'80\'81\'E5\'8C\'97\'E4\'B8\'8A\'E9\'BA\'97\'E8\'8A\'B1 (CV.\'E5\'B9\'B3\'E5\'B1\'B1\'E7\'AC\'91\'E7\'BE\'8E)\'E3\'80\'81\'E5\'8C\'97\'E6\'B2\'A2\'E5\'BF\'97\'E4\'BF\'9D (CV.\'E9\'9B\'A8\'E5\'AE\'AE \'E5\'A4\'A9)\'E3\'80\'81\'E9\'87\'8E\'E3\'80\'85\'E5\'8E\'9F \'E8\'8C\'9C (CV.\'E5\'B0\'8F\'E7\'AC\'A0\'E5\'8E\'9F\'E6\'97\'A9\'E7\'B4\'80)\'E3\'80\'81\'E7\'AE\'B1\'E5\'B4\'8E\'E6\'98\'9F\'E6\'A2\'A8\'E8\'8A\'B1 (CV.\'E9\'BA\'BB\'E5\'80\'89\'E3\'82\'82\'E3\'82\'82)]"}\},\par
01183 \{{\cf22 "712"}, {\cf22 "DRAMATIC STARS [\'E5\'A4\'A9\'E9\'81\'93 \'E8\'BC\'9D (CV.\'E4\'BB\'B2\'E6\'9D\'91\'E5\'AE\'97\'E6\'82\'9F), \'E6\'A1\'9C\'E5\'BA\'AD \'E8\'96\'AB (CV.\'E5\'86\'85\'E7\'94\'B0\'E9\'9B\'84\'E9\'A6\'AC), \'E6\'9F\'8F\'E6\'9C\'A8 \'E7\'BF\'BC (CV.\'E5\'85\'AB\'E4\'BB\'A3 \'E6\'8B\'93)]"}\},\par
01184 \{{\cf22 "714"}, {\cf22 "COOL&CREATE \'C3\'97 \'E5\'AE\'9D\'E9\'90\'98\'E3\'83\'9E\'E3\'83\'AA\'E3\'83\'B3"}\},\par
01185 \{{\cf22 "715"}, {\cf22 "Sta feat. b"}\},\par
01186 \{{\cf22 "717"}, {\cf22 "403"}\},\par
01187 \{{\cf22 "718"}, {\cf22 "s-don as Iriss-Frantzz"}\},\par
01188 \{{\cf22 "719"}, {\cf22 "Dachs"}\},\par
01189 \{{\cf22 "720"}, {\cf22 "\'E3\'82\'AA\'E3\'83\'BC\'E3\'82\'A4\'E3\'82\'B7\'E3\'83\'9E\'E3\'82\'B5\'E3\'83\'A8\'E3\'82\'B7\'C3\'97\'E5\'8A\'A0\'E8\'97\'A4\'E7\'B4\'94\'E4\'B8\'80"}\},\par
01190 \{{\cf22 "721"}, {\cf22 "\'E3\'83\'94\'E3\'83\'8E\'E3\'82\'AD\'E3\'82\'AA\'E3\'83\'94\'E3\'83\'BC / \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF / \'E3\'83\'AF\'E3\'83\'B3\'E3\'83\'80\'E3\'83\'BC\'E3\'83\'A9\'E3\'83\'B3\'E3\'82\'BA\'C3\'97\'E3\'82\'B7\'E3\'83\'A7\'E3\'82\'A6\'E3\'82\'BF\'E3\'82\'A4\'E3\'83\'A0\'E3\'80\'8C\'E3\'83\'97\'E3\'83\'AD\'E3\'82\'B8\'E3\'82\'A7\'E3\'82\'AF\'E3\'83\'88\'E3\'82\'BB\'E3\'82\'AB\'E3\'82\'A4 \'E3\'82\'AB\'E3\'83\'A9\'E3\'83\'95\'E3\'83\'AB\'E3\'82\'B9\'E3\'83\'86\'E3\'83\'BC\'E3\'82\'B8\'EF\'BC\'81 feat. \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF\'E3\'80\'8D"}\},\par
01191 \{{\cf22 "724"}, {\cf22 "SYNC.ART'S feat. 3L"}\},\par
01192 \{{\cf22 "725"}, {\cf22 "\'E3\'82\'AD\'E3\'83\'8E\'E3\'82\'B7\'E3\'82\'BF"}\},\par
01193 \{{\cf22 "727"}, {\cf22 "\'E3\'83\'84\'E3\'83\'A6"}\},\par
01194 \{{\cf22 "728"}, {\cf22 "Rain Drops"}\},\par
01195 \{{\cf22 "729"}, {\cf22 "\'E3\'81\'8B\'E3\'81\'84\'E3\'82\'8A\'E3\'81\'8D\'E3\'83\'99\'E3\'82\'A2?MARETU feat.\'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF"}\},\par
01196 \{{\cf22 "730"}, {\cf22 "\'E3\'82\'AD\'E3\'82\'BF\'E3\'83\'8B\'E3\'82\'BF\'E3\'83\'84\'E3\'83\'A4"}\},\par
01197 \{{\cf22 "731"}, {\cf22 "Chinozo"}\},\par
01198 \{{\cf22 "732"}, {\cf22 "john"}\},\par
01199 \{{\cf22 "733"}, {\cf22 "\'E7\'A8\'B2\'E8\'91\'89\'E6\'9B\'87"}\},\par
01200 \{{\cf22 "734"}, {\cf22 "\'E9\'B9\'BF\'E4\'B9\'83\'E3\'81\'A8\'E5\'AE\'87\'E5\'B4\'8E\'E3\'81\'A1\'E3\'82\'83\'E3\'82\'93"}\},\par
01201 \{{\cf22 "736"}, {\cf22 "Yunomi & nicamoq"}\},\par
01202 \{{\cf22 "737"}, {\cf22 "\'E3\'81\'98\'E3\'83\'BC\'E3\'81\'96\'E3\'81\'99\'EF\'BC\'88\'E3\'83\'AF\'E3\'83\'B3\'E3\'83\'80\'E3\'83\'95\'E3\'83\'AB\'E2\'98\'86\'E3\'82\'AA\'E3\'83\'9D\'E3\'83\'81\'E3\'83\'A5\'E3\'83\'8B\'E3\'83\'86\'E3\'82\'A3\'EF\'BC\'81\'EF\'BC\'89"}\},\par
01203 \{{\cf22 "739"}, {\cf22 "Unlucky Morpheus"}\},\par
01204 \{{\cf22 "740"}, {\cf22 "\'E3\'81\'99\'E3\'82\'8A\'E3\'81\'83\'C3\'97\'E7\'9B\'B8\'E6\'B2\'A2"}\},\par
01205 \{{\cf22 "742"}, {\cf22 "\'E9\'A0\'88\'E7\'94\'B0\'E6\'99\'AF\'E5\'87\'AA"}\},\par
01206 \{{\cf22 "743"}, {\cf22 "ARuFa"}\},\par
01207 \{{\cf22 "744"}, {\cf22 "Eve TV\'E3\'82\'A2\'E3\'83\'8B\'E3\'83\'A1\'E3\'80\'8C\'E5\'91\'AA\'E8\'A1\'93\'E5\'BB\'BB\'E6\'88\'A6\'E3\'80\'8D\'E7\'AC\'AC1\'E3\'82\'AF\'E3\'83\'BC\'E3\'83\'AB\'E3\'82\'AA\'E3\'83\'BC\'E3\'83\'97\'E3\'83\'8B\'E3\'83\'B3\'E3\'82\'B0\'E3\'83\'86\'E3\'83\'BC\'E3\'83\'9E"}\},\par
01208 \{{\cf22 "745"}, {\cf22 "Mitchie M / \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF / MORE MORE JUMP\'EF\'BC\'81\'E3\'80\'8C\'E3\'83\'97\'E3\'83\'AD\'E3\'82\'B8\'E3\'82\'A7\'E3\'82\'AF\'E3\'83\'88\'E3\'82\'BB\'E3\'82\'AB\'E3\'82\'A4 \'E3\'82\'AB\'E3\'83\'A9\'E3\'83\'95\'E3\'83\'AB\'E3\'82\'B9\'E3\'83\'86\'E3\'83\'BC\'E3\'82\'B8\'EF\'BC\'81 feat. \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF\'E3\'80\'8D"}\},\par
01209 \{{\cf22 "746"}, {\cf22 "DECO*27 / \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF / Leo/need\'E3\'80\'8C\'E3\'83\'97\'E3\'83\'AD\'E3\'82\'B8\'E3\'82\'A7\'E3\'82\'AF\'E3\'83\'88\'E3\'82\'BB\'E3\'82\'AB\'E3\'82\'A4 \'E3\'82\'AB\'E3\'83\'A9\'E3\'83\'95\'E3\'83\'AB\'E3\'82\'B9\'E3\'83\'86\'E3\'83\'BC\'E3\'82\'B8\'EF\'BC\'81 feat. \'E5\'88\'9D\'E9\'9F\'B3\'E3\'83\'9F\'E3\'82\'AF\'E3\'80\'8D"}\},\par
01210 \{{\cf22 "747"}, {\cf22 "\'E5\'B2\'B8\'E7\'94\'B0\'E6\'95\'99\'E5\'9B\'A3&THE\'E6\'98\'8E\'E6\'98\'9F\'E3\'83\'AD\'E3\'82\'B1\'E3\'83\'83\'E3\'83\'84\'C3\'97\'E8\'8D\'89\'E9\'87\'8E\'E8\'8F\'AF\'E4\'BD\'99\'E5\'AD\'90\'E3\'80\'8C\'E6\'9D\'B1\'E6\'96\'B9\'E3\'83\'80\'E3\'83\'B3\'E3\'83\'9E\'E3\'82\'AF\'E3\'82\'AB\'E3\'82\'B0\'E3\'83\'A9\'E3\'80\'8D"}\},\par
01211 \{{\cf22 "748"}, {\cf22 "COOL&CREATE feat.\'E3\'83\'93\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'BE\'E3\'82\'8A\'E3\'81\'8A\'E3\'81\'A8\'E3\'81\'BE\'E3\'82\'8D\'E3\'82\'93\'E3\'80\'8C\'E6\'9D\'B1\'E6\'96\'B9\'E3\'83\'80\'E3\'83\'B3\'E3\'83\'9E\'E3\'82\'AF\'E3\'82\'AB\'E3\'82\'B0\'E3\'83\'A9\'E3\'80\'8D"}\},\par
01212 \{{\cf22 "749"}, {\cf22 "BlackYooh vs. siromaru"}\},\par
01213 \{{\cf22 "750"}, {\cf22 "\'E7\'83\'8F\'E5\'B1\'8B\'E8\'8C\'B6\'E6\'88\'BF feat. \'E5\'88\'A9\'E9\'A6\'99"}\},\par
01214 \{{\cf22 "751"}, {\cf22 "\'E3\'83\'91\'E3\'82\'BD\'E3\'82\'B3\'E3\'83\'B3\'E9\'9F\'B3\'E6\'A5\'BD\'E3\'82\'AF\'E3\'83\'A9\'E3\'83\'96 feat.\'E3\'81\'B7\'E3\'81\'AB\'E3\'81\'B7\'E3\'81\'AB\'E9\'9B\'BB\'E6\'A9\'9F"}\},\par
01215 \{{\cf22 "752"}, {\cf22 "\'E7\'BF\'A1\'E4\'B9\'83\'E3\'82\'A4\'E3\'82\'B9\'E3\'82\'AB"}\},\par
01216 \{{\cf22 "753"}, {\cf22 "Noah"}\},\par
01217 \{{\cf22 "754"}, {\cf22 "rintaro soma"}\},\par
01218 \{{\cf22 "768"}, {\cf22 "\'E3\'82\'B9\'E3\'83\'9A\'E3\'82\'B7\'E3\'83\'A3\'E3\'83\'AB\'E3\'82\'A6\'E3\'82\'A3\'E3\'83\'BC\'E3\'82\'AF \'EF\'BC\'88CV.\'E5\'92\'8C\'E6\'B0\'A3\'E3\'81\'82\'E3\'81\'9A\'E6\'9C\'AA\'EF\'BC\'89\'E3\'80\'81\'E3\'82\'B5\'E3\'82\'A4\'E3\'83\'AC\'E3\'83\'B3\'E3\'82\'B9\'E3\'82\'B9\'E3\'82\'BA\'E3\'82\'AB \'EF\'BC\'88CV.\'E9\'AB\'98\'E9\'87\'8E\'E9\'BA\'BB\'E9\'87\'8C\'E4\'BD\'B3\'EF\'BC\'89\'E3\'80\'81\'E3\'83\'88\'E3\'82\'A6\'E3\'82\'AB\'E3\'82\'A4\'E3\'83\'86\'E3\'82\'A4\'E3\'82\'AA\'E3\'83\'BC \'EF\'BC\'88CV.Machico\'EF\'BC\'89"}\},\par
01219 \{{\cf22 "769"}, {\cf22 "Photon Maiden"}\},\par
01220 \{{\cf22 "770"}, {\cf22 "Lyrical Lily"}\},\par
01221 \{{\cf22 "771"}, {\cf22 "Tatsh x NAOKI"}\},\par
01222 \{{\cf22 "773"}, {\cf22 "Sampling Masters AYA"}\},\par
01223 \{{\cf22 "774"}, {\cf22 "NAOKI feat.\'E5\'B0\'8F\'E5\'9D\'82\'E3\'82\'8A\'E3\'82\'86"}\},\par
01224 \{{\cf22 "775"}, {\cf22 "NAOKI underground"}\},\par
01225 \{{\cf22 "778"}, {\cf22 "\'E6\'9F\'8A\'E3\'83\'9E\'E3\'82\'B0\'E3\'83\'8D\'E3\'82\'BF\'E3\'82\'A4\'E3\'83\'88"}\},\par
01226 \{{\cf22 "783"}, {\cf22 "\'E5\'92\'8C\'E7\'94\'B0\'E3\'82\'A2\'E3\'82\'AD\'E5\'AD\'90"}\},\par
01227 \{{\cf22 "784"}, {\cf22 "Mastermind(xi+nora2r)"}\},\par
01228 \{{\cf22 "785"}, {\cf22 "x0o0x_"}\},\par
01229 \{{\cf22 "787"}, {\cf22 "Bitplane feat. \'E8\'91\'89\'E6\'9C\'88\'E3\'82\'86\'E3\'82\'89"}\},\par
01230 \{{\cf22 "789"}, {\cf22 "linear ring"}\},\par
01231 \{{\cf22 "790"}, {\cf22 "\'E3\'81\'A1\'E3\'81\'84\'E3\'81\'9F\'E3\'81\'AA feat.flower"}\},\par
01232 \{{\cf22 "791"}, {\cf22 "\'E4\'BD\'9C\'E8\'A9\'9E\'EF\'BC\'9A\'E3\'82\'BB\'E3\'82\'AC\'E7\'A4\'BE\'E5\'93\'A1\'E3\'80\'81\'E4\'BD\'9C\'E6\'9B\'B2\'EF\'BC\'9A\'E8\'8B\'A5\'E8\'8D\'89\'E6\'81\'B5\'E3\'80\'81\'E6\'AD\'8C\'EF\'BC\'9A135"}\},\par
01233 \};\par
01234         {\cf17 public} {\cf17 static} Dictionary<string, string> addVersionDic = {\cf17 new} Dictionary<string, string>\{\par
01235 \{{\cf22 "0"}, {\cf22 "maimai"}\},\par
01236 \{{\cf22 "1"}, {\cf22 "maimaiPLUS"}\},\par
01237 \{{\cf22 "2"}, {\cf22 "GreeN"}\},\par
01238 \{{\cf22 "3"}, {\cf22 "GreeNPLUS"}\},\par
01239 \{{\cf22 "4"}, {\cf22 "ORANGE"}\},\par
01240 \{{\cf22 "5"}, {\cf22 "ORANGEPLUS"}\},\par
01241 \{{\cf22 "6"}, {\cf22 "PiNK"}\},\par
01242 \{{\cf22 "7"}, {\cf22 "PiNKPLUS"}\},\par
01243 \{{\cf22 "8"}, {\cf22 "MURASAKi"}\},\par
01244 \{{\cf22 "9"}, {\cf22 "MURASAKiPLUS"}\},\par
01245 \{{\cf22 "10"}, {\cf22 "MiLK"}\},\par
01246 \{{\cf22 "11"}, {\cf22 "MiLKPLUS"}\},\par
01247 \{{\cf22 "12"}, {\cf22 "FiNALE"}\},\par
01248 \{{\cf22 "13"}, {\cf22 "maimaDX"}\},\par
01249 \{{\cf22 "14"}, {\cf22 "maimaDXPLUS"}\},\par
01250 \{{\cf22 "15"}, {\cf22 "Splash"}\},\par
01251 \{{\cf22 "16"}, {\cf22 "SplashPLUS"}\},\par
01252 \{{\cf22 "17"}, {\cf22 "UNiVERSE"}\},\par
01253 \{{\cf22 "18"}, {\cf22 "UNiVERSEPLUS"}\},\par
01254 \};\par
01255         {\cf17 public} {\cf17 static} Dictionary<string, string> eventNameDic = {\cf17 new} Dictionary<string, string>\{\par
01256 \{{\cf22 "1"}, {\cf22 "\'E7\'84\'A1\'E6\'9C\'9F\'E9\'99\'90\'E5\'B8\'B8\'E6\'99\'82\'E8\'A7\'A3\'E6\'94\'BE"}\},\par
01257 \{{\cf22 "21091621"}, {\cf22 "210916_02_1"}\},\par
01258 \{{\cf22 "21111225"}, {\cf22 "211112_02_5"}\},\par
01259 \{{\cf22 "22011422"}, {\cf22 "220114_02_2"}\},\par
01260 \{{\cf22 "22030321"}, {\cf22 "220303_02_1"}\},\par
01261 \{{\cf22 "22032421"}, {\cf22 "220324_02_1"}\},\par
01262 \{{\cf22 "22040121"}, {\cf22 "220401_02_1"}\},\par
01263 \{{\cf22 "22040821"}, {\cf22 "220408_02_1"}\},\par
01264 \{{\cf22 "22041521"}, {\cf22 "220415_02_1"}\},\par
01265 \{{\cf22 "22041522"}, {\cf22 "220415_02_2"}\},\par
01266 \{{\cf22 "22042821"}, {\cf22 "220428_02_1"}\},\par
01267 \{{\cf22 "22042822"}, {\cf22 "220428_02_2"}\},\par
01268 \};\par
01269         {\cf17 public} {\cf17 static} Dictionary<string, string> subEventNameDic = {\cf17 new} Dictionary<string, string>\{\par
01270 \{{\cf22 "0"}, {\cf22 "\'E8\'A7\'A3\'E6\'94\'BE\'E3\'81\'AA\'E3\'81\'97"}\},\par
01271 \{{\cf22 "1"}, {\cf22 "\'E7\'84\'A1\'E6\'9C\'9F\'E9\'99\'90\'E5\'B8\'B8\'E6\'99\'82\'E8\'A7\'A3\'E6\'94\'BE"}\},\par
01272 \{{\cf22 "22032421"}, {\cf22 "220324_02_1"}\},\par
01273 \};\par
01274         {\cf17 public} {\cf17 static} Dictionary<string, string> notesDesignerDic = {\cf17 new} Dictionary<string, string>\{\par
01275 \{{\cf22 "0"}, {\cf22 ""}\},\par
01276 \{{\cf22 "1"}, {\cf22 "mai-Star"}\},\par
01277 \{{\cf22 "2"}, {\cf22 "\'E3\'81\'AF\'E3\'81\'A3\'E3\'81\'B4\'E3\'83\'BC"}\},\par
01278 \{{\cf22 "3"}, {\cf22 "\'E6\'9F\'90S\'E6\'B0\'8F"}\},\par
01279 \{{\cf22 "4"}, {\cf22 "Jack"}\},\par
01280 \{{\cf22 "5"}, {\cf22 "Techno Kitchen"}\},\par
01281 \{{\cf22 "6"}, {\cf22 "\'E3\'83\'AD\'E3\'82\'B7\'E3\'82\'A7@\'E3\'83\'9A\'E3\'83\'B3\'E3\'82\'AE\'E3\'83\'B3"}\},\par
01282 \{{\cf22 "7"}, {\cf22 "rioN"}\},\par
01283 \{{\cf22 "8"}, {\cf22 "Revo@LC"}\},\par
01284 \{{\cf22 "9"}, {\cf22 "\'E3\'81\'B4\'E3\'81\'A1\'E3\'83\'8D\'E3\'82\'B3"}\},\par
01285 \{{\cf22 "10"}, {\cf22 "\'E3\'83\'81\'E3\'83\'A3\'E3\'83\'B3@DP\'E7\'9A\'86\'E4\'BC\'9D"}\},\par
01286 \{{\cf22 "11"}, {\cf22 "\'E8\'AD\'9C\'E9\'9D\'A2-100\'E5\'8F\'B7"}\},\par
01287 \{{\cf22 "12"}, {\cf22 "\'E3\'83\'8B\'E3\'83\'A3\'E3\'82\'A4\'E3\'83\'B3"}\},\par
01288 \{{\cf22 "13"}, {\cf22 "maimai TEAM"}\},\par
01289 \{{\cf22 "14"}, {\cf22 "\'E5\'90\'88\'E4\'BD\'9C\'E3\'81\'A0\'E3\'82\'88"}\},\par
01290 \{{\cf22 "15"}, {\cf22 "\'E3\'81\'97\'E3\'82\'8D\'E3\'81\'84\'E3\'82\'8D"}\},\par
01291 \{{\cf22 "16"}, {\cf22 "\'E7\'95\'B3\'E8\'BF\'94\'E3\'81\'97"}\},\par
01292 \{{\cf22 "17"}, {\cf22 "\'E5\'A6\'82\'E6\'9C\'88 \'E3\'82\'86\'E3\'81\'8B\'E3\'82\'8A"}\},\par
01293 \{{\cf22 "19"}, {\cf22 "\'E5\'8E\'9F\'E7\'94\'B0\'E3\'81\'B2\'E3\'82\'8D\'E3\'82\'86\'E3\'81\'8D"}\},\par
01294 \{{\cf22 "20"}, {\cf22 "Moon Strix"}\},\par
01295 \{{\cf22 "21"}, {\cf22 "\'E7\'8E\'89\'E5\'AD\'90\'E8\'B1\'86\'E8\'85\'90"}\},\par
01296 \{{\cf22 "22"}, {\cf22 "\'E3\'82\'82\'E3\'81\'AE\'E3\'81\'8F\'E3\'82\'8D\'E3\'81\'A3\'E3\'81\'8F"}\},\par
01297 \{{\cf22 "23"}, {\cf22 "LabiLabi"}\},\par
01298 \{{\cf22 "24"}, {\cf22 "\'E5\'B0\'8F\'E9\'B3\'A5\'E9\'81\'8A\'E3\'81\'95\'E3\'82\'93"}\},\par
01299 \{{\cf22 "25"}, {\cf22 "\'E3\'83\'9F\'E3\'82\'B9\'E3\'83\'88\'E3\'83\'AB\'E3\'83\'86\'E3\'82\'A3\'E3\'83\'B3"}\},\par
01300 \{{\cf22 "26"}, {\cf22 "\'E3\'81\'99\'E3\'81\'8D\'E3\'82\'84\'E3\'81\'8D\'E5\'A5\'89\'E8\'A1\'8C"}\},\par
01301 \{{\cf22 "27"}, {\cf22 "\'E3\'82\'B5\'E3\'83\'95\'E3\'82\'A1\'E5\'A4\'AA"}\},\par
01302 \{{\cf22 "29"}, {\cf22 "\'E7\'B7\'91\'E9\'A2\'A8 \'E7\'8A\'AC\'E4\'B8\'89\'E9\'83\'8E"}\},\par
01303 \{{\cf22 "31"}, {\cf22 "\'E3\'81\'98\'E3\'82\'83\'E3\'81\'93\'E3\'83\'AC\'E3\'83\'A2\'E3\'83\'B3"}\},\par
01304 \{{\cf22 "32"}, {\cf22 "\'E8\'8F\'AF\'E7\'81\'AB\'E8\'81\'B7\'E4\'BA\'BA"}\},\par
01305 \{{\cf22 "34"}, {\cf22 "\'E8\'AD\'9C\'E9\'9D\'A2\'E3\'83\'9C\'E3\'83\'BC\'E3\'82\'A4\'E3\'82\'BA\'E3\'81\'8B\'E3\'82\'89\'E3\'81\'AE\'E6\'8C\'91\'E6\'88\'A6\'E7\'8A\'B6"}\},\par
01306 \{{\cf22 "35"}, {\cf22 "\'93H\'94ack"}\},\par
01307 \{{\cf22 "37"}, {\cf22 "Garakuta Scramble!"}\},\par
01308 \{{\cf22 "38"}, {\cf22 "\'93H\'94ack underground"}\},\par
01309 \{{\cf22 "39"}, {\cf22 "\'E2\'80\'9CCarpe diem\'E2\'80\'9D \'EF\'BC\'8A HAN?BI"}\},\par
01310 \{{\cf22 "40"}, {\cf22 "\'E5\'B0\'8F\'E9\'B3\'A5\'E9\'81\'8A\'E3\'81\'95\'E3\'82\'93 fused with Phoenix"}\},\par
01311 \{{\cf22 "41"}, {\cf22 "safaTAmago"}\},\par
01312 \{{\cf22 "42"}, {\cf22 "JAQ"}\},\par
01313 \{{\cf22 "43"}, {\cf22 "Phoenix"}\},\par
01314 \{{\cf22 "44"}, {\cf22 "-ZONE- SaFaRi"}\},\par
01315 \{{\cf22 "45"}, {\cf22 "PANDORA BOXXX"}\},\par
01316 \{{\cf22 "46"}, {\cf22 "PANDORA PARADOXXX"}\},\par
01317 \{{\cf22 "47"}, {\cf22 "\'E3\'82\'B7\'E3\'83\'81\'E3\'83\'9F\'E3\'83\'98\'E3\'83\'AB\'E3\'83\'84"}\},\par
01318 \{{\cf22 "48"}, {\cf22 "\'E3\'81\'86\'E3\'81\'95\'E3\'81\'8E\'E3\'83\'A9\'E3\'83\'B3\'E3\'83\'89\'E3\'83\'AA\'E3\'83\'BC"}\},\par
01319 \{{\cf22 "49"}, {\cf22 "7.3Hz\'EF\'BC\'8BJack"}\},\par
01320 \{{\cf22 "50"}, {\cf22 "\'E8\'AD\'9C\'E9\'9D\'A2-100\'E5\'8F\'B7\'E3\'81\'A8\'E3\'81\'AF\'E3\'81\'A3\'E3\'81\'B4\'E3\'83\'BC"}\},\par
01321 \{{\cf22 "51"}, {\cf22 "\'E7\'BE\'A4\'E9\'9D\'92\'E3\'83\'AA\'E3\'82\'B3\'E3\'83\'AA\'E3\'82\'B9"}\},\par
01322 \{{\cf22 "52"}, {\cf22 "jacK on Phoenix"}\},\par
01323 \{{\cf22 "53"}, {\cf22 "KTM"}\},\par
01324 \{{\cf22 "54"}, {\cf22 "\'E3\'82\'B7\'E3\'83\'81\'E3\'83\'9F\'E3\'83\'83\'E3\'83\'94\'E3\'83\'BC"}\},\par
01325 \{{\cf22 "55"}, {\cf22 "Safata.Hz"}\},\par
01326 \{{\cf22 "56"}, {\cf22 "\'E9\'9A\'85\'E7\'94\'B0\'E5\'B7\'9D\'E6\'98\'9F\'E4\'BA\'BA"}\},\par
01327 \{{\cf22 "57"}, {\cf22 "\'E3\'82\'B2\'E3\'82\'AD*\'E3\'83\'81\'E3\'83\'A5\'E3\'82\'A6\'E3\'83\'9E\'E3\'82\'A4 Fumen Team"}\},\par
01328 \{{\cf22 "58"}, {\cf22 "Sukiyaki vs Happy"}\},\par
01329 \{{\cf22 "59"}, {\cf22 "7.3GHz vs Phoenix"}\},\par
01330 \{{\cf22 "60"}, {\cf22 "?\'E3\'82\'88?\'E3\'82\'87\'EF\'BC\'8F\'E2\'88\'AA\'E3\'83\'BD\'E2\'80\'9D\'E2\'94\'A0  (\'E5\'8D\'81,3?\'E4\'BA\'86??"}\},\par
01331 \{{\cf22 "61"}, {\cf22 "\'E8\'AD\'9C\'E9\'9D\'A2\'E7\'94\'B7\'E5\'AD\'90\'E5\'AD\'A6\'E9\'99\'A2 \'E4\'B8\'AD\'E5\'A0\'85 \'E5\'B0\'8F\'E9\'B3\'A5 \'E9\'81\'8A"}\},\par
01332 \{{\cf22 "62"}, {\cf22 "\'E4\'B8\'83\'E5\'91\'B3\'E6\'98\'9F\'E4\'BA\'BA"}\},\par
01333 \{{\cf22 "63"}, {\cf22 "\'E3\'82\'A2\'E3\'83\'9E\'E3\'83\'AA\'E3\'83\'AA\'E3\'82\'B9"}\},\par
01334 \{{\cf22 "64"}, {\cf22 "\'E3\'81\'97\'E3\'81\'A1\'E3\'81\'BF\'E3\'82\'8A\'E3\'81\'93\'E3\'82\'8A\'E3\'81\'99"}\},\par
01335 \{{\cf22 "65"}, {\cf22 "Anomaly Labyrinth"}\},\par
01336 \{{\cf22 "66"}, {\cf22 "\'E3\'82\'82\'E3\'81\'AE\'E3\'81\'8F\'E3\'83\'AD\'E3\'82\'B7\'E3\'82\'A7"}\},\par
01337 \{{\cf22 "67"}, {\cf22 "7.3GHz"}\},\par
01338 \{{\cf22 "68"}, {\cf22 "\'E3\'82\'B5\'E3\'83\'95\'E3\'82\'A1\'E5\'A4\'AA vs -ZONE- SaFaRi"}\},\par
01339 \{{\cf22 "69"}, {\cf22 "The ALiEN"}\},\par
01340 \{{\cf22 "70"}, {\cf22 "\'E3\'81\'95\'E3\'81\'B5\'E3\'81\'81\'E3\'81\'9F"}\},\par
01341 \{{\cf22 "71"}, {\cf22 "\'E3\'82\'A2\'E3\'83\'9F\'E3\'83\'8E\'E3\'83\'8F\'E3\'83\'90\'E3\'82\'AD\'E3\'83\'AA"}\},\par
01342 \{{\cf22 "72"}, {\cf22 "Redarrow"}\},\par
01343 \{{\cf22 "73"}, {\cf22 "\'E3\'81\'BF\'E3\'81\'9D\'E3\'81\'8B\'E3\'81\'A4\'E4\'BE\'8D"}\},\par
01344 \{{\cf22 "74"}, {\cf22 "\'E3\'83\'AD\'E3\'82\'B7\'E3\'82\'A2\'E3\'83\'B3\'E3\'83\'96\'E3\'83\'A9\'E3\'83\'83\'E3\'82\'AF"}\},\par
01345 \{{\cf22 "75"}, {\cf22 "\'E9\'9A\'85\'E7\'94\'B0\'E5\'B7\'9D\'E8\'8F\'AF\'E7\'81\'AB\'E5\'A4\'A7\'E4\'BC\'9A"}\},\par
01346 \{{\cf22 "76"}, {\cf22 "\'E3\'81\'AF\'E3\'81\'A3\'E3\'81\'B4\'E3\'83\'BC respects for \'E6\'9F\'90S\'E6\'B0\'8F"}\},\par
01347 \{{\cf22 "77"}, {\cf22 "7.3\'E9\'80\'A3\'E7\'99\'BA\'E8\'8F\'AF\'E7\'81\'AB"}\},\par
01348 \{{\cf22 "78"}, {\cf22 "-ZONE-Phoenix"}\},\par
01349 \{{\cf22 "79"}, {\cf22 "\'E5\'B0\'8F\'E9\'B3\'A5\'E9\'81\'8A\'E3\'81\'95\'E3\'82\'93 vs \'E8\'8F\'AF\'E7\'81\'AB\'E8\'81\'B7\'E4\'BA\'BA"}\},\par
01350 \{{\cf22 "80"}, {\cf22 "SHICHIMI\'E2\'98\'86CAT"}\},\par
01351 \{{\cf22 "81"}, {\cf22 "\'E3\'81\'82\'E3\'81\'BE\'E3\'81\'8F\'E3\'81\'A1\'E3\'82\'B8\'E3\'83\'B3\'E3\'82\'B8\'E3\'83\'A3\'E3\'83\'BC"}\},\par
01352 \{{\cf22 "82"}, {\cf22 "\'E3\'81\'82\'E3\'81\'BE\'E3\'81\'8F\'E3\'81\'A1\'E3\'82\'B8\'E3\'83\'B3\'E3\'82\'B8\'E3\'83\'A3\'E3\'83\'BC\'EF\'BC\'A0\'E3\'82\'84\'E3\'81\'B9\'E3\'83\'BC\'E6\'96\'B0\'E4\'BA\'BA"}\},\par
01353 \{{\cf22 "83"}, {\cf22 "The ALiEN vs. Phoenix"}\},\par
01354 \{{\cf22 "84"}, {\cf22 "\'E7\'BF\'A0\'E6\'A5\'BC\'E5\'B1\'8B"}\},\par
01355 \{{\cf22 "85"}, {\cf22 "Jack & Licorice Gunjyo"}\},\par
01356 \{{\cf22 "86"}, {\cf22 "7.3GHz -F?r The Legends-"}\},\par
01357 \{{\cf22 "87"}, {\cf22 "\'E4\'B8\'80\'E3\'83\'8E\'E7\'80\'AC \'E3\'83\'AA\'E3\'82\'BA"}\},\par
01358 \{{\cf22 "88"}, {\cf22 "\'E8\'B6\'85\'E4\'B8\'83\'E5\'91\'B3\'E6\'98\'9F\'E4\'BA\'BA"}\},\par
01359 \{{\cf22 "89"}, {\cf22 "KOP3rd with \'E7\'BF\'A1\'E7\'BF\'A0\'E3\'83\'9E\'E3\'83\'8A"}\},\par
01360 \{{\cf22 "90"}, {\cf22 "\'E5\'B0\'8F\'E9\'B3\'A5\'E9\'81\'8A\'E3\'83\'81\'E3\'83\'9F"}\},\par
01361 \{{\cf22 "91"}, {\cf22 "\'E4\'BD\'9C\'E8\'AD\'9C\'EF\'BC\'9A\'E7\'BF\'A0\'E6\'A5\'BC\'E5\'B1\'8B"}\},\par
01362 \{{\cf22 "92"}, {\cf22 "Hz-R.Arrow"}\},\par
01363 \{{\cf22 "93"}, {\cf22 "\'E3\'83\'81\'E3\'82\'A7\'E3\'82\'B7\'E3\'83\'A3\'E7\'8C\'AB\'E3\'81\'A8\'E3\'83\'8F\'E3\'83\'BC\'E3\'83\'88\'E3\'81\'AE\'E3\'82\'B8\'E3\'83\'A3\'E3\'83\'83\'E3\'82\'AF"}\},\par
01364 \{{\cf22 "999"}, {\cf22 "-"}\},\par
01365 \};\par
01366 \par
01367 \par
01371         {\cf17 private} Dictionary<string, string> information;\par
01372 \par
01376         {\cf17 private} XmlDocument takeInValue;\par
01377 \par
01381         {\cf17 public} TrackInformation()\par
01382         \{\par
01383             this.takeInValue = {\cf17 new} XmlDocument();\par
01384             this.information = {\cf17 new} Dictionary<string, string>();\par
01385             this.FormatInformation();\par
01386             this.Update();\par
01387         \}\par
01388 \par
01389         {\cf20 // /// <summary>}\par
01390         {\cf20 // /// Construct track information from given location}\par
01391         {\cf20 // /// </summary>}\par
01392         {\cf20 // /// <param name="location">Place to load</param>}\par
01393         {\cf20 // public TrackInformation(string location)}\par
01394         {\cf20 // \{}\par
01395         {\cf20 //     \{}\par
01396         {\cf20 //         this.takeInValue = new XmlDocument();}\par
01397         {\cf20 //         if (File.Exists(location + "Music.xml"))}\par
01398         {\cf20 //         \{}\par
01399         {\cf20 //             this.takeInValue.Load(location + "Music.xml");}\par
01400         {\cf20 //             this.information=new Dictionary<string, string>();}\par
01401         {\cf20 //             this.FormatInformation();}\par
01402         {\cf20 //             this.Update();}\par
01403         {\cf20 //         \}}\par
01404         {\cf20 //         else}\par
01405         {\cf20 //         \{}\par
01406         {\cf20 //             this.information=new Dictionary<string, string>();}\par
01407         {\cf20 //             this.FormatInformation();}\par
01408         {\cf20 //         \}}\par
01409 \par
01410         {\cf20 //     \}}\par
01411         {\cf20 // \}}\par
01412 \par
01416         {\cf17 public} {\cf18 void} FormatInformation()\par
01417         \{\par
01418             this.information = {\cf17 new} Dictionary<string, string>\par
01419                     \{\par
01420                         \{ {\cf22 "Name"}, {\cf22 ""} \},\par
01421                         \{ {\cf22 "Sort Name"}, {\cf22 ""} \},\par
01422                         \{ {\cf22 "Music ID"}, {\cf22 ""} \},\par
01423                         \{ {\cf22 "Genre"}, {\cf22 ""} \},\par
01424                         \{ {\cf22 "Version"}, {\cf22 ""} \},\par
01425                         \{{\cf22 "Version Number"},{\cf22 ""}\},\par
01426                         \{ {\cf22 "BPM"}, {\cf22 ""} \},\par
01427                         \{ {\cf22 "Composer"}, {\cf22 ""} \},\par
01428                         \{ {\cf22 "Easy"}, {\cf22 ""} \},\par
01429                         \{ {\cf22 "Easy Decimal"},{\cf22 ""} \},\par
01430                         \{ {\cf22 "Easy Chart Maker"}, {\cf22 ""} \},\par
01431                         \{ {\cf22 "Easy Chart Path"}, {\cf22 ""} \},\par
01432                         \{ {\cf22 "Basic"}, {\cf22 ""} \},\par
01433                         \{ {\cf22 "Basic Decimal"}, {\cf22 ""} \},\par
01434                         \{ {\cf22 "Basic Chart Maker"}, {\cf22 ""} \},\par
01435                         \{ {\cf22 "Basic Chart Path"}, {\cf22 ""} \},\par
01436                         \{ {\cf22 "Advanced"}, {\cf22 ""} \},\par
01437                         \{ {\cf22 "Advanced Decimal"}, {\cf22 ""} \},\par
01438                         \{ {\cf22 "Advanced Chart Maker"}, {\cf22 ""} \},\par
01439                         \{ {\cf22 "Advanced Chart Path"}, {\cf22 ""} \},\par
01440                         \{ {\cf22 "Expert"}, {\cf22 ""} \},\par
01441                         \{ {\cf22 "Expert Decimal"}, {\cf22 ""} \},\par
01442                         \{ {\cf22 "Expert Chart Maker"}, {\cf22 ""} \},\par
01443                         \{ {\cf22 "Expert Chart Path"}, {\cf22 ""} \},\par
01444                         \{ {\cf22 "Master"}, {\cf22 ""} \},\par
01445                         \{ {\cf22 "Master Decimal"}, {\cf22 ""} \},\par
01446                         \{ {\cf22 "Master Chart Maker"}, {\cf22 ""} \},\par
01447                         \{ {\cf22 "Master Chart Path"}, {\cf22 ""} \},\par
01448                         \{ {\cf22 "Remaster"}, {\cf22 ""} \},\par
01449                         \{ {\cf22 "Remaster Decimal"}, {\cf22 ""} \},\par
01450                         \{ {\cf22 "Remaster Chart Maker"}, {\cf22 ""} \},\par
01451                         \{ {\cf22 "Remaster Chart Path"}, {\cf22 ""} \},\par
01452                         \{ {\cf22 "Utage"}, {\cf22 ""} \},\par
01453                         \{ {\cf22 "Utage Chart Maker"}, {\cf22 ""} \},\par
01454                         \{ {\cf22 "Utage Chart Path"}, {\cf22 ""} \},\par
01455                         \{{\cf22 "SDDX Suffix"},{\cf22 ""}\}\par
01456                     \};\par
01457         \}\par
01458 \par
01462         {\cf17 public} {\cf18 void} FormatDummyInformation()\par
01463         \{\par
01464             this.information = {\cf17 new} Dictionary<string, string>\par
01465                     \{\par
01466                         \{ {\cf22 "Name"}, {\cf22 "Dummy"} \},\par
01467                         \{ {\cf22 "Sort Name"}, {\cf22 "DUMMY"} \},\par
01468                         \{ {\cf22 "Music ID"}, {\cf22 "000000"} \},\par
01469                         \{ {\cf22 "Genre"}, {\cf22 "maimai"} \},\par
01470                         \{ {\cf22 "Version"}, {\cf22 "maimai"} \},\par
01471                         \{{\cf22 "Version Number"},{\cf22 "101"}\},\par
01472                         \{ {\cf22 "BPM"}, {\cf22 "120"} \},\par
01473                         \{ {\cf22 "Composer"}, {\cf22 "SEGA"} \},\par
01474                         \{ {\cf22 "Easy"}, {\cf22 "1"} \},\par
01475                         \{ {\cf22 "Easy Decimal"},{\cf22 "1.0"} \},\par
01476                         \{ {\cf22 "Easy Chart Maker"}, {\cf22 "SEGA"} \},\par
01477                         \{ {\cf22 "Easy Chart Path"}, {\cf22 "000000_11.ma2"} \},\par
01478                         \{ {\cf22 "Basic"}, {\cf22 "2"} \},\par
01479                         \{ {\cf22 "Basic Decimal"}, {\cf22 "2.0"} \},\par
01480                         \{ {\cf22 "Basic Chart Maker"}, {\cf22 "SEGA"} \},\par
01481                         \{ {\cf22 "Basic Chart Path"}, {\cf22 "000000_00.ma2"} \},\par
01482                         \{ {\cf22 "Advanced"}, {\cf22 "3"} \},\par
01483                         \{ {\cf22 "Advanced Decimal"}, {\cf22 "3.0"} \},\par
01484                         \{ {\cf22 "Advanced Chart Maker"}, {\cf22 "SEGA"} \},\par
01485                         \{ {\cf22 "Advanced Chart Path"}, {\cf22 "000000_01.ma2"} \},\par
01486                         \{ {\cf22 "Expert"}, {\cf22 "4"} \},\par
01487                         \{ {\cf22 "Expert Decimal"}, {\cf22 "4.0"} \},\par
01488                         \{ {\cf22 "Expert Chart Maker"}, {\cf22 "SEGA"} \},\par
01489                         \{ {\cf22 "Expert Chart Path"}, {\cf22 "000000_02.ma2"} \},\par
01490                         \{ {\cf22 "Master"}, {\cf22 "5"} \},\par
01491                         \{ {\cf22 "Master Decimal"}, {\cf22 "5.0"} \},\par
01492                         \{ {\cf22 "Master Chart Maker"}, {\cf22 "SEGA"} \},\par
01493                         \{ {\cf22 "Master Chart Path"}, {\cf22 "000000_03.ma2"} \},\par
01494                         \{ {\cf22 "Remaster"}, {\cf22 "6"} \},\par
01495                         \{ {\cf22 "Remaster Decimal"}, {\cf22 "6.0"} \},\par
01496                         \{ {\cf22 "Remaster Chart Maker"}, {\cf22 "SEGA"} \},\par
01497                         \{ {\cf22 "Remaster Chart Path"}, {\cf22 "000000_04.ma2"} \},\par
01498                         \{ {\cf22 "Utage"}, {\cf22 "11"} \},\par
01499                         \{ {\cf22 "Utage Chart Maker"}, {\cf22 "SEGA"} \},\par
01500                         \{ {\cf22 "Utage Chart Path"}, {\cf22 "000000_05.ma2"} \},\par
01501                         \{{\cf22 "SDDX Suffix"},{\cf22 "SD"}\}\par
01502                     \};\par
01503         \}\par
01504 \par
01509         {\cf17 public} {\cf18 string} TrackName\par
01510         \{\par
01511             {\cf17 get} \{ {\cf19 return} this.Information.GetValueOrDefault({\cf22 "Name"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Name is not defined"}); \}\par
01512             {\cf17 set} \{ this.information[{\cf22 "Name"}] = value; \}\par
01513         \}\par
01514 \par
01519         {\cf17 public} {\cf18 string} TrackSortName\par
01520         \{\par
01521             {\cf17 get} \{ {\cf19 return} this.Information.GetValueOrDefault({\cf22 "Sort Name"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Sort Name is not defined"}); \}\par
01522             {\cf17 set} \{ this.information[{\cf22 "Sort Name"}] = value; \}\par
01523         \}\par
01524 \par
01529         {\cf17 public} {\cf18 string} TrackID\par
01530         \{\par
01531             {\cf17 get} \{ {\cf19 return} this.Information.GetValueOrDefault({\cf22 "Music ID"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Music ID is not defined"}); \}\par
01532             {\cf17 set} \{ this.information[{\cf22 "Music ID"}] = value; \}\par
01533         \}\par
01534 \par
01539         {\cf17 public} {\cf18 string} TrackGenre\par
01540         \{\par
01541             {\cf17 get} \{ {\cf19 return} this.Information.GetValueOrDefault({\cf22 "Genre"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Genre is not defined"}); \}\par
01542             {\cf17 set} \{ this.information[{\cf22 "Genre"}] = value; \}\par
01543         \}\par
01544 \par
01549         {\cf17 public} {\cf18 string} TrackBPM\par
01550         \{\par
01551             {\cf17 get} \{ {\cf19 return} this.Information.GetValueOrDefault({\cf22 "BPM"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Genre is not defined"}); \}\par
01552             {\cf17 set} \{ this.information[{\cf22 "BPM"}] = value; \}\par
01553         \}\par
01554 \par
01559         {\cf17 public} {\cf18 string} TrackComposer\par
01560         \{\par
01561             {\cf17 get} \{ {\cf19 return} this.Information.GetValueOrDefault({\cf22 "Composer"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Genre is not defined"}); \}\par
01562             {\cf17 set} \{ this.information[{\cf22 "Composer"}] = value; \}\par
01563         \}\par
01564 \par
01569         {\cf17 public} {\cf18 string} TrackSymbolicLevel\par
01570         \{\par
01571             {\cf17 get} \par
01572             \{\par
01573                 {\cf19 if} (this.Information.TryGetValue({\cf22 "Utage"}, out {\cf18 string}? utageLevel) && level != {\cf17 null} && !utageLevel.Equals({\cf22 ""}))\par
01574                 \{\par
01575                     {\cf19 return} utageLevel;\par
01576                 \}\par
01577                 {\cf19 else} {\cf19 if} (this.Information.TryGetValue({\cf22 "Remaster"}, out {\cf18 string}? remasLevel) && remasLevel != {\cf17 null} && !remasLevel.Equals({\cf22 ""}))\par
01578                 \{\par
01579                     {\cf19 return} remasLevel;\par
01580                 \}\par
01581                 {\cf19 else} {\cf19 if} (this.Information.TryGetValue({\cf22 "Master"}, out {\cf18 string}? masterLevel) && masterLevel != {\cf17 null} && !masterLevel.Equals({\cf22 ""}))\par
01582                 \{\par
01583                     {\cf19 return} masterLevel;\par
01584                 \}\par
01585                 {\cf19 else} {\cf19 if} (this.Information.TryGetValue({\cf22 "Expert"}, out {\cf18 string}? expertLevel) && expertLevel != {\cf17 null} && !expertLevel.Equals({\cf22 ""}))\par
01586                 \{\par
01587                     {\cf19 return} expertLevel;\par
01588                 \}\par
01589                 {\cf19 else} {\cf19 if} (this.Information.TryGetValue({\cf22 "Advanced"}, out {\cf18 string}? advanceLevel) && advanceLevel != {\cf17 null} && !advanceLevel.Equals({\cf22 ""}))\par
01590                 \{\par
01591                     {\cf19 return} advanceLevel;\par
01592                 \}\par
01593                 {\cf19 else} {\cf19 if} (this.Information.TryGetValue({\cf22 "Basic"}, out {\cf18 string}? basicLevel) && basicLevel != {\cf17 null} && !basicLevel.Equals({\cf22 ""}))\par
01594                 \{\par
01595                     {\cf19 return} basicLevel;\par
01596                 \}\par
01597                 {\cf19 else} {\cf19 if} (this.Information.TryGetValue({\cf22 "Easy"}, out {\cf18 string}? easyLevel) && easyLevel != {\cf17 null} && !easyLevel.Equals({\cf22 ""}))\par
01598                 \{\par
01599                     {\cf19 return} easyLevel;\par
01600                 \}\par
01601                 {\cf19 else} {\cf19 return} {\cf22 "ORIGINAL"};\par
01602             \}\par
01603             {\cf17 set} \par
01604             \{ \par
01605                 this.information[{\cf22 "Master"}] = value; \par
01606             \}\par
01607         \}\par
01608 \par
01612         {\cf17 public} {\cf18 string}[] TrackLevels\par
01613         \{\par
01614             {\cf17 get}\par
01615             \{\par
01616                 {\cf18 string}[] result = \{ this.Information[{\cf22 "Easy"}],\par
01617                     this.Information[{\cf22 "Basic"}],\par
01618                     this.Information[{\cf22 "Advanced"}],\par
01619                     this.Information[{\cf22 "Expert"}],\par
01620                     this.Information[{\cf22 "Master"}],\par
01621                     this.Information[{\cf22 "Remaster"}],\par
01622                     this.Information[{\cf22 "Utage"}] \};\par
01623                 {\cf19 return} result;\par
01624             \}\par
01625             {\cf17 set}\par
01626             \{\par
01627                 this.Information[{\cf22 "Easy"}] = value[0];\par
01628                 this.Information[{\cf22 "Basic"}] = value[1];\par
01629                 this.Information[{\cf22 "Advanced"}] = value[2];\par
01630                 this.Information[{\cf22 "Expert"}] = value[3];\par
01631                 this.Information[{\cf22 "Master"}] = value[4];\par
01632                 this.Information[{\cf22 "Remaster"}] = value[5];\par
01633                 this.Information[{\cf22 "Utage"}] = value[6];\par
01634             \}\par
01635         \}\par
01636 \par
01640         {\cf17 public} {\cf18 string}[] TrackDecimalLevels\par
01641         \{\par
01642             {\cf17 get}\par
01643             \{\par
01644                 {\cf18 string}[] result = \{ this.Information[{\cf22 "Easy Decimal"}],\par
01645                     this.Information[{\cf22 "Basic Decimal"}],\par
01646                     this.Information[{\cf22 "Advanced Decimal"}],\par
01647                     this.Information[{\cf22 "Expert Decimal"}],\par
01648                     this.Information[{\cf22 "Master Decimal"}],\par
01649                     this.Information[{\cf22 "Remaster Decimal"}],\par
01650                     this.Information[{\cf22 "Utage"}] \};\par
01651                 {\cf19 return} result;\par
01652             \}\par
01653             {\cf17 set}\par
01654             \{\par
01655                 this.Information[{\cf22 "Easy Decimal"}] = value[0];\par
01656                 this.Information[{\cf22 "Basic Decimal"}] = value[1];\par
01657                 this.Information[{\cf22 "Advanced Decimal"}] = value[2];\par
01658                 this.Information[{\cf22 "Expert Decimal"}] = value[3];\par
01659                 this.Information[{\cf22 "Master Decimal"}] = value[4];\par
01660                 this.Information[{\cf22 "Remaster Decimal"}] = value[5];\par
01661                 this.Information[{\cf22 "Utage"}] = value[6];\par
01662             \}\par
01663         \}\par
01664 \par
01669         {\cf17 public} {\cf18 string} DXChartTrackPathSuffix\par
01670         \{\par
01671             {\cf17 get}\par
01672             \{\par
01673                 {\cf18 string} musicID = this.Information.GetValueOrDefault({\cf22 "Music ID"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Music ID is not Defined"});\par
01674                 {\cf19 if} (musicID.Length > 4)\par
01675                     {\cf19 return} {\cf22 "_DX"};\par
01676                 {\cf19 else} {\cf19 return} {\cf22 ""};\par
01677             \}\par
01678         \}\par
01679 \par
01684         {\cf17 public} {\cf18 string} StandardDeluxePrefix\par
01685         \{\par
01686             {\cf17 get}\par
01687             \{\par
01688                 {\cf18 string} musicID = this.Information.GetValueOrDefault({\cf22 "Music ID"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Music ID is not Defined"});\par
01689                 {\cf19 if} (musicID.Length > 4)\par
01690                     {\cf19 return} {\cf22 "DX"};\par
01691                 {\cf19 else} {\cf19 return} {\cf22 "SD"};\par
01692             \}\par
01693         \}\par
01694 \par
01699         {\cf17 public} {\cf18 string} StandardDeluxeSuffix\par
01700         \{\par
01701             {\cf17 get}\par
01702             \{\par
01703                 {\cf19 return} {\cf22 "["} + this.StandardDeluxePrefix + {\cf22 "]"};\par
01704             \}\par
01705         \}\par
01706 \par
01711         {\cf17 public} {\cf18 bool} IsDXChart\par
01712         \{\par
01713             {\cf17 get}\par
01714             \{\par
01715                 {\cf18 string} musicID = this.Information.GetValueOrDefault({\cf22 "Music ID"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Music ID is not Defined"});\par
01716                 {\cf19 return} musicID.Length > 4;\par
01717             \}\par
01718         \}\par
01719 \par
01725         {\cf17 public} XmlNodeList GetMatchNodes({\cf18 string} name)\par
01726         \{\par
01727             XmlNodeList result = this.takeInValue.GetElementsByTagName(name);\par
01728             {\cf19 return} result;\par
01729         \}\par
01730 \par
01735         {\cf17 public} {\cf18 string} TrackVersion\par
01736         \{\par
01737 \par
01738             {\cf17 get}\par
01739             \{\par
01740                 {\cf18 string} version = this.Information.GetValueOrDefault({\cf22 "Version"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Version is not Defined"});\par
01741                 {\cf19 return} version;\par
01742             \}\par
01743             {\cf17 set} \{ this.information[{\cf22 "Version"}] = value; \}\par
01744         \}\par
01745 \par
01750         {\cf17 public} {\cf18 string} TrackVersionNumber\par
01751         \{\par
01752 \par
01753             {\cf17 get}\par
01754             \{\par
01755                 {\cf18 string} versionNumber = this.Information.GetValueOrDefault({\cf22 "Version Number"}) ?? {\cf19 throw} {\cf17 new} NullReferenceException({\cf22 "Version is not Defined"});\par
01756                 {\cf19 return} versionNumber;\par
01757             \}\par
01758             {\cf17 set} \{ this.information[{\cf22 "Version Number"}] = value; \}\par
01759         \}\par
01760 \par
01765         {\cf17 public} XmlDocument TakeInValue\par
01766         \{\par
01767             {\cf17 get} \{ {\cf19 return} takeInValue; \}\par
01768             {\cf17 set} \{ this.takeInValue = value; \}\par
01769         \}\par
01770 \par
01775         {\cf17 public} Dictionary<string, string> Information\par
01776         \{\par
01777             {\cf17 get} \{ {\cf19 return} information; \}\par
01778             {\cf17 set} \{ this.information = value; \}\par
01779         \}\par
01780 \par
01785         {\cf17 public} {\cf18 void} Save({\cf18 string} location)\par
01786         \{\par
01787             this.takeInValue.Save(location);\par
01788         \}\par
01789 \par
01793         {\cf17 public} {\cf17 abstract} {\cf18 void} Update();\par
01794 \par
01800         {\cf17 public} {\cf17 static} {\cf18 string} CompensateZero({\cf18 string} intake)\par
01801         \{\par
01802             {\cf19 try}\par
01803             \{\par
01804                 {\cf18 string} result = intake;\par
01805                 {\cf19 while} (result.Length < 6 && intake != {\cf17 null})\par
01806                 \{\par
01807                     result = {\cf22 "0"} + result;\par
01808                 \}\par
01809                 {\cf19 return} result;\par
01810             \}\par
01811             {\cf19 catch} (NullReferenceException ex)\par
01812             \{\par
01813                 {\cf19 return} {\cf22 "Exception raised: "} + ex.Message;\par
01814             \}\par
01815         \}\par
01816 \par
01822         {\cf17 public} {\cf17 static} {\cf18 string} CompensateShortZero({\cf18 string} intake)\par
01823         \{\par
01824             {\cf19 try}\par
01825             \{\par
01826                 {\cf18 string} result = intake;\par
01827                 {\cf19 while} (result.Length < 4 && intake != {\cf17 null})\par
01828                 \{\par
01829                     result = {\cf22 "0"} + result;\par
01830                 \}\par
01831                 {\cf19 return} result;\par
01832             \}\par
01833             {\cf19 catch} (NullReferenceException ex)\par
01834             \{\par
01835                 {\cf19 return} {\cf22 "Exception raised: "} + ex.Message;\par
01836             \}\par
01837         \}\par
01838     \}\par
01839 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/XMaiL.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/XMaiL.cs}
{\xe \v Neskol/MaiLib/XMaiL.cs}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.XMaiL}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using xml to store maicharts. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
XMaiL.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/XMaiL.cs}
{\xe \v Neskol/MaiLib/XMaiL.cs}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Xml;\par
00003 \par
00004 {\cf17 namespace }MaiLib\par
00005 \{\par
00009     {\cf17 public} {\cf17 class }XMaiL : Chart, ICompiler\par
00010     \{\par
00014         {\cf17 private} XmlDocument StoredXMailL;\par
00015 \par
00019         {\cf17 public} XMaiL()\par
00020         \{\par
00021             this.Notes = {\cf17 new} List<Note>();\par
00022             this.BPMChanges = {\cf17 new} BPMChanges();\par
00023             this.MeasureChanges = {\cf17 new} MeasureChanges();\par
00024             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00025             this.Information = {\cf17 new} Dictionary<string, string>();\par
00026             this.StoredXMailL = {\cf17 new} XmlDocument();\par
00027             this.Update();\par
00028         \}\par
00029 \par
00036         {\cf17 public} XMaiL(List<Note> notes, BPMChanges bpmChanges, MeasureChanges measureChanges)\par
00037         \{\par
00038             this.Notes = notes;\par
00039             this.BPMChanges = bpmChanges;\par
00040             this.MeasureChanges = measureChanges;\par
00041             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00042             this.Information = {\cf17 new} Dictionary<string, string>();\par
00043             this.StoredXMailL = {\cf17 new} XmlDocument();\par
00044             this.Update();\par
00045         \}\par
00046 \par
00051         {\cf17 public} XMaiL({\cf18 string}[] tokens)\par
00052         \{\par
00053             Chart takenIn = {\cf17 new} Ma2Parser().ChartOfToken(tokens);\par
00054             this.Notes = takenIn.Notes;\par
00055             this.BPMChanges = takenIn.BPMChanges;\par
00056             this.MeasureChanges = takenIn.MeasureChanges;\par
00057             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00058             this.Information = {\cf17 new} Dictionary<string, string>();\par
00059             this.StoredXMailL = {\cf17 new} XmlDocument();\par
00060             this.Update();\par
00061         \}\par
00062 \par
00067         {\cf17 public} XMaiL(Chart takenIn)\par
00068         \{\par
00069             this.Notes = takenIn.Notes;\par
00070             this.BPMChanges = takenIn.BPMChanges;\par
00071             this.MeasureChanges = takenIn.MeasureChanges;\par
00072             this.StoredChart = {\cf17 new} List<List<Note>>();\par
00073             this.Information = {\cf17 new} Dictionary<string, string>();\par
00074             this.StoredXMailL = {\cf17 new} XmlDocument();\par
00075             this.Update();\par
00076         \}\par
00077 \par
00078         {\cf17 public} {\cf17 override} {\cf18 bool} CheckValidity()\par
00079         \{\par
00080             {\cf18 bool} result = {\cf17 this} == {\cf17 null};\par
00081             {\cf20 // Not yet implemented}\par
00082             {\cf19 return} result;\par
00083         \}\par
00084         \par
00085         {\cf17 public} {\cf17 override} {\cf18 string} Compose()\par
00086         \{\par
00087             {\cf19 return} this.StoredXMailL.ToString() ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00088         \}\par
00089 \par
00090         {\cf17 public} {\cf17 override} {\cf18 string} Compose(BPMChanges bpm, MeasureChanges measure)\par
00091         \{\par
00092             {\cf19 throw} {\cf17 new} NotImplementedException();\par
00093         \}\par
00094 \par
00095         {\cf17 public} {\cf17 override} {\cf18 void} Update()\par
00096         \{\par
00097             XmlDeclaration xmlDecl = this.StoredXMailL.CreateXmlDeclaration({\cf22 "1.0"}, {\cf22 "UTF-8"}, {\cf17 null});\par
00098             this.StoredXMailL.AppendChild(xmlDecl);\par
00099             XmlElement root = this.StoredXMailL.CreateElement({\cf22 "XMaiL"});\par
00100             XmlAttribute rootVersion = this.StoredXMailL.CreateAttribute({\cf22 "1.0"});\par
00101             root.Attributes.Append(rootVersion);\par
00102             this.StoredXMailL.AppendChild(root);\par
00103             XmlElement information = this.StoredXMailL.CreateElement({\cf22 "TrackInformation"});\par
00104         \}\par
00105     \}\par
00106 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Neskol/MaiLib/XmlInformation.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/XmlInformation.cs}
{\xe \v Neskol/MaiLib/XmlInformation.cs}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaiLib.XmlInformation}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Xml to store trackInformation. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b MaiLib}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
XmlInformation.cs\par \pard\plain 
{\tc\tcl2 \v Neskol/MaiLib/XmlInformation.cs}
{\xe \v Neskol/MaiLib/XmlInformation.cs}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Data;\par
00002 {\cf17 using }System.Xml;\par
00003 \par
00004 {\cf17 namespace }MaiLib\par
00005 \{\par
00009     {\cf17 public} {\cf17 class }XmlInformation : TrackInformation, IXmlUtility\par
00010     \{\par
00014         {\cf17 public} XmlInformation()\par
00015         \{\par
00016             this.Update();\par
00017         \}\par
00018 \par
00019         {\cf17 public} XmlInformation({\cf18 string} location)\par
00020         \{\par
00021             \{\par
00022                 {\cf19 if} (File.Exists(location + {\cf22 "Music.xml"}))\par
00023                 \{\par
00024                     this.TakeInValue.Load(location + {\cf22 "Music.xml"});\par
00025                     this.Update();\par
00026                 \}\par
00027                 {\cf19 else}\par
00028                 \{\par
00029                     this.Update();\par
00030                 \}\par
00031 \par
00032             \}\par
00033         \}\par
00034 \par
00038         {\cf17 public} {\cf18 void} GenerateEmptyStoredXML()\par
00039         \{\par
00040             this.TakeInValue = {\cf17 new} XmlDocument();\par
00041             {\cf20 //Create declaration}\par
00042             XmlDeclaration dec = this.TakeInValue.CreateXmlDeclaration({\cf22 "1.0"}, {\cf22 "utf-8"}, {\cf22 "yes"});\par
00043             this.TakeInValue.AppendChild(dec);\par
00044             {\cf20 //Create Root and append attributes}\par
00045             XmlElement root = this.TakeInValue.CreateElement({\cf22 "MusicData"});\par
00046             this.TakeInValue.AppendChild(root);\par
00047             XmlAttribute xsi = this.TakeInValue.CreateAttribute({\cf22 "xmlns:xsi"});\par
00048             xsi.Value = {\cf22 "http://www.w3.org/2001/XMLSchema-instance"};\par
00049             XmlAttribute xsd = this.TakeInValue.CreateAttribute({\cf22 "xmlns:xsd"});\par
00050 \par
00051             {\cf20 //Create tags. *data name: inner text = music0xxxxx}\par
00052             XmlElement dataName = this.TakeInValue.CreateElement({\cf22 "dataName"});\par
00053             dataName.InnerText = {\cf22 "music"} + CompensateZero(this.Information[{\cf22 "Music ID"}]);\par
00054             root.AppendChild(dataName);\par
00055             XmlElement netOpenName = this.TakeInValue.CreateElement({\cf22 "netOpenName"});\par
00056             XmlElement netOpenNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00057             netOpenNameId.InnerText = {\cf22 "0"};\par
00058             XmlElement netOpenNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00059             netOpenNameStr.InnerText = {\cf22 "Net190711"};\par
00060             netOpenName.AppendChild(netOpenNameId);\par
00061             netOpenName.AppendChild(netOpenNameStr);\par
00062             root.AppendChild(netOpenName);\par
00063             XmlElement releaseTagName = this.TakeInValue.CreateElement({\cf22 "releaseTagName"});\par
00064             XmlElement releaseTagNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00065             releaseTagNameId.InnerText = {\cf22 "1"};\par
00066             XmlElement releaseTagNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00067             releaseTagNameStr.InnerText = {\cf22 "Ver1.00.00"};\par
00068             releaseTagName.AppendChild(releaseTagNameId);\par
00069             releaseTagName.AppendChild(releaseTagNameStr);\par
00070             root.AppendChild(releaseTagName);\par
00071             XmlElement disable = this.TakeInValue.CreateElement({\cf22 "disable"});\par
00072             disable.InnerText = {\cf22 "false"};\par
00073             root.AppendChild(disable);\par
00074             XmlElement name = this.TakeInValue.CreateElement({\cf22 "name"});\par
00075             XmlElement nameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00076             nameId.InnerText = this.TrackID;\par
00077             XmlElement nameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00078             nameStr.InnerText = this.TrackName;\par
00079             name.AppendChild(nameId);\par
00080             name.AppendChild(nameStr);\par
00081             root.AppendChild(name);\par
00082             XmlElement rightsInfoName = this.TakeInValue.CreateElement({\cf22 "rightsInfoName"});\par
00083             XmlElement rightsInfoNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00084             rightsInfoNameId.InnerText = {\cf22 "0"};\par
00085             XmlElement rightsInfoNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00086             rightsInfoNameStr.InnerText = {\cf22 ""};\par
00087             rightsInfoName.AppendChild(rightsInfoNameId);\par
00088             rightsInfoName.AppendChild(rightsInfoNameStr);\par
00089             root.AppendChild(rightsInfoName);\par
00090             XmlElement sortName = this.TakeInValue.CreateElement({\cf22 "sortName"});\par
00091             sortName.InnerText = this.TrackSortName;\par
00092             root.AppendChild(sortName);\par
00093             XmlElement artistName = this.TakeInValue.CreateElement({\cf22 "artistName"});\par
00094             XmlElement artistNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00095             artistNameId.InnerText = {\cf22 "0"};\par
00096             XmlElement artistNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00097             artistNameStr.InnerText = this.Information[{\cf22 "Composer"}];\par
00098             artistName.AppendChild(artistNameId);\par
00099             artistName.AppendChild(artistNameStr);\par
00100             root.AppendChild(artistName);\par
00101             XmlElement genreName = this.TakeInValue.CreateElement({\cf22 "genreName"});\par
00102             XmlElement genreNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00103             genreNameId.InnerText = {\cf22 "10"} + Array.IndexOf(TrackInformation.genre, {\cf17 this}.Information[{\cf22 "Genre"}]).ToString();\par
00104             XmlElement genreNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00105             genreNameStr.InnerText = this.TrackGenre;\par
00106             genreName.AppendChild(genreNameId);\par
00107             genreName.AppendChild(genreNameStr);\par
00108             root.AppendChild(genreName);\par
00109             XmlElement bpm = this.TakeInValue.CreateElement({\cf22 "bpm"});\par
00110             bpm.InnerText = this.TrackBPM;\par
00111             root.AppendChild(bpm);\par
00112             XmlElement version = this.TakeInValue.CreateElement({\cf22 "version"});\par
00113             version.InnerText = {\cf22 "19000"};\par
00114             root.AppendChild(version);\par
00115             XmlElement addVersion = this.TakeInValue.CreateElement({\cf22 "addVersion"});\par
00116             XmlElement addVersionId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00117             addVersionId.InnerText = this.TrackVersionNumber;\par
00118             XmlElement addVersionStr = this.TakeInValue.CreateElement({\cf22 "str"});            \par
00119             addVersionStr.InnerText = TrackInformation.shortVersion[{\cf18 int}.Parse(this.TrackVersionNumber.Substring(1))];\par
00120             addVersion.AppendChild(addVersionId);\par
00121             addVersion.AppendChild(addVersionStr);\par
00122             root.AppendChild(addVersion);\par
00123             XmlElement movieName = this.TakeInValue.CreateElement({\cf22 "movieName"});\par
00124             XmlElement movieNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00125             movieNameId.InnerText = this.TrackID;\par
00126             XmlElement movieNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00127             movieNameStr.InnerText = this.TrackName;\par
00128             movieName.AppendChild(movieNameId);\par
00129             movieName.AppendChild(movieNameStr);\par
00130             root.AppendChild(movieName);\par
00131             XmlElement cueName = this.TakeInValue.CreateElement({\cf22 "cueName"});\par
00132             XmlElement cueNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00133             cueNameId.InnerText = this.TrackID;\par
00134             XmlElement cueNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00135             cueNameStr.InnerText = this.TrackName;\par
00136             cueName.AppendChild(cueNameId);\par
00137             cueName.AppendChild(cueNameStr);\par
00138             root.AppendChild(cueName);\par
00139             XmlElement dressCode = this.TakeInValue.CreateElement({\cf22 "dressCode"});\par
00140             dressCode.InnerText = {\cf22 "false"};\par
00141             root.AppendChild(dressCode);\par
00142             XmlElement eventName = this.TakeInValue.CreateElement({\cf22 "eventName"});\par
00143             XmlElement eventNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00144             eventNameId.InnerText = {\cf22 "1"};\par
00145             XmlElement eventNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00146             eventNameStr.InnerText = {\cf22 "\'E7\'84\'A1\'E6\'9C\'9F\'E9\'99\'90\'E5\'B8\'B8\'E6\'99\'82\'E8\'A7\'A3\'E6\'94\'BE"};\par
00147             eventName.AppendChild(eventNameId);\par
00148             eventName.AppendChild(eventNameStr);\par
00149             root.AppendChild(eventName);\par
00150             XmlElement subEventName = this.TakeInValue.CreateElement({\cf22 "subEventName"});\par
00151             XmlElement subEventNameId = this.TakeInValue.CreateElement({\cf22 "id"});\par
00152             subEventNameId.InnerText = {\cf22 "1"};\par
00153             XmlElement subEventNameStr = this.TakeInValue.CreateElement({\cf22 "str"});\par
00154             subEventNameStr.InnerText = {\cf22 "\'E7\'84\'A1\'E6\'9C\'9F\'E9\'99\'90\'E5\'B8\'B8\'E6\'99\'82\'E8\'A7\'A3\'E6\'94\'BE"};\par
00155             subEventName.AppendChild(subEventNameId);\par
00156             subEventName.AppendChild(subEventNameStr);\par
00157             root.AppendChild(subEventName);\par
00158             XmlElement lockType = this.TakeInValue.CreateElement({\cf22 "lockType"});\par
00159             lockType.InnerText = {\cf22 "0"};\par
00160             root.AppendChild(lockType);\par
00161             XmlElement subLockType = this.TakeInValue.CreateElement({\cf22 "subLockType"});\par
00162             subLockType.InnerText = {\cf22 "1"};\par
00163             root.AppendChild(subLockType);\par
00164             XmlElement dotNetListView = this.TakeInValue.CreateElement({\cf22 "dotNetListView"});\par
00165             dotNetListView.InnerText = {\cf22 "true"};\par
00166             root.AppendChild(dotNetListView);\par
00167             XmlElement notesData = this.TakeInValue.CreateElement({\cf22 "notesData"});\par
00168             {\cf19 for} ({\cf18 int} i = 0; i < 7; i++)\par
00169             \{\par
00170                 XmlElement noteCandidate = this.TakeInValue.CreateElement({\cf22 "Notes"});\par
00171                 XmlElement fileCandidate = this.TakeInValue.CreateElement({\cf22 "file"});\par
00172                 XmlElement pathCandidate = this.TakeInValue.CreateElement({\cf22 "path"});\par
00173                 pathCandidate.InnerText = CompensateZero(this.TrackID) + {\cf22 "_0"} + i + {\cf22 ".ma2"};\par
00174                 fileCandidate.AppendChild(pathCandidate);\par
00175                 XmlElement levelCandidate = this.TakeInValue.CreateElement({\cf22 "level"});\par
00176                 XmlElement levelDecimalCandidate = this.TakeInValue.CreateElement({\cf22 "levelDecimal"});\par
00177                 XmlElement notesDesignerCandidate = this.TakeInValue.CreateElement({\cf22 "notesDesigner"});\par
00178                 XmlElement notesDesignerIdCandidate = this.TakeInValue.CreateElement({\cf22 "id"});\par
00179                 XmlElement notesDesignerStrCandidate = this.TakeInValue.CreateElement({\cf22 "str"});\par
00180                 XmlElement notesTypeCandidate = this.TakeInValue.CreateElement({\cf22 "notesType"});\par
00181                 notesTypeCandidate.InnerText = {\cf22 "0"};\par
00182                 XmlElement musicLevelIDCandidate = this.TakeInValue.CreateElement({\cf22 "musicLevelID"});\par
00183                 XmlElement isEnabledCandidate = this.TakeInValue.CreateElement({\cf22 "isEnabled"});\par
00184 \par
00185                 {\cf19 switch} (i)\par
00186                 \{\par
00187                     {\cf19 case} 0:\par
00188                         notesDesignerStrCandidate.InnerText = this.Information[{\cf22 "Easy Chart Maker"}];\par
00189                         {\cf18 int} designerIndex = Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText);\par
00190                         {\cf19 if} (designerIndex>1)\par
00191                         \{\par
00192                             notesDesignerIdCandidate.InnerText = TrackInformation.artistNameDic.Keys.ToArray()[Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText)];\par
00193                         \}\par
00194                         isEnabledCandidate.InnerText = {\cf22 "true"};\par
00195                         {\cf19 break};\par
00196                     {\cf19 case} 1:\par
00197                         notesDesignerStrCandidate.InnerText = this.Information[{\cf22 "Basic Chart Maker"}];\par
00198                         designerIndex = Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText);\par
00199                         {\cf19 if} (designerIndex > 1)\par
00200                         \{\par
00201                             notesDesignerIdCandidate.InnerText = TrackInformation.artistNameDic.Keys.ToArray()[Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText)];\par
00202                         \}\par
00203                         isEnabledCandidate.InnerText = {\cf22 "true"};\par
00204                         {\cf19 break};\par
00205                     {\cf19 case} 2:\par
00206                         notesDesignerStrCandidate.InnerText = this.Information[{\cf22 "Advanced Chart Maker"}];\par
00207                         designerIndex = Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText);\par
00208                         {\cf19 if} (designerIndex > 1)\par
00209                         \{\par
00210                             notesDesignerIdCandidate.InnerText = TrackInformation.artistNameDic.Keys.ToArray()[Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText)];\par
00211                         \}\par
00212                         isEnabledCandidate.InnerText = {\cf22 "true"};\par
00213                         {\cf19 break};\par
00214                     {\cf19 case} 3:\par
00215                         notesDesignerStrCandidate.InnerText = this.Information[{\cf22 "Expert Chart Maker"}];\par
00216                         designerIndex = Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText);\par
00217                         {\cf19 if} (designerIndex > 1)\par
00218                         \{\par
00219                             notesDesignerIdCandidate.InnerText = TrackInformation.artistNameDic.Keys.ToArray()[Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText)];\par
00220                         \}\par
00221                         isEnabledCandidate.InnerText = {\cf22 "true"};\par
00222                         {\cf19 break};\par
00223                     {\cf19 case} 4:\par
00224                         notesDesignerStrCandidate.InnerText = this.Information[{\cf22 "Master Chart Maker"}];\par
00225                         designerIndex = Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText);\par
00226                         {\cf19 if} (designerIndex > 1)\par
00227                         \{\par
00228                             notesDesignerIdCandidate.InnerText = TrackInformation.artistNameDic.Keys.ToArray()[Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText)];\par
00229                         \}\par
00230                         isEnabledCandidate.InnerText = {\cf22 "true"};\par
00231                         {\cf19 break};\par
00232                     {\cf19 case} 5:\par
00233                         notesDesignerStrCandidate.InnerText = this.Information[{\cf22 "Remaster Chart Maker"}];\par
00234                         designerIndex = Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText);\par
00235                         {\cf19 if} (designerIndex > 1)\par
00236                         \{\par
00237                             notesDesignerIdCandidate.InnerText = TrackInformation.artistNameDic.Keys.ToArray()[Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText)];\par
00238                         \}\par
00239                         isEnabledCandidate.InnerText = {\cf22 "true"};\par
00240                         {\cf19 break};\par
00241                     {\cf19 case} 6:\par
00242                         notesDesignerStrCandidate.InnerText = this.Information[{\cf22 "Utage Chart Maker"}];\par
00243                         designerIndex = Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText);\par
00244                         {\cf19 if} (designerIndex > 1)\par
00245                         \{\par
00246                             notesDesignerIdCandidate.InnerText = TrackInformation.artistNameDic.Keys.ToArray()[Array.IndexOf(TrackInformation.artistNameDic.Values.ToArray(), notesDesignerStrCandidate.InnerText)];\par
00247                         \}\par
00248                         isEnabledCandidate.InnerText = {\cf22 "true"};\par
00249                         {\cf19 break};\par
00250                 \}\par
00251                 notesDesignerCandidate.AppendChild(notesDesignerIdCandidate);\par
00252                 notesDesignerCandidate.AppendChild(notesDesignerStrCandidate);\par
00253                 {\cf19 if} (!this.TrackLevels[i].Equals({\cf22 ""}))\par
00254                 \{\par
00255                     levelCandidate.InnerText = TrackLevels[i];\par
00256                     musicLevelIDCandidate.InnerText = TrackLevels[i];\par
00257                 \}\par
00258                 {\cf19 else} levelCandidate.InnerText = {\cf22 "0"};\par
00259                 {\cf19 if} (!this.TrackDecimalLevels[i].Equals({\cf22 ""}))\par
00260                 \{\par
00261                     levelCandidate.InnerText = TrackDecimalLevels[i];\par
00262                 \}\par
00263                 {\cf19 else} levelCandidate.InnerText = {\cf22 "0"};\par
00264                 noteCandidate.AppendChild(fileCandidate);\par
00265                 noteCandidate.AppendChild(levelCandidate);\par
00266                 noteCandidate.AppendChild(levelDecimalCandidate);\par
00267                 noteCandidate.AppendChild(notesDesignerCandidate);\par
00268                 noteCandidate.AppendChild(notesTypeCandidate);\par
00269                 noteCandidate.AppendChild(musicLevelIDCandidate);\par
00270                 noteCandidate.AppendChild(isEnabledCandidate);\par
00271                 root.AppendChild(noteCandidate);\par
00272             \}\par
00273             XmlElement jacketFile = this.TakeInValue.CreateElement({\cf22 "jacketFile"});\par
00274             XmlElement thumbnailName = this.TakeInValue.CreateElement({\cf22 "thumbnailName"});\par
00275             XmlElement rightFile = this.TakeInValue.CreateElement({\cf22 "rightFile"});\par
00276             XmlElement priority = this.TakeInValue.CreateElement({\cf22 "priority"});\par
00277             priority.InnerText = {\cf22 "0"};\par
00278             root.AppendChild(jacketFile);\par
00279             root.AppendChild(thumbnailName);\par
00280             root.AppendChild(rightFile);\par
00281             root.AppendChild(priority);\par
00282         \}\par
00283 \par
00284         {\cf17 public} XmlElement CreateNotesInformation(Dictionary<string, string> information, {\cf18 int} chartIndex)\par
00285         \{\par
00286             XmlElement result = this.TakeInValue.CreateElement({\cf22 "Notes"});\par
00287 \par
00288             {\cf19 return} result;\par
00289         \}\par
00290 \par
00291         {\cf17 public} {\cf17 override} {\cf18 void} Update()\par
00292         \{\par
00293             XmlNodeList nameCandidate = this.TakeInValue.GetElementsByTagName({\cf22 "name"});\par
00294             XmlNodeList bpmCandidate = this.TakeInValue.GetElementsByTagName({\cf22 "bpm"});\par
00295             XmlNodeList chartCandidate = this.TakeInValue.GetElementsByTagName({\cf22 "Notes"});\par
00296             XmlNodeList composerCandidate = this.TakeInValue.GetElementsByTagName({\cf22 "artistName"});\par
00297             XmlNodeList genreCandidate = this.TakeInValue.GetElementsByTagName({\cf22 "genreName"});\par
00298             XmlNodeList addVersionCandidate = this.TakeInValue.GetElementsByTagName({\cf22 "AddVersion"});\par
00299             XmlNodeList sortNameCandidate = this.TakeInValue.GetElementsByTagName({\cf22 "sortName"});\par
00300             XmlNodeList versionNumberCandidate = this.TakeInValue.GetElementsByTagName({\cf22 "releaseTagName"});\par
00301             {\cf20 //Add in name and music ID.}\par
00303 {\cf20 }            {\cf20 //this.information.Add("BPM",bpmCandidate[0].InnerText);}\par
00304             {\cf19 foreach} (XmlNode candidate {\cf19 in} nameCandidate)\par
00305             \{\par
00306                 {\cf19 if} (this.TrackID.Equals({\cf22 ""}))\par
00307                 \{\par
00308                     var idCandidate = candidate[{\cf22 "id"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00309                     var strCandidate = candidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00310                     this.TrackID = idCandidate.InnerText;\par
00311                     this.TrackName = strCandidate.InnerText;\par
00312                 \}\par
00313             \}\par
00314             {\cf19 foreach} (XmlNode candidate {\cf19 in} chartCandidate)\par
00315             \{\par
00316                 {\cf19 try}\par
00317                 \{\par
00318                     var pathCandidate = candidate[{\cf22 "file"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00319                     pathCandidate = pathCandidate[{\cf22 "path"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00320                     var enableCandidate = candidate[{\cf22 "isEnable"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00321                     {\cf19 if} (pathCandidate.InnerText.Contains({\cf22 "00.ma2"}) && enableCandidate.InnerText.Equals({\cf22 "true"}))\par
00322                     \{\par
00323                         var levelCandidate = candidate[{\cf22 "level"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00324                         var levelDecimalCandidate = candidate[{\cf22 "levelDecimal"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00325                         this.Information[{\cf22 "Basic Decimal"}] = levelCandidate.InnerText + {\cf22 "."} + levelDecimalCandidate.InnerText;\par
00326                         var musicLevelIDCandidate = candidate[{\cf22 "musicLevelID"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00327                         var notesDesignerCandidate = candidate[{\cf22 "notesDesigner"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00328                         notesDesignerCandidate = notesDesignerCandidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00329                         var fileCandidate = candidate[{\cf22 "file"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00330                         fileCandidate = fileCandidate[{\cf22 "path"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00331                         this.Information[{\cf22 "Basic"}] = level[Int32.Parse(musicLevelIDCandidate.InnerText) - 1];\par
00332                         this.Information[{\cf22 "Basic Chart Maker"}] = notesDesignerCandidate.InnerText;\par
00333                         this.Information[{\cf22 "Basic Chart Path"}] = fileCandidate.InnerText;\par
00334                     \}\par
00335                     {\cf19 else} {\cf19 if} (pathCandidate.InnerText.Contains({\cf22 "01.ma2"}) && enableCandidate.InnerText.Equals({\cf22 "true"}))\par
00336                     \{\par
00337                         var levelCandidate = candidate[{\cf22 "level"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00338                         var levelDecimalCandidate = candidate[{\cf22 "levelDecimal"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00339                         this.Information[{\cf22 "Advanced Decimal"}] = levelCandidate.InnerText + {\cf22 "."} + levelDecimalCandidate.InnerText;\par
00340                         var musicLevelIDCandidate = candidate[{\cf22 "musicLevelID"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00341                         var notesDesignerCandidate = candidate[{\cf22 "notesDesigner"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00342                         notesDesignerCandidate = notesDesignerCandidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00343                         var fileCandidate = candidate[{\cf22 "file"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00344                         fileCandidate = fileCandidate[{\cf22 "path"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00345                         this.Information[{\cf22 "Advanced"}] = level[Int32.Parse(musicLevelIDCandidate.InnerText) - 1];\par
00346                         this.Information[{\cf22 "Advanced Chart Maker"}] = notesDesignerCandidate.InnerText;\par
00347                         this.Information[{\cf22 "Advanced Chart Path"}] = fileCandidate.InnerText;\par
00348                     \}\par
00349                     {\cf19 else} {\cf19 if} (pathCandidate.InnerText.Contains({\cf22 "02.ma2"}) && enableCandidate.InnerText.Equals({\cf22 "true"}))\par
00350                     \{\par
00351                         var levelCandidate = candidate[{\cf22 "level"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00352                         var levelDecimalCandidate = candidate[{\cf22 "levelDecimal"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00353                         this.Information[{\cf22 "Expert Decimal"}] = levelCandidate.InnerText + {\cf22 "."} + levelDecimalCandidate.InnerText;\par
00354                         var musicLevelIDCandidate = candidate[{\cf22 "musicLevelID"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00355                         var notesDesignerCandidate = candidate[{\cf22 "notesDesigner"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00356                         notesDesignerCandidate = notesDesignerCandidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00357                         var fileCandidate = candidate[{\cf22 "file"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00358                         fileCandidate = fileCandidate[{\cf22 "path"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00359                         this.Information[{\cf22 "Expert"}] = level[Int32.Parse(musicLevelIDCandidate.InnerText) - 1];\par
00360                         this.Information[{\cf22 "Expert Chart Maker"}] = notesDesignerCandidate.InnerText;\par
00361                         this.Information[{\cf22 "Expert Chart Path"}] = fileCandidate.InnerText;\par
00362                     \}\par
00363                     {\cf19 else} {\cf19 if} (pathCandidate.InnerText.Contains({\cf22 "03.ma2"}) && enableCandidate.InnerText.Equals({\cf22 "true"}))\par
00364                     \{\par
00365                         var levelCandidate = candidate[{\cf22 "level"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00366                         var levelDecimalCandidate = candidate[{\cf22 "levelDecimal"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00367                         this.Information[{\cf22 "Master Decimal"}] = levelCandidate.InnerText + {\cf22 "."} + levelDecimalCandidate.InnerText;\par
00368                         var musicLevelIDCandidate = candidate[{\cf22 "musicLevelID"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00369                         var notesDesignerCandidate = candidate[{\cf22 "notesDesigner"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00370                         notesDesignerCandidate = notesDesignerCandidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00371                         var fileCandidate = candidate[{\cf22 "file"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00372                         fileCandidate = fileCandidate[{\cf22 "path"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00373                         this.Information[{\cf22 "Master"}] = level[Int32.Parse(musicLevelIDCandidate.InnerText) - 1];\par
00374                         this.Information[{\cf22 "Master Chart Maker"}] = notesDesignerCandidate.InnerText;\par
00375                         this.Information[{\cf22 "Master Chart Path"}] = fileCandidate.InnerText;\par
00376                     \}\par
00377                     {\cf19 else} {\cf19 if} (pathCandidate.InnerText.Contains({\cf22 "04.ma2"}) && enableCandidate.InnerText.Equals({\cf22 "true"}))\par
00378                     \{\par
00379                         var levelCandidate = candidate[{\cf22 "level"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00380                         var levelDecimalCandidate = candidate[{\cf22 "levelDecimal"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00381                         this.Information[{\cf22 "Remaster Decimal"}] = levelCandidate.InnerText + {\cf22 "."} + levelDecimalCandidate.InnerText;\par
00382                         var musicLevelIDCandidate = candidate[{\cf22 "musicLevelID"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00383                         var notesDesignerCandidate = candidate[{\cf22 "notesDesigner"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00384                         notesDesignerCandidate = notesDesignerCandidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00385                         var fileCandidate = candidate[{\cf22 "file"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00386                         fileCandidate = fileCandidate[{\cf22 "path"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00387                         this.Information[{\cf22 "Remaster"}] = level[Int32.Parse(musicLevelIDCandidate.InnerText) - 1];\par
00388                         this.Information[{\cf22 "Remaster Chart Maker"}] = notesDesignerCandidate.InnerText;\par
00389                         this.Information[{\cf22 "Remaster Chart Path"}] = fileCandidate.InnerText;\par
00390                     \}\par
00391                     {\cf19 else} {\cf19 if} (pathCandidate.InnerText.Contains({\cf22 "05.ma2"}) && enableCandidate.InnerText.Equals({\cf22 "true"}))\par
00392                     \{\par
00393                         var levelCandidate = candidate[{\cf22 "level"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00394                         var levelDecimalCandidate = candidate[{\cf22 "levelDecimal"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00395                         this.Information[{\cf22 "Utage Decimal"}] = levelCandidate.InnerText + {\cf22 "."} + levelDecimalCandidate.InnerText;\par
00396                         var musicLevelIDCandidate = candidate[{\cf22 "musicLevelID"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00397                         var notesDesignerCandidate = candidate[{\cf22 "notesDesigner"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00398                         notesDesignerCandidate = notesDesignerCandidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00399                         var fileCandidate = candidate[{\cf22 "file"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00400                         fileCandidate = fileCandidate[{\cf22 "path"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00401                         this.Information[{\cf22 "Utage"}] = level[Int32.Parse(musicLevelIDCandidate.InnerText) - 1];\par
00402                         this.Information[{\cf22 "Utage Chart Maker"}] = notesDesignerCandidate.InnerText;\par
00403                         this.Information[{\cf22 "Utage Chart Path"}] = fileCandidate.InnerText;\par
00404                     \}\par
00405                     {\cf19 else} {\cf19 if} (pathCandidate.InnerText.Contains({\cf22 "11.ma2"}) && enableCandidate.InnerText.Equals({\cf22 "true"}))\par
00406                     \{\par
00407                         var levelCandidate = candidate[{\cf22 "level"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00408                         var levelDecimalCandidate = candidate[{\cf22 "levelDecimal"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00409                         this.Information[{\cf22 "Easy Decimal"}] = levelCandidate.InnerText + {\cf22 "."} + levelDecimalCandidate.InnerText;\par
00410                         var musicLevelIDCandidate = candidate[{\cf22 "musicLevelID"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00411                         var notesDesignerCandidate = candidate[{\cf22 "notesDesigner"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00412                         notesDesignerCandidate = notesDesignerCandidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00413                         var fileCandidate = candidate[{\cf22 "file"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00414                         fileCandidate = fileCandidate[{\cf22 "path"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00415                         this.Information[{\cf22 "Easy"}] = level[Int32.Parse(musicLevelIDCandidate.InnerText) - 1];\par
00416                         this.Information[{\cf22 "Easy Chart Maker"}] = notesDesignerCandidate.InnerText;\par
00417                         this.Information[{\cf22 "Easy Chart Path"}] = fileCandidate.InnerText;\par
00418                     \}\par
00419 \par
00420                 \}\par
00421                 {\cf19 catch} (Exception ex)\par
00422                 \{\par
00423                     Console.WriteLine({\cf22 "There is no such chart: "} + ex.Message);\par
00424                 \}\par
00425             \}\par
00426 \par
00427             {\cf19 foreach} (XmlNode candidate {\cf19 in} bpmCandidate)\par
00428             \{\par
00429                 \{\par
00430                     {\cf19 if} (this.TrackBPM.Equals({\cf22 ""}))\par
00431                     \{\par
00432                         this.TrackBPM = candidate.InnerText;\par
00433                     \}\par
00434                 \}\par
00435             \}\par
00436 \par
00437             {\cf19 foreach} (XmlNode candidate {\cf19 in} sortNameCandidate)\par
00438             \{\par
00439                 \{\par
00440                     {\cf19 if} (this.TrackSortName.Equals({\cf22 ""}))\par
00441                     \{\par
00442                         this.TrackSortName = candidate.InnerText;\par
00443                     \}\par
00444                 \}\par
00445             \}\par
00446 \par
00447             {\cf19 foreach} (XmlNode candidate {\cf19 in} composerCandidate)\par
00448             \{\par
00449                 \{\par
00450                     {\cf19 if} (this.TrackComposer.Equals({\cf22 ""}))\par
00451                     \{\par
00452                         var strCandidate = candidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00453                         this.TrackComposer = strCandidate.InnerText;\par
00454                     \}\par
00455                 \}\par
00456             \}\par
00457 \par
00458             {\cf19 foreach} (XmlNode candidate {\cf19 in} genreCandidate)\par
00459             \{\par
00460                 \{\par
00461                     {\cf19 if} (this.TrackGenre.Equals({\cf22 ""}))\par
00462                     \{\par
00463                         var strCandidate = candidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00464                         this.TrackGenre = strCandidate.InnerText;\par
00465                     \}\par
00466                 \}\par
00467             \}\par
00468 \par
00469             {\cf19 foreach} (XmlNode candidate {\cf19 in} versionNumberCandidate)\par
00470             \{\par
00471                 \{\par
00472                     {\cf19 if} (this.TrackVersionNumber.Equals({\cf22 ""}))\par
00473                     \{\par
00474                         var strCandidate = candidate[{\cf22 "str"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00475                         this.TrackVersionNumber = strCandidate.InnerText;\par
00476                     \}\par
00477                 \}\par
00478             \}\par
00479 \par
00480             {\cf19 foreach} (XmlNode candidate {\cf19 in} addVersionCandidate)\par
00481             \{\par
00482                 \{\par
00483                     {\cf19 if} (this.TrackVersion.Equals({\cf22 ""}))\par
00484                     \{\par
00485                         var idCandidate = candidate[{\cf22 "id"}] ?? {\cf19 throw} {\cf17 new} NullReferenceException();\par
00486                         this.TrackVersion = version[Int32.Parse(idCandidate.InnerText)];\par
00487                     \}\par
00488                 \}\par
00489             \}\par
00490             this.Information[{\cf22 "SDDX Suffix"}] = this.StandardDeluxeSuffix;\par
00491         \}\par
00492     \}\par
00493 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
